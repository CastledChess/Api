var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.108,1,3.028]],["body/classes/AllExceptionsFilter.html",[0,0.079,1,3.323,2,0.901,3,0.139,4,0.139,5,0.126,6,5.698,7,2.482,8,4.272,9,5.108,10,0.194,11,0.827,12,3.55,13,1.98,14,3.485,15,1.099,16,4.903,17,4.272,18,4.272,19,4.272,20,4.272,21,1.335,22,1.656,23,0.016,24,1.673,25,4.272,26,0.633,27,2.866,28,4.272,29,5.108,30,5.662,31,2.866,32,1.496,33,1.124,34,0.398,35,1.222,36,6.761,37,1.739,38,5.245,39,4.272,40,2.866,41,3.273,42,2.319,43,4.424,44,1.479,45,6.761,46,1.19,47,5.662,48,4.272,49,2.866,50,3.892,51,2.567,52,3.222,53,3.323,54,4.272,55,2.866,56,3.7,57,2.638,58,5.662,59,4.272,60,2.205,61,4.272,62,2.469,63,4.424,64,4.272,65,4.272,66,4.272,67,4.272,68,1.586,69,4.272,70,6.35,71,3.7,72,2.04,73,4.272,74,4.272,75,2.866,76,4.272,77,6.35,78,2.205,79,2.63,80,3.323,81,3.323,82,3.7,83,4.272,84,0.166,85,4.424,86,2.482,87,0.578,88,0.139,89,3.462,90,1.983,91,2.482,92,2.866,93,1.764,94,2.866,95,2.04,96,2.866,97,2.866,98,2.866,99,2.866,100,2.866,101,3.042,102,2.482,103,2.866,104,2.229,105,2.866,106,2.866,107,2.866,108,2.454,109,1.314,110,3.7,111,2.866,112,2.866,113,2.866,114,2.866,115,2.866,116,0.371,117,2.229,118,2.482,119,0.008,120,0.008]],["title/entities/Analysis.html",[121,1.509,122,1.814]],["body/entities/Analysis.html",[0,0.121,3,0.213,4,0.213,5,0.193,10,0.391,11,1.116,23,0.016,26,0.707,33,1.07,34,0.554,51,2.445,84,0.397,88,0.213,116,0.747,119,0.011,120,0.011,121,1.703,122,3,123,2.267,124,3.805,125,4.584,126,4.245,127,4.584,128,2.247,129,4.584,130,4.486,131,1.432,132,5.767,133,4.393,134,3.569,135,3.417,136,5.767,137,4.486,138,3.805,139,4.994,140,4.393,141,4.103,142,4.393,143,3.417,144,5.767,145,4.106,146,4.393,147,4.994,148,4.393,149,4.393,150,4.584,151,4.486,152,4.486,153,3.417,154,1.703,155,2.152,156,2.976,157,2.704,158,2.704,159,2.539,160,4.393,161,4.393,162,3.333,163,4.393,164,1.862,165,1.381,166,2.897]],["title/controllers/AnalysisController.html",[167,1.509,168,2.772]],["body/controllers/AnalysisController.html",[0,0.059,3,0.103,4,0.103,5,0.093,10,0.144,13,0.823,15,0.871,21,1.97,22,1.227,23,0.016,26,0.526,32,1.303,33,1.202,34,0.541,35,1.064,37,1.356,44,1.416,46,1.596,50,3.606,51,2.384,78,1.748,81,4.374,84,0.384,87,0.428,88,0.103,90,0.695,95,5.043,108,0.86,109,1.356,116,0.872,119,0.007,120,0.007,122,1.579,128,2.009,131,1.064,154,0.823,159,1.227,165,2.036,167,0.823,168,2.412,169,0.86,170,1.838,171,1.306,172,2.603,173,3.289,174,2.934,175,3.289,176,4.228,177,3.662,178,1.838,179,3.891,180,3.755,181,2.412,182,5.623,183,2.122,184,2.122,185,2.934,186,5.754,187,2.122,188,2.122,189,2.746,190,1.838,191,2.934,192,3.066,193,3.662,194,2.981,195,4.271,196,4.363,197,4.228,198,4.827,199,2.122,200,5.623,201,4.374,202,3.707,203,4.374,204,3.25,205,2.934,206,4.003,207,4.228,208,4.003,209,2.122,210,2.122,211,1.651,212,3.754,213,2.635,214,2.412,215,3.182,216,2.934,217,0.982,218,3.388,219,2.122,220,2.934,221,2.122,222,2.122,223,2.122,224,5.623,225,5.623,226,2.364,227,3.754,228,1.718,229,1.838,230,2.635,231,2.122,232,4.18,233,2.122,234,2.122,235,2.122,236,3.754,237,3.754,238,1.838,239,4.18,240,2.085,241,2.122,242,2.122,243,2.122,244,2.234,245,1.838,246,1.838,247,4.827,248,2.934,249,1.838,250,5.275,251,1.511,252,2.603,253,1.838,254,1.511,255,1.838,256,1.511,257,2.412,258,3.461,259,3.754,260,3.662,261,4.44,262,0.568,263,1.306,264,1.838,265,1.511,266,2.934,267,1.838,268,0.9,269,1.651,270,1.511,271,2.122,272,2.234,273,1.838,274,1.095,275,2.085,276,1.838,277,1.651,278,1.511,279,1.039,280,2.122,281,1.651,282,1.157,283,3.247,284,1.838,285,2.122,286,4.18,287,2.085,288,2.122,289,2.122,290,2.635,291,2.122,292,3.662,293,1.838,294,3.388,295,2.122,296,1.838,297,2.122,298,3.388,299,2.122,300,2.122,301,2.122,302,2.122,303,2.122]],["title/modules/AnalysisModule.html",[304,1.224,305,2.567]],["body/modules/AnalysisModule.html",[0,0.131,3,0.231,4,0.231,5,0.209,23,0.016,84,0.452,87,0.959,88,0.231,119,0.012,120,0.012,122,2.215,134,2.973,155,2.328,168,4.76,169,2.459,252,4.581,253,4.117,270,3.384,304,2.102,305,5.139,306,2.111,307,2.215,308,2.453,309,2.453,310,2.215,311,3.45,312,2.453,313,4.117,314,4.117,315,4.302,316,4.302,317,3.132,318,2.453,319,2.453,320,4.754,321,4.754,322,2.926,323,2.015,324,4.117,325,3.309,326,4.117,327,3.134,328,2.16,329,4.117,330,4.117,331,2.926,332,2.748,333,3.698,334,2.453,335,4.754]],["title/entities/AnalysisMove.html",[121,1.509,134,1.907]],["body/entities/AnalysisMove.html",[0,0.106,3,0.255,4,0.186,5,0.168,10,0.26,11,1.018,21,2.45,23,0.016,26,0.698,33,0.976,34,0.546,35,1.061,44,1.105,51,2.229,68,1.421,84,0.406,88,0.186,116,0.681,117,2.977,119,0.01,120,0.01,121,1.484,122,3.452,123,1.975,131,1.412,134,2.575,135,2.977,137,5.27,138,3.315,139,4.553,141,4.046,143,4.089,150,4.275,151,4.671,152,4.089,154,1.484,155,1.875,156,2.713,157,2.356,158,2.356,164,1.623,165,1.888,166,3.466,191,3.315,196,2.725,202,2.524,204,2.212,214,2.725,217,1.524,325,3.816,327,2.524,328,2.599,336,4.727,337,2.977,338,4.275,339,3.959,340,3.959,341,4.671,342,5.257,343,5.257,344,3.828,345,5.257,346,3.828,347,3.315,348,5.028,349,5.028,350,2.087,351,3.828,352,5.257,353,5.257,354,3.828,355,3.828,356,3.828,357,3.828,358,3.315,359,3.315,360,3.828,361,3.828,362,3.828,363,3.828,364,3.828,365,3.315,366,2.977,367,1.783,368,2.977,369,2.524,370,3.828,371,3.315,372,3.828,373,3.315,374,3.315,375,2.725,376,3.315]],["title/classes/AnalysisMoveResponseDto.html",[0,0.108,377,2.396]],["body/classes/AnalysisMoveResponseDto.html",[0,0.151,2,1.015,3,0.226,4,0.157,5,0.142,10,0.219,11,0.902,15,1.199,23,0.016,24,1.057,26,0.71,32,0.797,33,0.599,34,0.571,35,1.104,37,0.83,42,1.884,46,1.26,68,2.225,84,0.406,88,0.157,90,1.057,93,2.869,109,0.83,116,0.708,117,2.51,119,0.009,120,0.009,131,1.411,134,3.113,155,1.581,162,2.694,164,1.976,165,1.015,194,1.889,217,1.352,262,0.864,274,2.405,324,2.795,328,2.607,338,4.526,339,3.608,340,4.191,348,3.626,349,4.256,358,2.795,359,2.795,366,3.626,367,3.087,368,3.626,377,3.913,378,4.716,379,1.986,380,4.204,381,3.073,382,3.073,383,3.896,384,3.319,385,2.793,386,4.862,387,6.357,388,3.227,389,3.227,390,3.952,391,2.07,392,3.227,393,3.227,394,3.227,395,3.319,396,1.591,397,3.319,398,3.073,399,3.319,400,2.405,401,2.51,402,2.795,403,3.952,404,3.227,405,2.795,406,3.368,407,2.694,408,2.298,409,2.298,410,2.298,411,4.662,412,2.51,413,2.536,414,2.51,415,2.298,416,2.298,417,2.298,418,2.298,419,2.298,420,2.51,421,2.51,422,4.661,423,3.227,424,3.626,425,3.227,426,2.405,427,3.073,428,2.283,429,4.739,430,1.251,431,1.986,432,1.986,433,2.51,434,1.759,435,2.51,436,3.227,437,2.51,438,3.227,439,2.795,440,3.227,441,3.227,442,3.227,443,3.227,444,3.227,445,3.227,446,3.227,447,3.227,448,2.51,449,3.227,450,2.51,451,3.227,452,2.51,453,3.227]],["title/classes/AnalysisResponseDto.html",[0,0.108,272,2.567]],["body/classes/AnalysisResponseDto.html",[0,0.1,2,1.144,3,0.177,4,0.177,5,0.16,10,0.247,11,0.982,15,1.305,23,0.016,24,1.191,26,0.73,32,0.899,33,0.675,34,0.579,35,0.734,37,0.936,51,2.151,84,0.367,88,0.177,90,1.191,93,3.124,109,0.936,116,0.757,119,0.01,120,0.01,122,3.211,125,4.161,126,3.854,127,4.161,129,4.161,130,3.948,131,1.455,162,2.934,164,2.151,194,2.056,262,0.974,270,2.59,272,4.386,274,1.877,328,1.295,350,2.767,377,3.893,378,4.906,379,2.239,380,4.353,381,3.346,382,3.346,383,4.161,384,3.613,396,1.995,400,1.877,406,4.095,407,3.845,408,2.59,409,2.59,410,2.59,411,4.92,412,2.83,413,2.625,414,2.83,415,2.59,416,2.59,417,2.59,418,2.59,419,2.59,420,2.83,421,2.83,432,2.239,433,2.83,434,1.983,437,2.83,448,2.83,450,2.83,452,2.83,454,3.638,455,3.151,456,3.151,457,5.062,458,5.062,459,3.948,460,4.396,461,4.396,462,5.075,463,3.638,464,4.396,465,3.638,466,5.075,467,3.638,468,3.151,469,3.151,470,3.151,471,3.151,472,2.59,473,3.638,474,2.59,475,3.638,476,3.638,477,3.638,478,3.638,479,3.638,480,3.638,481,3.638,482,3.638,483,3.638,484,3.638,485,3.638,486,3.638,487,3.638,488,3.638]],["title/injectables/AnalysisService.html",[252,2.396,489,0.924]],["body/injectables/AnalysisService.html",[0,0.051,3,0.089,4,0.089,5,0.081,10,0.124,12,3.065,13,1.716,15,0.773,23,0.016,24,1.898,26,0.598,32,1.483,33,1.114,34,0.468,35,1.211,37,1.628,41,2.558,44,1.484,46,1.028,60,0.945,68,1.116,78,2.711,79,1.85,84,0.358,87,0.369,88,0.089,90,1.721,108,2.503,109,1.351,116,0.97,119,0.006,120,0.006,122,2.949,125,1.304,126,2.918,127,3.951,128,2.117,129,1.304,154,1.165,159,1.058,162,1.058,165,1.652,172,2.711,173,2.338,174,2.603,175,2.338,177,2.603,178,2.603,179,3.464,181,2.723,186,5.117,189,2.906,190,2.603,192,2.864,194,2.904,196,4.881,202,2.521,203,2.974,204,2.21,205,1.586,206,2.723,208,3.151,211,2.338,213,2.338,214,1.304,217,1.681,220,1.586,226,1.472,227,3.443,228,2.3,238,2.603,239,1.586,240,3.803,245,2.603,252,1.85,254,1.304,255,1.586,266,3.833,267,3.312,268,1.274,269,2.338,270,1.304,272,1.207,273,1.586,274,0.945,275,3.977,284,2.603,287,1.85,290,4.317,292,3.312,296,1.586,316,2.558,323,0.776,328,0.652,330,1.586,339,1.207,341,2.338,366,2.338,373,2.603,375,2.14,391,0.813,489,0.714,490,0.742,491,1.586,492,3.006,493,3.006,494,3.006,495,3.006,496,1.218,497,1.831,498,2.725,499,5.55,500,2.062,501,3.443,502,4.426,503,1.831,504,3.006,505,1.831,506,1.85,507,2.974,508,3.006,509,1.831,510,4.55,511,4.506,512,4.426,513,3.006,514,1.831,515,4.426,516,6.773,517,3.006,518,1.831,519,1.831,520,3.006,521,1.831,522,1.831,523,3.006,524,3.006,525,3.006,526,1.831,527,1.982,528,1.831,529,1.304,530,1.127,531,1.831,532,1.586,533,1.831,534,2.811,535,1.831,536,1.127,537,1.207,538,2.338,539,1.831,540,1.831,541,1.586,542,1.586,543,1.831,544,1.831,545,1.831,546,1.586,547,1.831,548,2.338,549,1.831,550,1.831,551,1.831,552,1.831,553,1.831,554,1.586,555,1.586,556,1.831,557,1.831,558,4.888,559,3.312,560,1.831,561,2.839,562,3.824,563,3.824,564,4.426,565,3.824,566,1.831,567,1.831,568,1.831,569,4.426,570,1.831,571,1.831,572,1.304,573,1.304,574,1.586,575,1.831,576,1.304,577,1.831,578,1.831,579,1.831,580,1.831]],["title/controllers/AppController.html",[167,1.509,581,2.772]],["body/controllers/AppController.html",[0,0.125,3,0.22,4,0.22,5,0.199,10,0.307,13,1.752,15,1.511,23,0.016,26,0.45,34,0.353,37,1.162,44,1.544,46,1.625,50,4.003,72,3.218,82,5.088,84,0.379,87,0.912,88,0.22,109,1.162,116,0.585,119,0.011,120,0.011,131,0.912,167,2.278,169,1.831,180,3.218,215,3.873,258,3.616,261,4.841,262,1.21,282,2.464,283,2.782,367,3.421,532,5.088,581,4.182,582,3.914,583,5.985,584,5.875,585,5.875,586,6.527,587,5.875,588,5.088,589,5.875,590,5.875,591,5.875,592,4.519,593,5.875,594,5.875,595,5.875,596,4.519,597,5.875,598,5.875,599,4.519,600,4.519,601,4.018,602,3.914,603,5.653,604,4.519,605,4.519,606,4.519,607,4.519,608,4.519]],["title/modules/AppModule.html",[304,1.224,609,2.772]],["body/modules/AppModule.html",[0,0.106,3,0.257,4,0.187,5,0.169,23,0.016,42,2.038,44,0.81,57,1.796,84,0.449,87,0.778,88,0.187,119,0.01,120,0.01,165,1.895,169,2.14,201,4.109,217,1.118,268,1.634,304,1.895,305,4.625,306,1.712,307,1.796,308,1.989,309,1.989,310,1.796,311,3.11,312,1.989,317,2.726,318,1.989,319,1.989,332,2.228,334,2.726,391,2.346,500,1.796,537,2.541,546,3.338,581,4.291,601,4.318,602,3.338,603,3.338,609,5.671,610,3.338,611,3.338,612,3.338,613,4.625,614,4.625,615,4.625,616,4.625,617,4.318,618,4.625,619,4.318,620,3.854,621,3.854,622,3.854,623,2.998,624,3.854,625,3.338,626,2.541,627,3.854,628,3.338,629,3.854,630,3.854,631,3.854,632,3.338,633,3.854,634,3.854,635,3.854,636,3.854,637,3.338,638,5.219,639,4.575,640,3.854,641,3.854,642,3.854,643,2.998,644,3.854,645,3.854,646,3.854,647,3.338,648,2.744,649,3.338,650,3.854]],["title/injectables/AppService.html",[489,0.924,601,2.396]],["body/injectables/AppService.html",[0,0.157,3,0.276,4,0.276,5,0.249,10,0.385,15,1.741,23,0.016,26,0.565,34,0.443,37,1.459,50,3.691,72,4.039,84,0.329,87,1.144,88,0.276,109,1.459,116,0.734,119,0.013,120,0.013,489,1.607,490,2.298,583,6.49,601,4.167,651,4.913,652,5.673,653,5.673]],["title/controllers/AuthenticationController.html",[167,1.509,654,2.772]],["body/controllers/AuthenticationController.html",[0,0.074,3,0.129,4,0.129,5,0.117,10,0.181,13,1.033,15,1.04,23,0.016,26,0.487,32,1.208,33,0.907,34,0.482,35,0.986,37,1.589,42,1.716,44,1.566,46,1.6,50,3.693,52,3.486,57,1.885,78,2.817,79,3.36,84,0.393,87,0.538,88,0.129,90,0.873,108,1.981,109,1.257,119,0.008,120,0.008,128,1.418,131,0.986,159,1.54,167,1.033,169,1.08,171,1.64,172,2.515,180,3.48,185,3.503,189,2.619,215,3.599,217,1.964,228,2.612,244,1.757,246,2.308,248,2.308,251,1.897,254,1.897,256,1.897,257,3.886,258,3.36,261,4.554,262,0.713,265,1.897,274,1.375,278,1.897,279,3.711,282,1.453,283,3.009,367,1.885,369,1.757,506,2.49,527,1.757,534,1.183,572,3.48,573,2.88,654,2.88,655,2.308,656,2.664,657,3.503,658,4.805,659,4.045,660,2.664,661,3.612,662,4.571,663,3.503,664,2.664,665,4.045,666,4.727,667,4.045,668,2.664,669,4.805,670,4.398,671,2.664,672,2.664,673,3.503,674,3.155,675,4.234,676,3.915,677,3.886,678,2.664,679,4.178,680,4.727,681,2.664,682,2.664,683,2.664,684,2.664,685,2.664,686,2.664,687,2.664,688,3.503,689,4.234,690,4.889,691,2.664,692,4.071,693,5.458,694,2.664,695,3.503,696,2.664,697,2.664,698,2.664,699,3.146,700,2.88,701,2.88,702,2.338,703,2.073,704,2.073,705,2.88,706,1.897,707,1.897,708,1.897,709,1.757,710,2.308,711,2.664,712,2.664,713,2.308,714,2.49,715,1.897,716,3.146,717,3.503,718,4.246,719,2.664,720,2.664,721,2.664,722,2.664,723,2.664,724,2.664,725,2.664,726,2.664,727,2.664,728,2.664,729,2.664,730,2.664,731,2.664]],["title/modules/AuthenticationModule.html",[304,1.224,613,2.567]],["body/modules/AuthenticationModule.html",[0,0.124,3,0.218,4,0.218,5,0.197,23,0.016,84,0.448,87,0.904,88,0.218,119,0.011,120,0.011,169,2.368,304,2.044,306,1.991,307,2.089,308,2.313,309,2.313,310,2.089,311,3.355,312,3.355,317,3.015,318,2.313,319,2.313,334,3.355,613,5.185,619,4.51,625,5.061,626,2.955,628,3.882,654,4.629,702,4.522,703,3.487,732,3.882,733,4.482,734,3.882,735,3.882,736,4.83,737,4.83,738,4.482,739,4.482,740,4.482,741,5.843,742,2.759,743,4.482,744,3.487,745,3.487,746,4.482,747,4.905,748,4.482,749,4.482,750,3.882,751,3.882,752,4.482]],["title/classes/AuthenticationResponseDto.html",[0,0.108,709,2.567]],["body/classes/AuthenticationResponseDto.html",[0,0.127,2,1.442,3,0.223,4,0.223,5,0.202,10,0.311,11,1.148,23,0.016,26,0.692,32,1.133,33,0.851,34,0.542,35,0.925,44,1.55,46,1.382,84,0.344,88,0.223,116,1.003,119,0.011,120,0.011,128,2.175,131,1.326,228,2.623,262,1.227,279,3.404,379,2.822,385,3.062,413,2.58,496,1.858,658,4.613,676,3.428,677,4.222,709,3.91,753,6.233,754,6.233,755,5.835,756,5.93,757,4.261,758,5.136,759,4.585,760,3.971,761,3.567,762,4.585,763,4.585,764,4.585]],["title/injectables/AuthenticationService.html",[489,0.924,702,2.25]],["body/injectables/AuthenticationService.html",[0,0.057,3,0.101,4,0.101,5,0.091,10,0.141,12,3.065,15,0.857,23,0.016,24,1.563,26,0.606,32,1.503,33,1.129,34,0.475,35,1.227,37,1.774,42,2.305,44,1.483,46,1.231,52,3.517,56,2.887,57,2.223,60,1.72,62,1.202,79,2.052,84,0.364,87,0.42,88,0.101,90,2.055,108,2.543,109,1.505,116,0.949,119,0.006,120,0.006,128,2.249,159,1.202,172,2.487,189,2.839,217,1.764,228,2.534,240,2.052,254,1.481,274,1.073,279,3.708,287,2.052,369,2.198,391,2.859,489,0.791,490,0.843,496,1.351,506,2.052,527,1.372,534,2.119,536,2.052,561,1.633,572,1.481,573,1.481,657,2.887,658,5.292,661,3.215,662,4.583,673,4.133,674,3.517,675,2.887,676,3.517,677,3.397,688,2.887,692,3.603,699,2.593,700,2.374,701,2.374,702,1.927,704,1.618,705,1.481,706,1.481,709,3.146,710,1.802,714,2.937,715,3.397,716,2.593,717,2.887,718,1.618,744,1.618,754,3.613,755,4.881,757,2.411,761,1.618,765,1.802,766,3.334,767,3.334,768,3.334,769,3.334,770,3.334,771,2.08,772,3.221,773,5.854,774,2.08,775,3.334,776,2.08,777,5.573,778,3.397,779,4.772,780,4.772,781,4.772,782,3.334,783,2.08,784,4.133,785,4.772,786,3.334,787,3.334,788,2.08,789,3.334,790,2.08,791,2.887,792,3.334,793,2.08,794,3.334,795,2.887,796,2.887,797,3.334,798,2.08,799,3.334,800,2.08,801,3.334,802,2.08,803,2.593,804,2.08,805,3.334,806,2.08,807,2.08,808,2.08,809,2.08,810,2.08,811,1.802,812,2.593,813,1.802,814,2.08,815,2.08,816,1.944,817,2.08,818,2.887,819,2.593,820,2.887,821,1.633,822,2.593,823,3.334,824,1.802,825,2.08,826,1.802,827,2.08]],["title/classes/BaseDto.html",[0,0.108,380,2.396]],["body/classes/BaseDto.html",[0,0.128,2,1.454,3,0.225,4,0.225,5,0.203,10,0.314,11,1.154,23,0.016,26,0.695,34,0.544,44,1.253,46,0.972,84,0.268,88,0.225,116,0.772,118,5.164,119,0.012,120,0.012,131,1.406,162,3.814,194,2.674,216,5.164,217,2.021,262,1.238,380,3.67,381,4.351,382,4.351,396,2.035,406,4.547,407,3.446,408,4.245,409,4.245,410,4.245,413,2.791,415,4.245,416,4.245,417,4.245,418,4.245,419,4.245,541,5.164,784,6.037,828,4.004,829,5.164,830,5.164,831,5.962,832,5.164,833,5.962,834,5.962,835,5.962,836,4.624,837,4.624,838,4.624,839,4.624,840,4.004]],["title/controllers/ChessController.html",[167,1.509,841,2.772]],["body/controllers/ChessController.html",[0,0.099,3,0.173,4,0.173,5,0.157,10,0.242,13,1.383,15,1.287,23,0.016,26,0.576,32,1.429,33,1.226,34,0.451,35,1.167,37,1.487,41,3.958,42,2.153,46,1.554,50,3.153,52,3.071,60,3.236,68,1.859,80,4.878,84,0.336,87,0.72,88,0.173,89,3.153,108,1.445,109,1.487,116,0.944,119,0.01,120,0.01,131,1.167,167,1.383,169,1.445,171,2.196,172,2.709,180,4.118,192,2.729,215,4.515,217,1.452,226,2.452,230,3.894,258,3.86,259,4.499,261,4.135,262,0.955,282,1.945,283,3.56,328,2.232,367,3.191,391,2.785,459,2.775,821,3.66,841,3.564,842,3.089,843,4.336,844,4.336,845,5.006,846,3.089,847,5.431,848,4.336,849,5.749,850,3.567,851,5.431,852,5.006,853,3.567,854,3.567,855,3.089,856,4.878,857,5.431,858,3.567,859,3.567,860,3.567,861,3.567,862,5.431,863,4.336,864,3.567,865,3.567,866,3.567,867,3.56,868,3.089,869,3.567,870,4.336,871,3.567,872,3.567,873,3.567,874,3.567,875,5.006,876,3.567,877,3.567,878,3.567,879,3.567,880,3.567,881,3.567]],["title/modules/ChessModule.html",[304,1.224,614,2.567]],["body/modules/ChessModule.html",[0,0.144,3,0.254,4,0.254,5,0.23,23,0.016,84,0.423,87,1.055,88,0.254,119,0.012,120,0.012,169,2.61,304,2.195,306,2.322,307,2.436,308,2.698,309,2.698,310,2.436,311,3.603,312,3.603,317,3.324,318,2.698,319,2.698,334,2.698,614,5.092,841,4.971,867,4.917,868,4.528,882,4.528,883,4.528,884,4.528,885,5.228,886,6.442,887,4.066,888,5.228]],["title/interfaces/ChessPlayer.html",[889,2.772,890,2.772]],["body/interfaces/ChessPlayer.html",[3,0.22,4,0.22,5,0.2,10,0.308,11,1.14,23,0.015,33,1.285,34,0.608,35,1.624,50,3.774,51,3.322,88,0.22,102,5.101,116,1.044,119,0.011,120,0.011,821,3.39,889,3.231,890,4.194,891,4.538,892,3.93,893,3.93,894,6.922,895,6.922,896,6.922,897,6.922,898,6.922,899,6.922,900,6.922,901,5.384]],["title/injectables/ChessService.html",[489,0.924,867,2.396]],["body/injectables/ChessService.html",[0,0.071,3,0.126,4,0.126,5,0.114,10,0.175,11,0.765,12,2.845,13,2.463,14,3.308,15,1.017,16,5.016,21,1.842,22,2.285,23,0.016,24,1.295,26,0.653,32,1.509,33,1.133,34,0.496,35,1.232,37,1.489,41,3.787,42,1.69,44,1.284,46,0.544,51,2.589,52,2.633,60,2.477,68,2.359,80,3.075,84,0.312,87,0.522,88,0.126,89,2.93,90,2.39,93,3.565,101,5.196,108,1.048,109,1.489,116,0.953,119,0.008,120,0.008,172,2.71,189,1.676,192,2.156,212,4.505,217,1.559,226,3.209,230,3.075,282,1.41,328,1.708,367,2.504,376,5.016,391,2.822,489,0.938,490,1.048,496,1.048,534,2.572,561,2.837,821,3.462,830,5.935,843,3.424,844,3.424,846,3.424,847,4.157,848,4.655,849,5.421,851,3.424,855,3.424,856,4.942,857,4.157,862,4.157,863,3.424,867,2.434,870,3.424,887,2.012,890,1.841,901,4.942,902,2.24,903,4.8,904,3.954,905,3.954,906,3.954,907,2.586,908,5.375,909,3.954,910,3.424,911,2.586,912,3.954,913,2.586,914,3.954,915,3.954,916,3.954,917,2.586,918,3.954,919,4.8,920,4.8,921,2.586,922,2.586,923,3.954,924,3.954,925,2.586,926,2.586,927,2.24,928,2.586,929,2.586,930,5.791,931,2.586,932,5.791,933,5.791,934,5.791,935,2.586,936,2.586,937,2.586,938,2.586,939,2.586]],["title/classes/CreateAnalysisDto.html",[0,0.108,179,2.567]],["body/classes/CreateAnalysisDto.html",[0,0.153,2,1.036,3,0.23,4,0.16,5,0.145,10,0.223,11,0.916,23,0.016,26,0.603,34,0.536,42,1.488,44,1.402,46,1.272,51,2.006,53,3.68,68,2.477,84,0.351,88,0.16,116,0.613,119,0.009,120,0.009,125,3.942,126,3.65,127,3.942,129,3.942,130,3.68,131,1.221,165,1.036,179,3.12,192,1.796,214,3.369,217,1.755,262,0.882,274,1.7,328,1.97,338,2.346,339,2.172,340,2.172,377,3.725,385,2.819,396,2.4,397,3.369,398,3.65,399,3.942,400,3.443,401,2.563,406,2.912,413,2.379,424,3.68,426,3.307,428,2.318,429,4.098,430,1.277,431,2.028,432,2.028,434,3.494,435,2.563,457,4.795,458,4.795,459,3.68,460,4.098,461,4.098,464,2.853,468,2.853,469,2.853,470,2.853,471,2.853,472,2.346,474,2.346,940,5.55,941,2.853,942,4.732,943,6.671,944,3.295,945,3.295,946,6.051,947,3.295,948,3.295,949,3.295,950,4.732,951,4.732,952,4.732,953,4.732,954,4.732,955,4.732,956,6.051,957,4.732,958,4.732,959,4.732,960,3.295,961,4.732,962,4.732,963,3.295,964,3.295,965,4.098,966,4.732,967,3.295,968,3.295,969,4.732,970,3.295,971,3.295,972,3.295,973,3.295,974,3.295,975,3.295,976,3.295,977,3.295,978,3.295,979,3.295,980,3.295,981,3.295,982,3.295,983,3.295,984,3.295,985,3.295,986,2.563,987,3.68,988,4.562,989,2.563,990,2.563,991,2.563,992,2.563,993,2.346,994,2.563,995,2.853,996,2.346,997,2.853,998,2.563,999,2.563,1000,2.853,1001,2.563,1002,2.853,1003,2.563,1004,2.853,1005,2.563,1006,2.853,1007,2.563,1008,2.853,1009,2.563,1010,4.098,1011,2.563,1012,2.563,1013,2.853,1014,3.295,1015,3.295,1016,3.295,1017,2.853,1018,3.295,1019,3.295,1020,4.732]],["title/classes/CreateUserDto.html",[0,0.108,692,2.396]],["body/classes/CreateUserDto.html",[0,0.154,2,1.315,3,0.203,4,0.203,5,0.184,10,0.284,11,1.081,23,0.016,26,0.668,34,0.523,43,4.444,46,1.41,84,0.365,88,0.203,116,0.965,119,0.011,120,0.011,128,2.162,131,1.353,262,1.12,268,1.774,350,3.656,385,3.124,396,2.544,413,2.594,426,3.605,428,2.735,430,1.622,500,1.95,692,3.437,816,3.255,821,3.422,1021,6.05,1022,3.255,1023,5.443,1024,4.516,1025,4.836,1026,4.836,1027,4.774,1028,4.184,1029,3.255,1030,3.624,1031,4.184,1032,3.624,1033,3.624,1034,5.443,1035,3.437,1036,2.576,1037,2.419,1038,3.255,1039,4.774,1040,3.255,1041,2.759,1042,4.343,1043,4.836]],["title/classes/CustomBaseEntity.html",[0,0.108,156,2.009]],["body/classes/CustomBaseEntity.html",[0,0.138,2,1.576,3,0.244,4,0.244,5,0.22,10,0.34,11,1.215,23,0.016,26,0.716,33,1.272,34,0.56,84,0.291,88,0.244,116,0.813,119,0.012,120,0.012,131,1.449,154,1.944,156,3.239,162,3.961,194,2.776,381,4.518,382,4.518,406,4.644,840,4.342,1044,6.404,1045,4.342,1046,5.014,1047,6.277,1048,5.014,1049,5.014,1050,6.277,1051,5.014,1052,6.277,1053,5.014,1054,5.014,1055,6.277,1056,5.014,1057,6.277,1058,6.277,1059,5.014,1060,6.277]],["title/modules/DatabaseModule.html",[304,1.224,615,2.567]],["body/modules/DatabaseModule.html",[0,0.149,3,0.262,4,0.262,5,0.237,21,2.514,23,0.016,33,1.219,84,0.438,87,1.088,88,0.262,119,0.013,120,0.013,304,2.065,306,2.396,322,3.321,323,2.287,334,2.784,615,4.33,626,3.557,747,5.041,750,5.687,751,5.687,1061,5.394,1062,5.108,1063,6.567,1064,5.108,1065,5.394,1066,6.567,1067,3.841]],["title/controllers/ElitedbController.html",[167,1.509,1068,2.772]],["body/controllers/ElitedbController.html",[0,0.125,3,0.219,4,0.219,5,0.198,10,0.306,13,1.749,15,1.509,21,2.101,23,0.016,24,1.477,26,0.449,32,1.114,33,1.089,34,0.509,35,0.91,37,1.16,46,1.233,68,2.178,84,0.378,87,0.91,88,0.219,89,2.459,90,1.921,108,1.827,109,1.16,116,0.927,119,0.011,120,0.011,131,0.91,165,2.05,167,1.749,169,1.827,171,2.776,172,2.421,195,3.868,232,5.081,249,5.081,260,5.081,262,1.207,282,2.459,340,4.995,395,4.177,396,2.002,397,4.642,398,4.299,399,4.642,400,3.365,434,3.555,534,2.003,561,2.209,1067,3.211,1068,4.177,1069,3.906,1070,5.867,1071,4.51,1072,4.51,1073,4.51,1074,5.647,1075,4.51,1076,3.906,1077,3.906,1078,4.014,1079,3.906,1080,4.51,1081,3.906,1082,3.906,1083,4.51,1084,4.51,1085,4.51,1086,4.51,1087,3.906,1088,4.51,1089,4.51,1090,4.51,1091,4.51]],["title/modules/ElitedbModule.html",[304,1.224,616,2.567]],["body/modules/ElitedbModule.html",[0,0.146,3,0.256,4,0.256,5,0.232,23,0.016,84,0.436,87,1.065,88,0.256,119,0.013,120,0.013,155,2.585,169,2.626,304,2.205,306,2.344,307,2.459,308,2.724,309,2.724,310,2.459,311,3.619,312,2.724,317,3.344,318,2.724,319,2.724,322,3.249,323,2.237,334,2.724,616,5.037,1067,3.758,1068,4.992,1078,4.703,1079,4.571,1092,4.571,1093,4.571,1094,5.278,1095,5.278,1096,3.48,1097,4.571,1098,5.278]],["title/entities/ElitedbMove.html",[121,1.509,1096,2.567]],["body/entities/ElitedbMove.html",[0,0.132,3,0.233,4,0.233,5,0.211,10,0.414,11,1.181,21,3.128,23,0.016,26,0.727,34,0.569,51,3.162,84,0.278,88,0.233,116,0.915,119,0.012,120,0.012,121,1.859,123,2.474,131,1.472,141,4.084,153,3.73,154,1.859,165,1.507,337,3.73,395,4.779,400,3.849,472,4.779,474,4.779,993,5.031,1096,4.024,1099,6.46,1100,6.713,1101,5.814,1102,4.795,1103,4.795,1104,7.297,1105,4.795,1106,4.795,1107,4.795,1108,4.795,1109,4.795]],["title/injectables/ElitedbService.html",[489,0.924,1078,2.396]],["body/injectables/ElitedbService.html",[0,0.14,3,0.246,4,0.246,5,0.223,10,0.344,12,2.363,13,1.966,15,1.626,23,0.016,26,0.63,32,1.562,33,1.173,34,0.493,35,1.275,37,1.304,84,0.418,87,1.023,88,0.246,89,2.765,109,1.304,116,0.892,119,0.012,120,0.012,155,2.484,172,2.557,323,2.15,395,3.611,489,1.501,490,2.055,496,2.561,498,4.439,530,3.122,1067,3.611,1078,3.891,1087,5.475,1096,3.344,1097,4.392,1110,4.392,1111,6.322,1112,5.071,1113,5.071,1114,6.322,1115,6.322,1116,5.071,1117,5.071,1118,5.071,1119,5.071]],["title/classes/GetUserByEmailDto.html",[0,0.108,1120,2.567]],["body/classes/GetUserByEmailDto.html",[0,0.192,2,1.624,3,0.251,4,0.251,5,0.227,10,0.35,11,1.238,23,0.016,26,0.515,34,0.403,44,1.46,46,1.46,84,0.371,88,0.311,116,0.899,119,0.012,120,0.012,131,1.042,165,1.624,194,2.093,195,3.407,228,2.276,262,1.383,396,2.183,407,2.986,413,2.579,426,3.584,430,2.003,816,3.476,1035,3.937,1037,3.697,1120,4.217,1121,4.975,1122,3.407,1123,5.167,1124,5.167,1125,5.539,1126,3.407,1127,4.019,1128,4.019,1129,4.019,1130,4.019,1131,4.019,1132,4.019]],["title/classes/GetUserByIdDto.html",[0,0.108,1126,2.567]],["body/classes/GetUserByIdDto.html",[0,0.191,2,1.602,3,0.247,4,0.247,5,0.224,10,0.346,11,1.227,23,0.016,26,0.508,34,0.397,44,1.451,46,1.451,84,0.368,88,0.308,116,0.894,119,0.012,120,0.012,131,1.028,165,1.602,194,2.797,195,4.18,228,2.456,262,1.364,396,2.164,407,2.945,413,2.563,426,3.562,430,1.975,816,2.954,1035,3.903,1037,2.945,1120,3.359,1121,4.932,1122,3.359,1125,5.491,1126,4.18,1127,4.932,1128,4.932,1129,4.932,1130,4.932,1131,4.932,1132,4.932,1133,5.095,1134,5.095]],["title/entities/InfoResult.html",[121,1.509,325,2.123]],["body/entities/InfoResult.html",[0,0.095,3,0.238,4,0.168,5,0.152,10,0.234,11,0.947,23,0.016,26,0.747,33,1.294,34,0.611,35,1.568,51,3.179,84,0.33,88,0.168,116,0.922,119,0.009,120,0.009,121,1.339,122,1.61,123,1.783,131,1.513,134,3.547,141,4.334,143,2.687,145,5.156,150,3.485,151,3.807,154,1.339,155,1.692,156,2.526,157,2.127,158,2.127,164,1.465,165,2.444,325,2.669,328,2.023,1001,4.421,1003,4.421,1005,4.421,1007,4.421,1009,4.421,1011,4.421,1012,4.421,1135,5.382,1136,2.992,1137,3.455,1138,4.895,1139,3.455,1140,6.272,1141,4.895,1142,3.455,1143,3.455,1144,6.777,1145,3.455,1146,3.455,1147,3.455,1148,3.455,1149,4.895,1150,4.895,1151,3.455,1152,4.895,1153,3.455,1154,3.455,1155,3.455,1156,4.895,1157,3.455,1158,3.455,1159,3.455]],["title/classes/InfoResultResponseDto.html",[0,0.108,390,2.567]],["body/classes/InfoResultResponseDto.html",[0,0.104,2,0.766,3,0.225,4,0.118,5,0.107,10,0.165,11,0.731,15,0.971,23,0.016,24,0.798,26,0.725,32,0.602,33,0.452,34,0.583,35,1.5,37,0.627,42,2.323,44,1.502,46,1.443,51,2.955,53,4.052,60,1.949,68,1.934,84,0.302,88,0.118,90,0.798,93,2.325,109,0.627,116,0.854,119,0.007,120,0.007,131,1.456,162,2.183,164,1.601,165,1.188,194,1.53,262,0.652,325,3.073,326,2.111,327,1.607,328,1.646,367,2.995,368,5,379,1.5,380,3.829,381,2.491,382,2.491,383,3.293,384,2.689,385,3.199,386,4.577,390,3.717,396,2.578,405,2.111,406,2.847,407,2.183,408,1.735,409,1.735,410,1.735,411,4.052,412,1.896,413,2.653,414,1.896,415,1.735,416,1.735,417,1.735,418,1.735,419,1.735,420,1.896,421,1.896,424,2.938,427,4.446,428,2.921,430,0.945,432,4.348,433,1.896,435,1.896,437,1.896,439,2.111,448,1.896,450,1.896,452,1.896,456,2.111,542,3.271,760,2.111,965,5.387,988,3.709,1001,3.597,1002,2.111,1003,3.597,1004,2.111,1005,3.597,1006,2.111,1007,3.597,1008,2.111,1009,3.597,1010,3.271,1011,3.597,1012,3.597,1160,5.494,1161,5.209,1162,5.209,1163,3.777,1164,3.777,1165,2.437,1166,5.209,1167,5.209,1168,2.437,1169,2.437,1170,2.437,1171,6.428,1172,4.625,1173,2.437,1174,5.209,1175,3.777,1176,3.777,1177,3.777,1178,2.437,1179,2.437,1180,2.437,1181,2.437,1182,2.437,1183,2.437,1184,2.437,1185,3.777,1186,2.437,1187,3.777,1188,2.437,1189,3.777,1190,2.437,1191,2.437,1192,2.437,1193,2.437,1194,2.437,1195,2.437,1196,2.437,1197,2.437,1198,2.437,1199,2.437,1200,2.437,1201,2.437,1202,2.437,1203,2.437,1204,2.437,1205,2.437,1206,2.437,1207,2.111,1208,2.437,1209,2.111,1210,2.437,1211,2.437,1212,2.437,1213,2.437,1214,2.437,1215,2.437]],["title/modules/InfoResultsModule.html",[304,1.224,617,2.396]],["body/modules/InfoResultsModule.html",[0,0.144,3,0.313,4,0.254,5,0.23,23,0.016,84,0.423,87,1.055,88,0.254,119,0.012,120,0.012,304,2.195,306,2.322,307,2.436,308,2.698,309,2.698,310,2.436,311,3.603,312,3.603,315,4.617,317,3.324,318,2.698,319,2.698,322,3.218,323,2.216,325,2.85,327,3.447,331,3.218,332,3.022,333,4.066,334,2.698,617,4.754,1135,3.722,1216,4.528,1217,5.228,1218,4.528,1219,5.228,1220,5.228]],["title/injectables/InfoResultsService.html",[315,2.25,489,0.924]],["body/injectables/InfoResultsService.html",[0,0.117,3,0.205,4,0.205,5,0.186,10,0.287,12,1.968,13,1.638,15,1.445,23,0.016,26,0.56,32,1.388,33,1.043,34,0.438,35,1.134,37,1.086,42,1.767,44,1.181,46,0.888,52,2.752,84,0.418,87,0.852,88,0.205,90,1.383,108,2.559,119,0.011,120,0.011,134,3.772,154,1.638,155,2.069,172,2.345,189,2.382,217,1.952,274,2.18,315,3.248,323,1.791,325,2.303,327,2.785,331,3.887,332,3.65,336,2.785,339,3.705,375,4.001,390,4.438,432,2.6,489,1.334,490,1.712,496,2.277,498,4.143,506,3.459,530,2.6,534,1.876,538,4.371,548,5.605,700,4.001,1135,3.008,1160,3.286,1221,3.659,1222,6.315,1223,4.224,1224,4.224,1225,5.62,1226,4.224,1227,5.83,1228,4.224,1229,5.83,1230,6.315,1231,4.867,1232,5.62,1233,4.224,1234,4.224,1235,4.224,1236,4.224,1237,4.224]],["title/injectables/JwtAuthGuard.html",[263,2.396,489,0.924]],["body/injectables/JwtAuthGuard.html",[0,0.127,3,0.358,4,0.223,5,0.202,10,0.311,15,1.525,23,0.016,24,2.152,26,0.457,32,1.465,33,0.851,34,0.463,35,0.925,37,1.179,84,0.403,87,0.925,88,0.223,101,4.679,109,1.179,110,5.136,119,0.011,120,0.011,128,2.138,159,2.65,164,2.514,166,3.023,263,3.65,279,2.246,489,1.408,490,1.858,561,3.219,576,5.248,715,3.264,742,2.822,812,3.567,1238,4.613,1239,3.567,1240,5.93,1241,6.573,1242,4.585,1243,7.371,1244,7.196,1245,7.196,1246,4.585,1247,6.573,1248,3.971,1249,4.585,1250,4.585,1251,4.585,1252,4.585]],["title/classes/JwtPayloadDto.html",[0,0.108,1253,2.772]],["body/classes/JwtPayloadDto.html",[0,0.159,2,1.811,3,0.28,4,0.28,5,0.253,10,0.391,11,1.322,23,0.015,26,0.681,34,0.533,88,0.28,116,0.975,119,0.013,120,0.013,820,6.308,821,3.567,1253,4.864,1254,6.308,1255,4.99,1256,5.762,1257,5.762]],["title/injectables/JwtStrategy.html",[489,0.924,736,2.567]],["body/injectables/JwtStrategy.html",[0,0.136,3,0.239,4,0.239,5,0.216,10,0.333,15,1.594,23,0.016,26,0.618,32,1.531,33,1.15,34,0.483,35,1.25,37,1.263,84,0.426,87,0.991,88,0.239,89,2.678,109,1.263,119,0.012,120,0.012,164,2.627,166,3.239,172,2.521,194,1.991,489,1.471,490,1.991,496,1.991,626,3.239,736,4.086,742,3.024,747,5.233,778,3.498,818,4.255,821,2.406,1253,5.076,1258,4.255,1259,5.367,1260,4.82,1261,6.197,1262,4.913,1263,6.197,1264,4.913,1265,4.913,1266,4.255,1267,3.821,1268,4.255,1269,4.913,1270,4.913,1271,4.255,1272,4.913,1273,4.913,1274,4.913,1275,4.913,1276,4.255,1277,4.913,1278,4.913]],["title/injectables/LocalAuthGuard.html",[489,0.924,707,2.772]],["body/injectables/LocalAuthGuard.html",[0,0.174,3,0.204,4,0.204,5,0.185,10,0.285,15,1.441,23,0.016,24,1.378,26,0.419,32,1.04,33,0.781,34,0.437,35,0.849,37,1.082,42,1.323,44,1.413,57,1.961,60,2.893,62,2.432,63,3.645,68,2.081,84,0.418,85,3.645,86,3.645,87,0.849,88,0.204,89,2.294,90,2.201,95,4.487,109,1.082,116,0.726,119,0.011,120,0.011,164,2.376,172,2.34,189,1.784,217,1.828,226,2.061,228,1.498,240,2.59,244,2.775,369,2.775,391,1.869,400,2.172,430,1.631,431,2.59,489,1.33,490,1.705,534,1.869,561,2.061,588,3.645,661,3.88,662,2.996,669,3.273,670,2.996,676,3.24,689,3.645,704,3.273,705,2.996,707,3.991,708,2.996,742,2.59,795,3.645,1239,3.273,1248,3.645,1260,3.273,1279,4.855,1280,5.605,1281,5.605,1282,5.605,1283,5.821,1284,4.208,1285,4.208,1286,6.303,1287,3.645,1288,4.208,1289,4.208,1290,4.208,1291,4.208,1292,4.208,1293,4.208,1294,4.208,1295,3.273,1296,4.208,1297,4.208,1298,4.208,1299,4.208,1300,4.208,1301,4.208,1302,4.208,1303,4.208,1304,4.208,1305,4.208,1306,4.208,1307,4.208,1308,4.208,1309,4.208,1310,4.208,1311,4.208,1312,4.208,1313,4.208,1314,4.208,1315,4.208,1316,3.273]],["title/injectables/LocalStrategy.html",[489,0.924,737,2.567]],["body/injectables/LocalStrategy.html",[0,0.112,3,0.198,4,0.198,5,0.179,10,0.276,15,1.409,23,0.016,24,1.332,26,0.546,32,1.354,33,1.017,34,0.427,35,1.106,37,1.409,42,1.723,44,1.578,46,0.855,57,2.887,62,3.167,84,0.402,87,0.821,88,0.198,90,1.332,108,2.22,109,1.046,116,0.923,119,0.011,120,0.011,128,1.922,159,2.352,164,2.323,172,2.301,189,2.323,192,2.988,206,3.901,217,2.007,228,2.636,282,2.218,369,4.085,391,2.433,489,1.301,490,1.648,496,1.648,534,1.807,561,1.993,662,2.896,676,4,702,3.832,703,3.164,708,2.896,713,4.746,714,2.504,715,3.901,716,3.164,737,3.613,742,2.504,812,3.164,813,3.523,816,3.089,1024,4.26,1259,4.746,1260,4.262,1266,3.523,1267,4.82,1268,3.523,1271,3.523,1317,3.523,1318,4.068,1319,4.068,1320,5.48,1321,4.068,1322,5.48,1323,5.48,1324,5.48,1325,6.63,1326,3.901,1327,3.901,1328,3.901,1329,5.48,1330,4.068,1331,4.068]],["title/classes/LoginRequestDto.html",[0,0.108,661,2.396]],["body/classes/LoginRequestDto.html",[0,0.168,2,1.501,3,0.232,4,0.232,5,0.21,10,0.324,11,1.178,23,0.016,26,0.606,34,0.475,42,1.913,43,4.212,44,1.566,46,1.279,84,0.389,88,0.232,116,0.913,119,0.012,120,0.012,131,1.228,228,2.511,262,1.278,268,2.024,350,3.318,385,2.836,396,2.408,413,2.487,426,3.457,428,2.981,430,1.851,500,2.225,661,3.746,816,3.122,1024,4.124,1027,4.333,1029,3.714,1035,3.746,1036,2.939,1037,2.76,1038,3.714,1039,4.333,1041,3.148,1042,3.714,1122,3.148,1326,4.333,1327,4.333,1328,4.333,1332,5.802,1333,4.774,1334,4.774,1335,4.774]],["title/entities/Move.html",[121,1.509,328,1.385]],["body/entities/Move.html",[0,0.104,3,0.182,4,0.182,5,0.165,10,0.255,11,1.004,23,0.016,26,0.752,34,0.61,35,1.294,84,0.39,88,0.182,116,0.967,119,0.01,120,0.01,121,1.456,123,1.938,131,1.522,141,4.522,145,4.565,154,1.456,156,2.678,157,2.312,158,2.312,164,1.592,165,2.016,328,1.847,347,6.027,348,6.208,986,4.624,989,4.624,991,4.624,993,4.233,994,4.624,996,4.233,1336,3.253,1337,5.149,1338,5.149,1339,3.756,1340,3.756,1341,5.961,1342,3.756,1343,5.235,1344,3.756,1345,3.756,1346,5.74,1347,3.756,1348,3.756,1349,3.756,1350,3.756,1351,3.756,1352,3.756,1353,3.253,1354,3.253,1355,3.253,1356,3.253,1357,3.756]],["title/classes/MoveResponseDto.html",[0,0.108,403,2.567]],["body/classes/MoveResponseDto.html",[0,0.113,2,0.854,3,0.132,4,0.132,5,0.119,10,0.184,11,0.795,15,1.056,23,0.016,24,0.89,26,0.712,32,0.671,33,0.504,34,0.558,35,1.194,37,0.699,42,2.182,44,1.159,46,1.482,68,2.711,84,0.361,88,0.132,90,0.89,93,2.527,109,0.699,116,0.899,119,0.008,120,0.008,131,1.423,217,1.19,262,0.727,328,2.106,329,2.353,367,3.1,379,1.672,383,3.522,384,2.923,385,3.286,386,5.284,396,2.616,397,2.923,398,3.262,399,3.925,400,2.845,401,3.193,402,2.353,403,3.903,413,2.654,426,3.582,427,3.262,428,3.501,430,1.053,434,2.238,758,2.353,849,3.193,986,3.848,987,2.113,988,2.923,989,3.848,990,3.193,991,4.604,992,2.113,993,4.214,994,3.848,995,2.353,996,3.522,997,3.555,998,3.193,999,3.193,1207,2.353,1209,2.353,1337,4.285,1338,5.126,1341,5.027,1343,3.848,1346,4.604,1353,2.353,1354,2.353,1355,2.353,1356,2.353,1358,5.624,1359,6.225,1360,2.717,1361,2.717,1362,6.225,1363,4.105,1364,2.717,1365,2.717,1366,4.105,1367,4.105,1368,4.105,1369,2.717,1370,2.717,1371,2.717,1372,5.513,1373,4.105,1374,2.717,1375,2.717,1376,2.717,1377,2.717,1378,4.105,1379,2.717,1380,2.717,1381,2.717,1382,2.717,1383,4.105,1384,2.717,1385,4.105,1386,4.105,1387,2.717,1388,2.353,1389,2.717,1390,2.717,1391,2.717,1392,2.717,1393,2.717,1394,2.717,1395,2.717,1396,2.717,1397,2.717,1398,2.717,1399,2.717,1400,2.717,1401,2.717,1402,2.717,1403,2.717,1404,2.717,1405,2.717,1406,2.717,1407,2.717,1408,2.717]],["title/modules/MovesModule.html",[304,1.224,618,2.567]],["body/modules/MovesModule.html",[0,0.138,3,0.242,4,0.242,5,0.219,23,0.016,84,0.437,87,1.007,88,0.242,119,0.012,120,0.012,134,3.066,155,2.444,304,2.15,306,2.216,307,2.325,308,2.575,309,2.575,310,2.325,311,3.529,312,3.529,316,4.59,317,3.23,318,2.575,319,2.575,322,3.072,323,2.116,328,1.776,331,3.072,332,2.885,334,3.23,336,3.291,617,4.638,618,5.143,632,4.322,1409,4.322,1410,4.322,1411,4.991,1412,4.991,1413,4.991,1414,4.991,1415,4.322,1416,4.991]],["title/injectables/MovesService.html",[316,2.25,489,0.924]],["body/injectables/MovesService.html",[0,0.129,3,0.157,4,0.157,5,0.142,10,0.316,12,2.55,13,2.121,15,1.199,23,0.016,26,0.545,32,1.352,33,1.016,34,0.427,35,1.104,37,1.407,42,2.083,44,1.26,46,0.98,51,1.368,52,2.283,68,1.198,79,2.869,84,0.42,87,0.651,88,0.157,90,1.963,108,2.428,109,0.83,119,0.009,120,0.009,122,3.32,126,3.952,134,2.936,154,1.251,155,1.581,172,2.46,181,3.896,186,3.626,189,2.541,196,3.896,217,1.98,226,1.581,240,2.869,274,2.405,315,3.464,316,2.694,323,1.368,328,2.729,331,1.986,332,1.865,333,2.51,336,2.128,338,2.298,340,2.128,341,4.256,365,2.795,367,2.172,375,3.319,377,3.689,378,2.298,386,2.298,400,1.665,403,3.073,431,1.986,434,2.541,489,1.106,490,1.308,496,1.889,498,4.204,506,3.689,530,1.986,534,2.662,537,2.128,538,3.626,548,5.312,554,2.795,555,2.795,700,4.267,701,3.319,1227,5.191,1229,4.739,1231,2.795,1358,2.51,1415,2.795,1417,2.795,1418,4.661,1419,5.472,1420,3.227,1421,5.472,1422,5.993,1423,3.227,1424,4.661,1425,4.661,1426,3.227,1427,3.227,1428,3.227,1429,5.993,1430,4.661,1431,3.227,1432,3.227,1433,3.227,1434,3.227,1435,4.661,1436,3.227,1437,3.227,1438,3.227,1439,3.227,1440,3.227,1441,3.227,1442,3.227,1443,3.227,1444,3.227,1445,3.227,1446,3.227,1447,3.227,1448,3.227]],["title/classes/RefreshTokenRequestDto.html",[0,0.108,679,2.772]],["body/classes/RefreshTokenRequestDto.html",[0,0.175,2,1.598,3,0.247,4,0.247,5,0.224,10,0.345,11,1.225,23,0.016,26,0.507,34,0.397,42,2.269,43,3.659,44,1.517,46,1.069,84,0.4,88,0.247,116,0.82,119,0.012,120,0.012,131,1.026,262,1.36,268,2.155,279,3.708,350,2.771,385,2.368,396,2.161,413,2.351,426,3.267,428,3.101,430,1.971,500,2.368,679,4.507,680,6.25,755,5.363,1027,3.619,1036,3.129,1039,3.619,1041,3.351,1122,3.351,1449,5.483,1450,6.331,1451,5.083,1452,5.083,1453,5.083]],["title/classes/UpdateUserDto.html",[0,0.108,1454,2.567]],["body/classes/UpdateUserDto.html",[0,0.171,2,1.541,3,0.238,4,0.238,5,0.216,10,0.332,11,1.198,23,0.016,26,0.617,34,0.483,35,1.437,43,3.92,44,1.301,46,1.301,84,0.394,88,0.238,116,0.922,119,0.012,120,0.012,128,1.795,131,1.249,228,2.202,262,1.312,268,2.078,385,2.884,396,2.431,413,2.518,427,4.472,428,3.031,430,1.9,500,2.284,816,3.16,821,3.598,1022,3.813,1029,3.813,1030,4.245,1032,4.245,1033,4.245,1035,3.809,1036,3.017,1037,2.833,1038,3.813,1040,3.813,1041,3.232,1326,4.406,1454,4.08,1455,5.275,1456,6.188]],["title/classes/UpdateUserPasswordDto.html",[0,0.108,1457,2.567]],["body/classes/UpdateUserPasswordDto.html",[0,0.16,2,1.395,3,0.216,4,0.216,5,0.195,10,0.301,11,1.124,23,0.016,26,0.645,34,0.505,43,4.413,46,1.36,84,0.375,88,0.216,116,0.946,119,0.011,120,0.011,128,2.234,131,1.305,262,1.188,268,1.881,350,3.527,385,3.014,396,2.494,413,2.548,426,3.541,430,1.72,500,2.068,1023,5.603,1024,4.7,1025,5.027,1026,5.603,1027,4.606,1034,5.943,1036,2.731,1039,4.606,1042,5.032,1043,5.603,1455,5.338,1457,3.827,1458,3.843,1459,6.469,1460,4.437,1461,5.805,1462,4.437,1463,4.437]],["title/entities/User.html",[121,1.509,128,1.129]],["body/entities/User.html",[0,0.178,3,0.213,4,0.213,5,0.193,10,0.437,11,1.116,23,0.016,26,0.707,34,0.554,84,0.423,88,0.213,116,0.943,119,0.011,120,0.011,121,1.703,122,3.395,123,2.267,128,1.867,131,1.432,135,3.417,137,4.486,141,3.951,152,4.486,153,3.417,154,1.703,156,2.976,157,2.704,158,2.704,164,1.862,165,2.024,227,5.008,428,2.825,430,1.703,431,2.704,816,3,821,3.153,1024,3.963,1035,3.55,1464,3.805,1465,4.681,1466,5.767,1467,4.393,1468,4.393,1469,4.393,1470,4.393,1471,4.393,1472,4.393,1473,4.208,1474,3.805,1475,5.767,1476,4.393,1477,4.393,1478,4.393,1479,4.994,1480,4.393,1481,5.767,1482,4.393,1483,3.417,1484,4.393,1485,4.393,1486,4.393]],["title/classes/UserDto.html",[0,0.108,757,2.25]],["body/classes/UserDto.html",[0,0.124,2,1.412,3,0.218,4,0.218,5,0.198,10,0.305,11,1.133,23,0.016,24,1.471,26,0.712,32,1.11,33,0.834,34,0.572,35,0.906,84,0.378,88,0.218,116,0.949,119,0.011,120,0.011,128,2.073,131,1.391,194,2.637,262,1.202,350,2.449,396,2.221,407,3.762,413,2.655,455,3.89,496,1.82,536,2.765,757,3.382,816,3.032,819,3.494,821,3.188,822,3.494,1037,3.382,1040,4.551,1127,4.551,1128,4.551,1129,4.551,1130,4.551,1131,4.551,1465,4.291,1487,3.89,1488,5.851,1489,5.851,1490,4.492,1491,4.492,1492,4.401,1493,4.492,1494,4.492,1495,3.494,1496,4.492,1497,4.492,1498,4.492,1499,4.492,1500,4.492,1501,3.89,1502,4.492]],["title/entities/UserSettings.html",[121,1.509,1473,2.396]],["body/entities/UserSettings.html",[0,0.13,3,0.228,4,0.228,5,0.206,10,0.318,11,1.165,21,2.805,23,0.016,26,0.699,33,1.233,34,0.547,84,0.386,88,0.228,116,0.908,119,0.012,120,0.012,121,1.819,123,2.422,128,2.237,131,1.414,141,4.052,145,3.341,147,5.213,150,4.285,154,1.819,156,3.106,157,2.889,158,2.889,164,1.989,165,1.892,1101,5.213,1140,4.064,1316,4.682,1473,3.705,1474,4.064,1479,5.213,1501,4.064,1503,6.278,1504,4.064,1505,5.755,1506,5.755,1507,5.755,1508,6.019,1509,4.693,1510,4.682,1511,4.693,1512,6.019,1513,4.693,1514,4.693,1515,4.693,1516,4.693,1517,4.693]],["title/controllers/UserSettingsController.html",[167,1.509,1518,2.772]],["body/controllers/UserSettingsController.html",[0,0.105,3,0.185,4,0.185,5,0.168,10,0.259,12,1.777,13,2.033,14,3.228,15,1.349,23,0.016,24,1.249,26,0.523,32,1.296,33,0.974,34,0.468,35,1.058,37,1.349,41,3.031,44,1.556,78,1.968,84,0.416,87,0.77,88,0.185,109,1.349,119,0.01,120,0.01,128,2.212,131,1.058,167,1.479,169,1.545,171,2.348,189,2.736,212,4.079,217,1.872,226,3.315,228,2.597,244,3.458,251,2.716,256,2.716,257,3.734,258,3.689,262,1.021,263,2.348,264,3.303,265,2.716,275,2.348,276,3.303,277,2.967,278,3.734,279,2.936,281,2.967,282,2.08,283,3.228,287,3.973,511,2.716,536,2.348,663,3.303,674,2.205,1492,4.165,1495,2.967,1518,3.734,1519,4.662,1520,3.303,1521,3.814,1522,4.542,1523,4.542,1524,3.303,1525,3.814,1526,5.759,1527,3.814,1528,3.303,1529,5.59,1530,3.814,1531,5.994,1532,4.818,1533,3.814,1534,3.814,1535,4.079,1536,4.542,1537,3.814,1538,3.228,1539,3.303,1540,3.303,1541,2.515,1542,3.814,1543,3.814,1544,3.814,1545,3.814,1546,3.814,1547,3.814,1548,3.814,1549,3.303,1550,3.303,1551,3.814]],["title/classes/UserSettingsDto.html",[0,0.108,1492,2.396]],["body/classes/UserSettingsDto.html",[0,0.16,2,1.389,3,0.215,4,0.215,5,0.194,10,0.3,11,1.121,23,0.016,26,0.683,32,1.092,33,0.82,34,0.534,35,1.5,42,1.82,43,3.347,44,1.44,46,1.357,68,2.15,84,0.375,88,0.215,116,0.887,119,0.011,120,0.011,131,1.303,165,1.389,228,2.06,262,1.183,268,1.873,350,3.157,385,3.009,396,2.491,413,2.544,427,4.518,428,3.163,430,1.713,496,1.791,500,2.059,1036,2.72,1041,3.817,1316,4.503,1465,3.817,1492,3.564,1505,5.592,1506,5.592,1507,5.592,1510,3.438,1552,6.16,1553,3.828,1554,5.79,1555,6.457,1556,5.79,1557,5.79,1558,5.79,1559,4.419,1560,5.79,1561,4.419,1562,4.419,1563,5.79,1564,5.79,1565,4.419,1566,4.419,1567,4.419,1568,4.419]],["title/injectables/UserSettingsService.html",[489,0.924,1538,2.396]],["body/injectables/UserSettingsService.html",[0,0.087,3,0.154,4,0.154,5,0.139,10,0.214,11,0.889,12,2.766,13,2.302,14,3.654,15,1.181,21,1.473,22,1.828,23,0.016,24,1.944,26,0.592,32,1.337,33,1.004,34,0.422,35,1.091,37,1.527,41,2.655,44,1.427,46,0.966,57,2.14,78,3.064,84,0.382,87,0.638,88,0.154,90,1.772,108,2.192,109,1.181,119,0.009,120,0.009,128,2.139,154,1.226,172,2.442,189,2.517,194,1.281,204,3.432,217,2.205,226,2.25,228,2.596,323,1.34,489,1.09,490,1.281,496,1.861,498,3.654,511,4.227,527,2.085,529,3.851,530,1.946,534,2.04,536,3.881,561,2.25,674,3.432,714,2.827,1465,3.914,1473,3.33,1483,2.46,1492,3.654,1495,2.46,1519,4.905,1522,3.978,1523,3.978,1524,3.978,1526,6.05,1528,3.978,1529,5.461,1532,4.489,1535,3.573,1538,2.827,1540,2.739,1541,2.085,1549,2.739,1550,2.739,1569,2.739,1570,3.162,1571,4.593,1572,4.593,1573,3.162,1574,5.142,1575,5.937,1576,4.618,1577,3.978,1578,3.162,1579,3.978,1580,5.409,1581,3.573,1582,4.593,1583,2.739,1584,3.162,1585,5.937,1586,3.162,1587,2.739,1588,4.593,1589,3.162,1590,3.162,1591,3.162,1592,3.162,1593,3.162,1594,3.162,1595,3.162,1596,3.162,1597,3.162,1598,3.162,1599,3.162,1600,3.162]],["title/controllers/UsersController.html",[167,1.509,1601,2.772]],["body/controllers/UsersController.html",[0,0.05,3,0.087,4,0.087,5,0.079,10,0.122,12,1.38,13,1.148,15,0.762,23,0.016,24,1.706,26,0.482,32,1.196,33,1.022,34,0.557,35,0.977,37,1.416,41,3.01,42,1.376,44,1.546,46,1.622,50,3.801,52,2.818,57,1.38,60,1.528,78,1.528,81,4.776,84,0.365,87,0.363,88,0.087,90,1.585,108,1.774,109,1.245,116,0.567,119,0.006,120,0.006,128,2.099,131,0.977,165,1.637,167,0.697,169,0.729,171,1.107,172,2.504,189,2.603,192,3.137,193,1.557,194,1.53,195,2.886,204,1.712,206,2.108,208,4.86,215,4.048,217,1.98,228,2.559,229,1.557,244,1.953,251,1.28,256,1.28,257,2.688,258,3.206,259,2.937,261,4.637,262,0.481,263,1.107,265,1.28,268,0.762,275,1.823,277,1.399,278,1.28,279,0.881,281,1.399,283,2.98,287,2.98,293,3.27,391,1.315,396,1.494,496,0.729,500,1.38,501,2.304,510,3.791,529,2.688,534,2.15,561,0.881,643,2.304,666,4.511,669,4.051,670,3.708,674,4.251,676,3.843,695,3.791,705,1.28,706,1.28,714,1.823,718,3.405,757,3.01,772,2.183,816,2.566,826,2.565,1037,1.039,1074,4.193,1077,1.557,1081,2.565,1082,2.565,1120,3.631,1126,3.631,1132,2.304,1238,1.399,1327,3.708,1328,3.708,1454,3.931,1457,3.931,1532,3.117,1536,1.557,1541,1.186,1577,4.511,1579,3.791,1581,3.405,1601,2.108,1602,1.557,1603,2.961,1604,2.961,1605,2.961,1606,2.565,1607,2.961,1608,1.798,1609,1.798,1610,5.091,1611,4.841,1612,3.776,1613,3.776,1614,1.798,1615,2.961,1616,2.961,1617,2.961,1618,2.961,1619,2.961,1620,1.798,1621,1.798,1622,1.798,1623,1.798,1624,2.961,1625,1.798,1626,4.378,1627,1.798,1628,1.798,1629,2.961,1630,2.961,1631,2.961,1632,2.961,1633,1.798,1634,1.798,1635,2.961,1636,1.798,1637,1.798,1638,2.961,1639,1.798,1640,2.961,1641,3.791,1642,2.565,1643,1.798,1644,1.798,1645,1.798,1646,1.798,1647,2.961,1648,2.961,1649,1.798,1650,1.798,1651,1.557,1652,1.798,1653,1.399,1654,2.565,1655,1.557,1656,1.798,1657,1.798,1658,1.798,1659,3.776,1660,1.798,1661,1.798,1662,1.798,1663,2.565,1664,1.798,1665,1.798,1666,1.798,1667,1.798,1668,1.798,1669,1.798,1670,1.798,1671,1.798,1672,1.798,1673,2.565,1674,1.798,1675,2.961,1676,1.798,1677,1.798,1678,1.798]],["title/modules/UsersModule.html",[304,1.224,619,2.396]],["body/modules/UsersModule.html",[0,0.134,3,0.235,4,0.235,5,0.213,23,0.016,84,0.446,87,0.976,88,0.235,119,0.012,120,0.012,128,1.955,169,2.486,304,2.119,306,2.148,307,2.254,308,2.496,309,2.496,310,2.254,311,3.478,312,3.478,317,3.167,318,2.496,319,2.496,322,2.977,323,2.051,334,2.496,619,4.775,772,4.57,1473,3.777,1483,3.763,1518,4.799,1538,4.602,1539,4.189,1541,3.189,1583,4.189,1601,4.799,1651,4.189,1679,4.189,1680,4.189,1681,4.189,1682,4.837,1683,4.837,1684,4.837,1685,4.837]],["title/injectables/UsersService.html",[489,0.924,772,2.25]],["body/injectables/UsersService.html",[0,0.045,3,0.079,4,0.079,5,0.072,10,0.111,11,0.528,12,2.839,13,1.597,14,2.536,15,0.702,21,0.76,22,0.942,23,0.016,24,2.083,26,0.591,32,1.419,33,1.066,34,0.448,35,1.159,37,1.636,38,2.364,42,1.442,44,1.562,46,0.964,52,2.707,57,2.312,62,2.651,68,1.53,71,1.412,78,3.586,84,0.344,87,0.329,88,0.079,90,2.042,101,1.161,108,2.239,109,1.421,116,0.914,119,0.005,120,0.005,128,2.098,154,0.632,165,0.513,172,2.602,173,2.124,175,2.124,181,1.161,189,2.744,192,2.705,194,2.88,202,3.024,204,3.428,208,1.161,211,2.124,213,2.124,217,1.439,228,2.643,268,0.691,323,0.691,367,1.641,391,1.212,489,0.648,490,0.661,496,1.106,498,2.536,500,1.92,501,3.204,506,1.68,511,4.744,527,1.8,529,1.944,530,1.003,534,2.769,536,1.003,559,1.412,561,2.985,572,1.161,573,1.944,576,1.161,674,3.981,676,2.868,692,3.243,699,3.204,701,2.508,706,1.944,714,2.168,757,1.578,761,1.268,772,1.578,796,3.972,803,2.124,811,1.412,816,2.676,819,2.124,822,1.268,996,1.161,1024,1.68,1076,2.364,1326,4.223,1327,3.934,1328,4.338,1454,2.716,1457,3.644,1465,1.8,1526,2.124,1532,4.44,1535,3.204,1541,1.075,1574,2.364,1576,1.268,1581,3.568,1587,1.412,1606,2.364,1610,4.614,1641,4.563,1642,4.563,1654,2.364,1655,1.412,1663,3.05,1673,3.568,1686,1.412,1687,2.73,1688,2.73,1689,2.73,1690,2.73,1691,2.73,1692,1.63,1693,2.73,1694,2.73,1695,2.73,1696,1.63,1697,2.73,1698,1.63,1699,5.526,1700,4.962,1701,1.63,1702,2.73,1703,1.63,1704,2.73,1705,1.63,1706,2.73,1707,1.63,1708,2.73,1709,4.587,1710,1.63,1711,2.73,1712,2.73,1713,2.73,1714,1.63,1715,2.73,1716,2.73,1717,2.73,1718,1.63,1719,1.63,1720,1.63,1721,2.73,1722,4.12,1723,1.63,1724,2.73,1725,2.73,1726,2.73,1727,2.73,1728,1.63,1729,1.63,1730,2.73,1731,3.522,1732,2.73,1733,1.63,1734,1.63,1735,1.63,1736,2.73,1737,1.63,1738,2.73,1739,3.522,1740,4.12,1741,2.73,1742,3.522,1743,2.73,1744,1.63,1745,1.63,1746,1.63,1747,2.73,1748,1.63,1749,3.522,1750,1.63,1751,1.63,1752,1.63,1753,1.63,1754,1.63,1755,2.73,1756,1.63,1757,1.63,1758,1.63,1759,2.73,1760,2.73,1761,1.63,1762,1.63,1763,2.73,1764,2.73,1765,1.63,1766,1.63,1767,1.63,1768,1.63,1769,1.63,1770,1.63,1771,2.73,1772,1.63,1773,1.63,1774,1.63,1775,1.63,1776,1.63,1777,1.412]],["title/coverage.html",[1778,4.606]],["body/coverage.html",[0,0.212,1,2.238,5,0.127,6,2.492,7,2.492,23,0.016,24,0.942,34,0.399,119,0.008,120,0.008,121,2.554,122,1.996,124,3.711,128,1.242,134,1.409,156,1.485,167,2.554,168,2.048,170,2.492,179,1.897,236,2.238,237,2.238,252,1.771,263,1.771,272,1.897,275,1.771,279,1.409,310,1.34,315,1.663,316,1.663,325,1.569,328,1.525,331,1.771,332,1.663,336,1.897,337,3.982,377,1.771,378,3.051,379,3.734,380,1.771,390,1.897,400,4.16,403,1.897,432,1.771,489,1.736,491,2.492,581,2.048,582,2.492,601,1.771,623,3.333,651,2.492,654,2.048,655,2.492,661,1.771,679,2.048,692,1.771,702,1.663,707,2.048,709,1.897,736,1.897,737,1.897,745,2.238,753,2.492,757,1.663,765,2.492,772,1.663,828,2.492,841,2.048,842,2.492,867,1.771,889,2.048,890,2.048,892,2.492,893,2.492,902,2.492,940,2.492,941,2.492,1021,2.492,1022,3.333,1044,2.492,1045,2.492,1062,2.238,1064,2.238,1068,2.048,1069,2.492,1078,1.771,1096,2.825,1099,3.711,1110,2.492,1120,1.897,1121,3.333,1122,3.74,1126,1.897,1135,2.048,1136,2.492,1160,2.238,1221,2.492,1238,2.238,1239,3.333,1253,2.048,1254,2.492,1255,2.492,1258,2.492,1279,2.492,1317,2.492,1332,2.492,1336,2.492,1358,2.238,1417,2.492,1449,2.492,1454,1.897,1455,3.333,1457,1.897,1458,2.492,1464,2.492,1473,1.771,1487,2.492,1492,1.771,1503,2.492,1504,2.492,1518,2.048,1519,3.333,1520,2.492,1538,1.771,1552,2.492,1553,2.492,1569,2.492,1601,2.048,1602,2.492,1653,2.238,1686,2.492,1778,2.492,1779,2.877,1780,2.877,1781,2.877,1782,2.492,1783,7.041,1784,7.622,1785,5.673,1786,5.673,1787,2.877,1788,6.066,1789,4.285,1790,2.877,1791,2.877,1792,6.587,1793,2.877,1794,2.877,1795,2.877,1796,2.877,1797,6.066,1798,2.877,1799,4.285,1800,4.285,1801,4.285,1802,2.877,1803,2.877,1804,2.877,1805,3.711,1806,2.492,1807,2.877,1808,2.877,1809,2.877,1810,2.877,1811,2.877,1812,2.877,1813,2.492,1814,2.492,1815,2.492,1816,2.492,1817,2.492,1818,2.492,1819,2.492,1820,2.492,1821,3.333,1822,4.285,1823,2.492,1824,2.492,1825,2.492,1826,2.492,1827,2.877,1828,2.877,1829,2.877,1830,2.877,1831,2.877,1832,2.877,1833,2.877,1834,2.877,1835,2.877,1836,2.877,1837,2.492]],["title/dependencies.html",[307,2.182,1838,2.813]],["body/dependencies.html",[0,0.178,23,0.016,87,1.057,119,0.012,120,0.012,154,2.501,262,1.403,268,2.735,269,4.076,307,2.442,323,2.221,430,2.032,431,3.226,500,2.442,626,3.455,708,3.731,742,3.226,744,4.076,778,3.731,803,4.076,887,4.076,927,4.538,1267,5.437,1287,4.538,1839,5.24,1840,6.99,1841,5.24,1842,5.24,1843,5.24,1844,5.24,1845,5.24,1846,5.24,1847,5.24,1848,5.24,1849,5.24,1850,5.24,1851,5.24,1852,5.24,1853,5.24,1854,5.24,1855,5.24,1856,5.24,1857,5.24,1858,5.24,1859,5.24,1860,5.24,1861,5.24,1862,5.24]],["title/miscellaneous/enumerations.html",[1863,1.771,1864,4.056]],["body/miscellaneous/enumerations.html",[10,0.216,22,4.753,23,0.016,119,0.009,120,0.009,328,1.641,349,3.588,398,2.097,472,2.264,474,2.264,987,3.588,988,3.284,990,2.474,992,2.474,998,3.588,999,3.588,1000,3.995,1013,3.995,1017,3.995,1341,3.588,1343,3.588,1346,3.588,1388,2.754,1863,1.734,1864,2.754,1865,3.18,1866,4.613,1867,3.18,1868,3.18,1869,4.613,1870,3.18,1871,3.18,1872,4.613,1873,4.613,1874,4.613,1875,4.613,1876,4.613,1877,4.613,1878,4.613,1879,3.18,1880,3.18,1881,3.18,1882,3.18,1883,3.18,1884,3.18,1885,3.18,1886,3.18,1887,3.18,1888,3.18,1889,3.18,1890,4.613,1891,4.613,1892,4.613,1893,4.613,1894,4.613,1895,4.613,1896,4.613,1897,4.613,1898,4.613,1899,4.613,1900,4.613,1901,4.613,1902,4.613,1903,4.613,1904,4.613,1905,4.613,1906,4.613,1907,4.613,1908,4.613,1909,4.613,1910,4.613,1911,4.613,1912,4.613,1913,4.613,1914,4.613,1915,4.613,1916,4.613,1917,4.613,1918,4.613,1919,4.613,1920,4.613,1921,4.613,1922,4.613,1923,4.613,1924,4.613,1925,4.613,1926,4.613,1927,4.613,1928,4.613,1929,4.613,1930,4.613,1931,4.613,1932,4.613,1933,4.613,1934,4.613,1935,4.613,1936,4.613,1937,4.613,1938,4.613,1939,4.613,1940,4.613,1941,4.613,1942,4.613,1943,4.613,1944,4.613,1945,4.613,1946,4.613,1947,4.613,1948,4.613]],["title/miscellaneous/functions.html",[1863,1.771,1949,4.056]],["body/miscellaneous/functions.html",[10,0.421,23,0.014,119,0.014,120,0.014,310,3.498,1826,5.37,1863,3.38,1949,5.37,1950,6.2]],["title/index.html",[10,0.22,1951,3.249,1952,3.249]],["body/index.html",[23,0.015,42,2.188,44,1.369,52,3.022,57,1.602,62,3.277,68,2.105,78,2.926,79,3.49,119,0.009,120,0.009,201,5.264,203,2.675,217,2.172,226,3.022,240,2.117,268,2.068,304,1.081,367,3.036,371,2.978,374,2.978,391,2.893,396,2.375,507,2.675,537,4.589,574,2.978,637,2.978,638,4.225,639,4.91,647,2.978,648,2.448,649,2.978,791,2.978,829,2.978,832,2.978,856,2.675,1837,2.978,1953,6.767,1954,6.17,1955,7.111,1956,3.439,1957,3.439,1958,3.439,1959,3.439,1960,3.439,1961,4.878,1962,3.439,1963,4.878,1964,4.878,1965,3.439,1966,5.669,1967,7.875,1968,4.878,1969,5.669,1970,4.878,1971,5.669,1972,6.17,1973,6.767,1974,3.439,1975,3.439,1976,4.878,1977,3.439,1978,3.439,1979,3.439,1980,3.439,1981,6.17,1982,3.439,1983,5.669,1984,3.439,1985,3.439,1986,3.439,1987,3.439,1988,3.439,1989,3.439,1990,3.439,1991,4.878,1992,3.439,1993,3.439,1994,3.439,1995,4.878,1996,3.439,1997,5.669,1998,3.439,1999,3.439,2000,3.439,2001,3.439,2002,3.439,2003,3.439,2004,4.878,2005,5.669,2006,5.669,2007,5.669,2008,4.878,2009,3.439,2010,4.878,2011,3.439,2012,3.439,2013,4.878,2014,3.439,2015,3.439,2016,3.439,2017,4.878,2018,2.978,2019,3.439,2020,3.439,2021,3.439,2022,4.878,2023,3.439,2024,3.439,2025,3.439,2026,3.439,2027,3.439,2028,3.439,2029,3.439,2030,3.439,2031,3.439,2032,3.439,2033,6.767,2034,4.878,2035,3.439,2036,3.439,2037,3.439,2038,4.225,2039,3.439,2040,3.439,2041,3.439,2042,3.439,2043,3.439,2044,3.439,2045,5.669]],["title/modules.html",[306,2.362]],["body/modules.html",[23,0.013,119,0.013,120,0.013,305,3.702,306,2.493,609,3.997,613,3.702,614,3.702,615,3.702,616,3.702,617,3.456,618,3.702,619,3.456,2046,7.902,2047,7.902,2048,7.902,2049,7.954,2050,5.615,2051,5.615]],["title/overview.html",[2052,4.606]],["body/overview.html",[2,1.251,23,0.016,119,0.01,120,0.01,123,2.054,169,1.613,252,3.772,304,1.251,305,4.926,306,1.767,307,1.854,308,2.054,309,2.054,310,1.854,311,2.054,312,2.054,313,3.447,314,3.447,315,4.26,316,4.26,317,2.786,318,2.054,319,2.054,434,2.17,490,1.613,601,3.772,609,5.66,610,3.447,611,3.447,612,3.447,613,5.065,614,4.67,615,4.04,616,4.529,617,4.459,618,4.859,619,4.599,702,4.187,732,3.447,734,3.447,735,3.447,736,4.04,737,4.04,772,4.187,867,4.459,882,3.447,883,3.447,884,3.447,889,2.834,1078,3.772,1092,3.447,1093,3.447,1216,3.447,1218,3.447,1409,3.447,1410,3.447,1538,3.772,1679,3.447,1680,3.447,1681,3.447,2052,3.447,2053,3.98,2054,5.399,2055,3.98,2056,3.98]],["title/properties.html",[11,0.907,1838,2.813]],["body/properties.html",[11,1.19,23,0.015,46,1.292,119,0.014,120,0.014,2057,6.148,2058,6.148,2059,6.148,2060,6.148,2061,6.148]],["title/miscellaneous/typealiases.html",[1863,1.771,2062,4.684]],["body/miscellaneous/typealiases.html",[10,0.414,23,0.014,34,0.551,72,4.341,104,4.742,119,0.014,120,0.014,1821,4.742,1823,6.116,1824,6.116,1863,3.324,2063,6.097,2064,7.062]],["title/miscellaneous/variables.html",[648,3.335,1863,1.771]],["body/miscellaneous/variables.html",[10,0.24,14,2.175,21,3.437,22,4.264,23,0.016,24,1.628,34,0.559,44,1.045,51,2.108,57,1.646,60,1.823,62,2.042,68,1.312,89,1.926,90,1.628,91,3.06,95,2.515,104,3.868,109,1.279,116,0.457,119,0.01,120,0.01,123,2.566,128,1.024,165,1.809,166,2.329,202,2.329,204,2.042,217,1.024,226,1.73,228,1.769,236,3.868,237,3.868,275,3.061,279,1.73,286,4.306,287,3.061,290,3.868,391,1.569,434,1.926,507,2.748,537,3.278,576,2.515,623,4.857,643,2.748,648,2.515,670,2.515,674,2.042,677,2.515,745,3.868,747,3.54,778,2.515,824,3.06,901,3.868,910,3.06,1062,3.868,1064,3.868,1276,3.06,1283,3.06,1510,3.868,1576,2.748,1610,2.748,1653,2.748,1777,3.06,1782,3.06,1805,3.06,1806,4.306,1813,3.06,1814,3.06,1815,4.306,1816,3.06,1817,3.06,1818,5.408,1819,3.06,1820,4.306,1821,3.868,1825,3.06,1863,1.926,2018,3.06,2038,3.06,2065,3.533,2066,3.533,2067,4.972,2068,3.533,2069,3.533,2070,3.533,2071,3.533,2072,3.533,2073,3.533,2074,3.533,2075,3.533,2076,3.533,2077,3.533,2078,3.533,2079,3.533,2080,3.533,2081,3.533,2082,3.533,2083,4.972,2084,3.533,2085,5.753,2086,3.533,2087,3.533,2088,4.972,2089,3.533,2090,3.533,2091,5.753,2092,3.533,2093,3.533,2094,3.533,2095,3.533,2096,3.533,2097,3.533,2098,4.972,2099,4.972,2100,4.972,2101,6.244,2102,4.972,2103,4.972,2104,4.972,2105,4.972,2106,4.972,2107,4.972,2108,4.972,2109,4.972,2110,4.972,2111,4.972,2112,3.533,2113,3.533,2114,3.533,2115,3.533,2116,3.533,2117,3.533,2118,3.533,2119,3.533]],["title/routes.html",[1295,4.137]],["body/routes.html",[23,0.014,119,0.014,120,0.014,1295,4.92]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":400,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/LocalAuthGuard.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2058,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1862,"title":{},"body":{"dependencies.html":{}}}],["0.37",{"_index":1006,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["0.37})@isoptional()@isnumber",{"_index":1169,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["0.5",{"_index":1010,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["0.5.1",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["0.5})@isoptional()@isnumber",{"_index":1177,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["0.7.0",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["01t00:00:00.000z",{"_index":410,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["09",{"_index":409,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["1",{"_index":434,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1'})@isstring()@isnotempty",{"_index":401,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{}}}],["1.0.0",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1777,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["10.4.6",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["10.4.9",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["123e4567",{"_index":1127,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/UserDto.html":{}}}],["12d3",{"_index":1129,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/UserDto.html":{}}}],["13",{"_index":2055,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1002,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["14})@isoptional()@isnumber",{"_index":1168,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["2/3",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":215,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":185,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{}}}],["202",{"_index":462,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["2021",{"_index":408,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["2024.11.11",{"_index":470,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["202…2",{"_index":950,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["204",{"_index":198,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["21",{"_index":2056,"title":{},"body":{"overview.html":{}}}],["22:38:37",{"_index":982,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["24",{"_index":1004,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["24})@isoptional()@isnumber",{"_index":1182,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["29",{"_index":952,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["3",{"_index":464,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["3.3.0",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":955,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["31",{"_index":957,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["33",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1008,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["37})@isoptional()@isnumber",{"_index":1165,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["3})@isnumber()@isnotempty",{"_index":963,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["4.0.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":669,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":666,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":200,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["404",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"controllers/UsersController.html":{}}}],["409",{"_index":695,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}}}],["426614174000",{"_index":1131,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/UserDto.html":{}}}],["429",{"_index":597,"title":{},"body":{"controllers/AppController.html":{}}}],["44",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["447e",{"_index":417,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["450d",{"_index":1631,"title":{},"body":{"controllers/UsersController.html":{}}}],["5.1.1",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{}}}],["503",{"_index":590,"title":{},"body":{"controllers/AppController.html":{}}}],["504",{"_index":593,"title":{},"body":{"controllers/AppController.html":{}}}],["50749934",{"_index":1629,"title":{},"body":{"controllers/UsersController.html":{}}}],["54",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":971,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["60m",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["69e80d489597",{"_index":1664,"title":{},"body":{"controllers/UsersController.html":{}}}],["69e80d489597'})@apiresponse({status",{"_index":1633,"title":{},"body":{"controllers/UsersController.html":{}}}],["7",{"_index":2054,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["714b",{"_index":1630,"title":{},"body":{"controllers/UsersController.html":{}}}],["75",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["8.0.1",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["837e5edb",{"_index":415,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["9",{"_index":2053,"title":{},"body":{"overview.html":{}}}],["975",{"_index":973,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["988",{"_index":975,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["9bcf",{"_index":1632,"title":{},"body":{"controllers/UsersController.html":{}}}],["__dirname",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a1",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a2",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a3",{"_index":1927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a4",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a43fb6c0100b",{"_index":419,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["a456",{"_index":1130,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/UserDto.html":{}}}],["a5",{"_index":1913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a57d",{"_index":418,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["a6",{"_index":1017,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"miscellaneous/enumerations.html":{}}}],["a7",{"_index":1898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["a8",{"_index":1890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abandon",{"_index":978,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["abstract",{"_index":840,"title":{},"body":{"classes/BaseDto.html":{},"classes/CustomBaseEntity.html":{}}}],["acceptlanguageresolver",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":677,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":754,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{}}}],["accéder",{"_index":220,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["addbearerauth",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["affiche",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ajoute",{"_index":1444,"title":{},"body":{"injectables/MovesService.html":{}}}],["alias",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2063,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["alors",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["analys",{"_index":387,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analyse",{"_index":186,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/MovesService.html":{}}}],["analyse'})@apibody({type",{"_index":183,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["analyse.'})@apiresponse({status",{"_index":207,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["analyser",{"_index":962,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analyses",{"_index":227,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"entities/User.html":{}}}],["analysis",{"_index":122,"title":{"entities/Analysis.html":{}},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"entities/InfoResult.html":{},"injectables/MovesService.html":{},"entities/User.html":{},"coverage.html":{}}}],["analysis.controller",{"_index":321,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["analysis.createdat",{"_index":486,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.deletedat",{"_index":488,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.dto",{"_index":255,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["analysis.dto.ts",{"_index":941,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"coverage.html":{}}}],["analysis.dto.ts:13",{"_index":960,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analysis.dto.ts:18",{"_index":964,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analysis.dto.ts:41",{"_index":945,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analysis.dto.ts:82",{"_index":949,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analysis.entity",{"_index":360,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["analysis.header",{"_index":482,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.id",{"_index":476,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.moves",{"_index":342,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["analysis.moves?.map((move",{"_index":484,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.pgn",{"_index":480,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.service",{"_index":253,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{}}}],["analysis.updatedat",{"_index":487,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis.user",{"_index":1466,"title":{},"body":{"entities/User.html":{}}}],["analysis.user.id",{"_index":563,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.variants",{"_index":478,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysis/analysis.module",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["analysis/entities/analysis.entity",{"_index":1482,"title":{},"body":{"entities/User.html":{}}}],["analysis_id",{"_index":345,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["analysis_move_id",{"_index":1138,"title":{},"body":{"entities/InfoResult.html":{}}}],["analysiscontroller",{"_index":168,"title":{"controllers/AnalysisController.html":{}},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"coverage.html":{}}}],["analysismodule",{"_index":305,"title":{"modules/AnalysisModule.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["analysismove",{"_index":134,"title":{"entities/AnalysisMove.html":{}},"body":{"entities/Analysis.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"entities/InfoResult.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["analysismove.analysis",{"_index":136,"title":{},"body":{"entities/Analysis.html":{}}}],["analysismove.classification",{"_index":447,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.createdat",{"_index":449,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.deletedat",{"_index":453,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.engineresults",{"_index":1159,"title":{},"body":{"entities/InfoResult.html":{}}}],["analysismove.engineresults)@joincolumn({name",{"_index":1137,"title":{},"body":{"entities/InfoResult.html":{}}}],["analysismove.engineresults?.map((result",{"_index":444,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.fen",{"_index":442,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.id",{"_index":438,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismove.updatedat",{"_index":451,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismoveclassificationenum",{"_index":349,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["analysismoveclassificationenum.none",{"_index":372,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["analysismoveclassificationenum})@isoptional()@isenum(analysismoveclassificationenum",{"_index":388,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysismovedto",{"_index":1435,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismovedto.classification",{"_index":1442,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismovedto.fen",{"_index":1441,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismovedto.move",{"_index":1438,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismoverepository",{"_index":1421,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismoveresponsedto",{"_index":377,"title":{"classes/AnalysisMoveResponseDto.html":{}},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["analysismoveresponsedto.fromentity(move",{"_index":485,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["analysismovesdto",{"_index":1429,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysismovesdto.findindex((move",{"_index":1436,"title":{},"body":{"injectables/MovesService.html":{}}}],["analysisrepository",{"_index":504,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysisresponsedto",{"_index":272,"title":{"classes/AnalysisResponseDto.html":{}},"body":{"controllers/AnalysisController.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"coverage.html":{}}}],["analysisresponsedto.fromentity(analysis",{"_index":566,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysisresponsedto})@apiresponse({status",{"_index":219,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["analysisservice",{"_index":252,"title":{"injectables/AnalysisService.html":{}},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"coverage.html":{},"overview.html":{}}}],["analysé'})@isarray()@validatenested({each",{"_index":392,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["analysée",{"_index":946,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["analysés",{"_index":1167,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["api",{"_index":1954,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":256,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":278,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":257,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":258,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":180,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{}}}],["apiparam",{"_index":259,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ChessController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":413,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{}}}],["apiproperty({description",{"_index":385,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{}}}],["apiproperty({example",{"_index":407,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":455,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/UserDto.html":{}}}],["apiquery",{"_index":260,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ElitedbController.html":{}}}],["apiresponse",{"_index":261,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":1537,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["apitags('paramètres",{"_index":1542,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["app.controller",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":602,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":581,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appelée",{"_index":1323,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["appmodule",{"_index":609,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":601,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["après",{"_index":1969,"title":{},"body":{"index.html":{}}}],["archives",{"_index":862,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["args",{"_index":579,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["argumentshost",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":1150,"title":{},"body":{"entities/InfoResult.html":{}}}],["asc",{"_index":560,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["associés",{"_index":375,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["assurez",{"_index":1974,"title":{},"body":{"index.html":{}}}],["async",{"_index":172,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attention",{"_index":1615,"title":{},"body":{"controllers/UsersController.html":{}}}],["au",{"_index":555,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/MovesService.html":{}}}],["auth",{"_index":656,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["auth.guard",{"_index":265,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":1239,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":1284,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":1246,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authentication.controller",{"_index":739,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.service",{"_index":703,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/LocalStrategy.html":{}}}],["authentication/authentication.module",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/dto/request/create",{"_index":1718,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication/jwt",{"_index":264,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UserSettingsController.html":{}}}],["authenticationcontroller",{"_index":654,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":613,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationresponsedto",{"_index":709,"title":{"classes/AuthenticationResponseDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["authenticationresponsedto(accesstoken",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":702,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":1248,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1240,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1280,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["author",{"_index":2061,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":713,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalStrategy.html":{}}}],["autoris",{"_index":1659,"title":{},"body":{"controllers/UsersController.html":{}}}],["autorisé'})@apiresponse({status",{"_index":1613,"title":{},"body":{"controllers/UsersController.html":{}}}],["autre",{"_index":1988,"title":{},"body":{"index.html":{}}}],["available",{"_index":2051,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":894,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["avec",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["await",{"_index":534,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":998,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["b1",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b2",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b3",{"_index":1928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b4",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b5",{"_index":1914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b6",{"_index":1906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b7",{"_index":1899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b8",{"_index":1891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ba4",{"_index":1018,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["badrequestexception",{"_index":1076,"title":{},"body":{"controllers/ElitedbController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"l'email",{"_index":1737,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(\"missing",{"_index":1084,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["badrequestexception('les",{"_index":1765,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":829,"title":{},"body":{"classes/BaseDto.html":{},"index.html":{}}}],["base.entity",{"_index":158,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{}}}],["base.entity.ts",{"_index":1045,"title":{},"body":{"classes/CustomBaseEntity.html":{},"coverage.html":{}}}],["base.entity.ts:11",{"_index":1056,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["base.entity.ts:14",{"_index":1051,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["base.entity.ts:5",{"_index":1053,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["base.entity.ts:8",{"_index":1048,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["base_url",{"_index":903,"title":{},"body":{"injectables/ChessService.html":{}}}],["basedto",{"_index":380,"title":{"classes/BaseDto.html":{}},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{},"coverage.html":{}}}],["basedto:12",{"_index":412,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["basedto:15",{"_index":421,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["basedto:18",{"_index":414,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["basedto:9",{"_index":420,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["bb5",{"_index":1016,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["bcrypt",{"_index":803,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(logindto.password",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["bcrypt.hash(password",{"_index":1776,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":996,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"injectables/UsersService.html":{}}}],["best",{"_index":1877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bishop",{"_index":1883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["black",{"_index":474,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"entities/ElitedbMove.html":{},"miscellaneous/enumerations.html":{}}}],["blackelo",{"_index":974,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["blunder",{"_index":1875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":244,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":1316,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{}}}],["booléen",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["bootstrap",{"_index":310,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brilliant",{"_index":1000,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2049,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2046,"title":{},"body":{"modules.html":{}}}],["build",{"_index":2018,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["c'est",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["c1",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c2",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c3",{"_index":1929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c4",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c5",{"_index":1915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c6",{"_index":1907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c7",{"_index":1900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c8",{"_index":1892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["c833",{"_index":416,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["cache",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":1281,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":1282,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["captured",{"_index":1337,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["capturée",{"_index":1363,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["car",{"_index":365,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/MovesService.html":{}}}],["cas",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cascade",{"_index":137,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":344,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["case",{"_index":1372,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["castled",{"_index":1953,"title":{},"body":{"index.html":{}}}],["catch",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ChessService.html":{}}}],["catch(exception",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ce",{"_index":574,"title":{},"body":{"injectables/AnalysisService.html":{},"index.html":{}}}],["centi",{"_index":1163,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["centi_pawns",{"_index":1141,"title":{},"body":{"entities/InfoResult.html":{}}}],["centipawns",{"_index":1007,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["ces",{"_index":2031,"title":{},"body":{"index.html":{}}}],["cet",{"_index":1743,"title":{},"body":{"injectables/UsersService.html":{}}}],["cette",{"_index":206,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{}}}],["chance",{"_index":1174,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["changement",{"_index":1593,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["chaque",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["chargement",{"_index":362,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["chess",{"_index":459,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"controllers/ChessController.html":{},"classes/CreateAnalysisDto.html":{}}}],["chess\"]\\n[site",{"_index":468,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["chess.com",{"_index":461,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["chess.com\"]\\n[date",{"_index":469,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["chess.controller",{"_index":888,"title":{},"body":{"modules/ChessModule.html":{}}}],["chess.service",{"_index":868,"title":{},"body":{"controllers/ChessController.html":{},"modules/ChessModule.html":{}}}],["chess/chess.module",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["chesscontroller",{"_index":841,"title":{"controllers/ChessController.html":{}},"body":{"controllers/ChessController.html":{},"modules/ChessModule.html":{},"coverage.html":{}}}],["chessmodule",{"_index":614,"title":{"modules/ChessModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChessModule.html":{},"modules.html":{},"overview.html":{}}}],["chessplayer",{"_index":890,"title":{"interfaces/ChessPlayer.html":{}},"body":{"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"coverage.html":{}}}],["chessservice",{"_index":867,"title":{"injectables/ChessService.html":{}},"body":{"controllers/ChessController.html":{},"modules/ChessModule.html":{},"injectables/ChessService.html":{},"coverage.html":{},"overview.html":{}}}],["cl",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{},"overview.html":{}}}],["classification",{"_index":338,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"injectables/MovesService.html":{}}}],["classification.enum",{"_index":359,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{}}}],["classification.enum.ts",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_analysismodule",{"_index":313,"title":{},"body":{"modules/AnalysisModule.html":{},"overview.html":{}}}],["cluster_analysismodule_providers",{"_index":314,"title":{},"body":{"modules/AnalysisModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":732,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":734,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":733,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":735,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_chessmodule",{"_index":882,"title":{},"body":{"modules/ChessModule.html":{},"overview.html":{}}}],["cluster_chessmodule_exports",{"_index":884,"title":{},"body":{"modules/ChessModule.html":{},"overview.html":{}}}],["cluster_chessmodule_providers",{"_index":883,"title":{},"body":{"modules/ChessModule.html":{},"overview.html":{}}}],["cluster_elitedbmodule",{"_index":1092,"title":{},"body":{"modules/ElitedbModule.html":{},"overview.html":{}}}],["cluster_elitedbmodule_providers",{"_index":1093,"title":{},"body":{"modules/ElitedbModule.html":{},"overview.html":{}}}],["cluster_inforesultsmodule",{"_index":1216,"title":{},"body":{"modules/InfoResultsModule.html":{},"overview.html":{}}}],["cluster_inforesultsmodule_exports",{"_index":1218,"title":{},"body":{"modules/InfoResultsModule.html":{},"overview.html":{}}}],["cluster_inforesultsmodule_providers",{"_index":1217,"title":{},"body":{"modules/InfoResultsModule.html":{}}}],["cluster_movesmodule",{"_index":1409,"title":{},"body":{"modules/MovesModule.html":{},"overview.html":{}}}],["cluster_movesmodule_exports",{"_index":1410,"title":{},"body":{"modules/MovesModule.html":{},"overview.html":{}}}],["cluster_movesmodule_imports",{"_index":1412,"title":{},"body":{"modules/MovesModule.html":{}}}],["cluster_movesmodule_providers",{"_index":1411,"title":{},"body":{"modules/MovesModule.html":{}}}],["cluster_usersmodule",{"_index":1679,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1680,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1681,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1987,"title":{},"body":{"index.html":{}}}],["color",{"_index":986,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["colorenum",{"_index":1343,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["column",{"_index":141,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{}}}],["column('jsonb",{"_index":132,"title":{},"body":{"entities/Analysis.html":{}}}],["column('simple",{"_index":1149,"title":{},"body":{"entities/InfoResult.html":{}}}],["column()@exclude()@minlength(8",{"_index":1471,"title":{},"body":{"entities/User.html":{}}}],["column()@isstring()@minlength(3",{"_index":1477,"title":{},"body":{"entities/User.html":{}}}],["column({default",{"_index":1101,"title":{},"body":{"entities/ElitedbMove.html":{},"entities/UserSettings.html":{}}}],["column({nullable",{"_index":1140,"title":{},"body":{"entities/InfoResult.html":{},"entities/UserSettings.html":{}}}],["column({type",{"_index":347,"title":{},"body":{"entities/AnalysisMove.html":{},"entities/Move.html":{}}}],["column({unique",{"_index":1468,"title":{},"body":{"entities/User.html":{}}}],["commande",{"_index":1993,"title":{},"body":{"index.html":{}}}],["commandes",{"_index":1972,"title":{},"body":{"index.html":{}}}],["commencent",{"_index":1445,"title":{},"body":{"injectables/MovesService.html":{}}}],["common/constants",{"_index":271,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["common/decorators/current",{"_index":276,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UserSettingsController.html":{}}}],["common/dto/base.dto",{"_index":433,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["common/dto/user.dto",{"_index":761,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["common/entities/custom",{"_index":157,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{}}}],["communes",{"_index":835,"title":{},"body":{"classes/BaseDto.html":{}}}],["compose",{"_index":1983,"title":{},"body":{"index.html":{}}}],["config/jwt.config",{"_index":746,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["configmodule",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["configmodule.forroot",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":747,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('jwt_secret",{"_index":1276,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1965,"title":{},"body":{"index.html":{}}}],["configurer",{"_index":2008,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":1025,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["confirmpassword",{"_index":1023,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["conflictexception",{"_index":527,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["conflictexception(\"l'email",{"_index":1750,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception(\"le",{"_index":1755,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception('aucun",{"_index":1592,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["conflictexception('une",{"_index":571,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["conflictexception(this.i18n.translate('user.errors.alreadyexists",{"_index":1726,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflits",{"_index":1619,"title":{},"body":{"controllers/UsersController.html":{}}}],["connect",{"_index":287,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["connecte",{"_index":673,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["connecter",{"_index":791,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["connecté'})@apibody({type",{"_index":1638,"title":{},"body":{"controllers/UsersController.html":{}}}],["connecté'})@apiresponse({status",{"_index":229,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UsersController.html":{}}}],["connecté.'})@apiquery({name",{"_index":231,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["connexion",{"_index":662,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["const",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1307,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["constructor",{"_index":496,"title":{},"body":{"injectables/AnalysisService.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(accesstoken",{"_index":756,"title":{},"body":{"classes/AuthenticationResponseDto.html":{}}}],["constructor(analysisrepository",{"_index":497,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["constructor(authservice",{"_index":1318,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":1261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(elitedbmoverepository",{"_index":1112,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["constructor(http",{"_index":907,"title":{},"body":{"injectables/ChessService.html":{}}}],["constructor(inforesultrepository",{"_index":1223,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["constructor(moverepository",{"_index":1420,"title":{},"body":{"injectables/MovesService.html":{}}}],["constructor(private",{"_index":282,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/LocalStrategy.html":{},"controllers/UserSettingsController.html":{}}}],["constructor(settings",{"_index":1554,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["constructor(settingsrepository",{"_index":1570,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["constructor(user",{"_index":1488,"title":{},"body":{"classes/UserDto.html":{}}}],["constructor(usersrepository",{"_index":1692,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":771,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["conteneur",{"_index":2044,"title":{},"body":{"index.html":{}}}],["conteneurs",{"_index":1973,"title":{},"body":{"index.html":{}}}],["context",{"_index":1285,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1297,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["controller",{"_index":167,"title":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/ElitedbController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/ElitedbController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('analysis",{"_index":280,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["controller('auth",{"_index":712,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('chess",{"_index":869,"title":{},"body":{"controllers/ChessController.html":{}}}],["controller('elitedb",{"_index":1080,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["controller('user",{"_index":1657,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('user/settings",{"_index":1543,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["controllers",{"_index":169,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["contrôleurs",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copiez",{"_index":2012,"title":{},"body":{"index.html":{}}}],["corps",{"_index":1299,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["correspondant",{"_index":1700,"title":{},"body":{"injectables/UsersService.html":{}}}],["correspondent",{"_index":1764,"title":{},"body":{"injectables/UsersService.html":{}}}],["couleur",{"_index":1366,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["country",{"_index":895,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["coup",{"_index":386,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{}}}],["coup'})@validatenested()@type(undefined",{"_index":404,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["coups",{"_index":214,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{}}}],["courant",{"_index":512,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["cours",{"_index":857,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["coverage",{"_index":1778,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":2015,"title":{},"body":{"index.html":{}}}],["cr",{"_index":701,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/MovesService.html":{},"injectables/UsersService.html":{}}}],["create",{"_index":173,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/UsersService.html":{}}}],["create(createanalysisdto",{"_index":178,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["create(createuserdto",{"_index":1695,"title":{},"body":{"injectables/UsersService.html":{}}}],["createanalysisdto",{"_index":179,"title":{"classes/CreateAnalysisDto.html":{}},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{},"coverage.html":{}}}],["createanalysisdto.header",{"_index":552,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["createanalysisdto.pgn",{"_index":550,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["createanalysisdto.variants",{"_index":551,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["createanalysisdto})@apiresponse({status",{"_index":184,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["created_at",{"_index":1047,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["createdat",{"_index":381,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/CustomBaseEntity.html":{},"classes/InfoResultResponseDto.html":{}}}],["createdatecolumn",{"_index":1057,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["createdatecolumn({name",{"_index":1046,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["createinforesults",{"_index":1222,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["createinforesults(inforesultdto",{"_index":1226,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["createmove",{"_index":1418,"title":{},"body":{"injectables/MovesService.html":{}}}],["createmove(move",{"_index":1425,"title":{},"body":{"injectables/MovesService.html":{}}}],["createmoveswithresults",{"_index":1419,"title":{},"body":{"injectables/MovesService.html":{}}}],["createmoveswithresults(analysismovesdto",{"_index":1427,"title":{},"body":{"injectables/MovesService.html":{}}}],["createparamdecorator((data",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":692,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1721,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto})@apiresponse({status",{"_index":694,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["credentials",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStrategy.html":{}}}],["créant",{"_index":508,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["création",{"_index":181,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/MovesService.html":{},"injectables/UsersService.html":{}}}],["crée",{"_index":506,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"injectables/UsersService.html":{}}}],["créer",{"_index":700,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["créée",{"_index":284,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["créée.'})@post",{"_index":187,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["ctx",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":1461,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["currentpassword",{"_index":1459,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["currentuser",{"_index":275,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser.id",{"_index":564,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["custombaseentity",{"_index":156,"title":{"classes/CustomBaseEntity.html":{}},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"classes/CustomBaseEntity.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{},"coverage.html":{}}}],["d",{"_index":2019,"title":{},"body":{"index.html":{}}}],["d'accès",{"_index":794,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["d'accéder",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'analyse",{"_index":374,"title":{},"body":{"entities/AnalysisMove.html":{},"index.html":{}}}],["d'arrivée",{"_index":1385,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["d'attente",{"_index":595,"title":{},"body":{"controllers/AppController.html":{}}}],["d'authentification",{"_index":689,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{}}}],["d'authentification'})@apibody({type",{"_index":681,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["d'avoir",{"_index":1975,"title":{},"body":{"index.html":{}}}],["d'environnement",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["d'identification",{"_index":1325,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["d'un",{"_index":1574,"title":{},"body":{"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["d'une",{"_index":182,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["d'utilisateur",{"_index":1757,"title":{},"body":{"injectables/UsersService.html":{}}}],["d'échecs",{"_index":1958,"title":{},"body":{"index.html":{}}}],["d08",{"_index":980,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["d1",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d2",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d3",{"_index":1930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d4",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d5",{"_index":1916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d6",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d7",{"_index":1901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d8",{"_index":1893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dans",{"_index":537,"title":{},"body":{"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"injectables/MovesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dark",{"_index":1567,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["dark'})@isoptional()@isstring({message",{"_index":1565,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["dark_mode",{"_index":1508,"title":{},"body":{"entities/UserSettings.html":{}}}],["darkmode",{"_index":1505,"title":{},"body":{"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{}}}],["data",{"_index":830,"title":{},"body":{"classes/BaseDto.html":{},"injectables/ChessService.html":{}}}],["database.config",{"_index":1063,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database.config.ts",{"_index":1820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["database_type",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":615,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource",{"_index":499,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["date",{"_index":406,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CustomBaseEntity.html":{},"classes/InfoResultResponseDto.html":{}}}],["date().toisostring",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["de",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":309,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["decorators",{"_index":131,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/ChessService.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"entities/UserSettings.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default_page_number",{"_index":236,"title":{},"body":{"controllers/AnalysisController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_page_size",{"_index":237,"title":{},"body":{"controllers/AnalysisController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":245,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["delete(':id/delete",{"_index":297,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["deleted_at",{"_index":1050,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["deletedat",{"_index":162,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/BaseDto.html":{},"classes/CustomBaseEntity.html":{},"classes/InfoResultResponseDto.html":{}}}],["deletedatecolumn",{"_index":1058,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["deletedatecolumn({name",{"_index":1049,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["deleteonebyid",{"_index":174,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["deleteonebyid(@param('id",{"_index":299,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["deleteonebyid(id",{"_index":190,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["demande",{"_index":364,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["dependencies",{"_index":307,"title":{"dependencies.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1001,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["des",{"_index":226,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"controllers/ElitedbController.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["desktop",{"_index":1980,"title":{},"body":{"index.html":{}}}],["devez",{"_index":2029,"title":{},"body":{"index.html":{}}}],["devrez",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["directement",{"_index":2043,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":863,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["dist/.../i18n.config.ts",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/src/i18n/i18n.config.ts",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["distro",{"_index":1998,"title":{},"body":{"index.html":{}}}],["diteur",{"_index":1989,"title":{},"body":{"index.html":{}}}],["dlancer",{"_index":2026,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1967,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doit",{"_index":1770,"title":{},"body":{"injectables/UsersService.html":{}}}],["données",{"_index":507,"title":{},"body":{"injectables/AnalysisService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dont",{"_index":1575,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["dot",{"_index":1772,"title":{},"body":{"injectables/UsersService.html":{}}}],["draw",{"_index":1100,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["dto",{"_index":784,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{}}}],["dto/request/create",{"_index":254,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["dto/request/jwt",{"_index":1269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/request/login",{"_index":704,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{}}}],["dto/request/refresh",{"_index":711,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["dto/request/update",{"_index":1654,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/request/user",{"_index":1656,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/response/analysis",{"_index":273,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["dto/response/authentication",{"_index":710,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["dto/user",{"_index":1540,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["du",{"_index":367,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["décorateur",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["définir",{"_index":833,"title":{},"body":{"classes/BaseDto.html":{}}}],["déj",{"_index":573,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["déjà.'})@apiresponse({status",{"_index":696,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["délai",{"_index":594,"title":{},"body":{"controllers/AppController.html":{}}}],["délégation",{"_index":554,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/MovesService.html":{}}}],["démarrez",{"_index":2016,"title":{},"body":{"index.html":{}}}],["départ",{"_index":1373,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["dépass",{"_index":605,"title":{},"body":{"controllers/AppController.html":{}}}],["dépassé'})@apiresponse({status",{"_index":596,"title":{},"body":{"controllers/AppController.html":{}}}],["dépendances",{"_index":2021,"title":{},"body":{"index.html":{}}}],["déplacée",{"_index":1378,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["détails",{"_index":218,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["détect",{"_index":1594,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["développ",{"_index":1959,"title":{},"body":{"index.html":{}}}],["d’un",{"_index":848,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["e1",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e2",{"_index":987,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["e2'})@isstring()@isnotempty",{"_index":1374,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["e2e4",{"_index":995,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{}}}],["e2e4'})@isstring()@isnotempty",{"_index":1376,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["e3",{"_index":999,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["e4",{"_index":988,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["e4'})@isarray()@isstring({each",{"_index":1180,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["e4'})@isoptional()@isstring",{"_index":1172,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["e4'})@isstring()@isnotempty",{"_index":1383,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["e5",{"_index":1013,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"miscellaneous/enumerations.html":{}}}],["e6",{"_index":1909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e7",{"_index":1902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e8",{"_index":1894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e89b",{"_index":1128,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/UserDto.html":{}}}],["each",{"_index":435,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["eager",{"_index":353,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["eco",{"_index":979,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["elite",{"_index":1065,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["elitedb",{"_index":1067,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{}}}],["elitedb.controller",{"_index":1095,"title":{},"body":{"modules/ElitedbModule.html":{}}}],["elitedb.service",{"_index":1079,"title":{},"body":{"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{}}}],["elitedb/**/*.entity.{js,ts",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elitedb/elitedb.module",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["elitedb/entities/*.entity.{js,ts",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elitedbcontroller",{"_index":1068,"title":{"controllers/ElitedbController.html":{}},"body":{"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"coverage.html":{}}}],["elitedbmodule",{"_index":616,"title":{"modules/ElitedbModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ElitedbModule.html":{},"modules.html":{},"overview.html":{}}}],["elitedbmove",{"_index":1096,"title":{"entities/ElitedbMove.html":{}},"body":{"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"coverage.html":{}}}],["elitedbmoverepository",{"_index":1114,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["elitedbservice",{"_index":1078,"title":{"injectables/ElitedbService.html":{}},"body":{"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{},"coverage.html":{},"overview.html":{}}}],["elle",{"_index":1292,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["email",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email'})@apiparam({name",{"_index":1622,"title":{},"body":{"controllers/UsersController.html":{}}}],["en",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/InfoResultResponseDto.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":914,"title":{},"body":{"injectables/ChessService.html":{}}}],["endtime",{"_index":981,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["engine",{"_index":1982,"title":{},"body":{"index.html":{}}}],["engineresults",{"_index":339,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{},"injectables/InfoResultsService.html":{}}}],["entities",{"_index":123,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/analysis",{"_index":324,"title":{},"body":{"modules/AnalysisModule.html":{},"classes/AnalysisMoveResponseDto.html":{}}}],["entities/analysis.entity",{"_index":270,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{}}}],["entities/elitedb",{"_index":1097,"title":{},"body":{"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{}}}],["entities/info",{"_index":326,"title":{},"body":{"modules/AnalysisModule.html":{},"classes/InfoResultResponseDto.html":{}}}],["entities/move.entity",{"_index":329,"title":{},"body":{"modules/AnalysisModule.html":{},"classes/MoveResponseDto.html":{}}}],["entities/user",{"_index":1583,"title":{},"body":{"injectables/UserSettingsService.html":{},"modules/UsersModule.html":{}}}],["entities/user.entity",{"_index":1541,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":121,"title":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{}},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{},"coverage.html":{}}}],["entity('analysis",{"_index":160,"title":{},"body":{"entities/Analysis.html":{}}}],["entity('analysis_moves",{"_index":361,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["entity('info_results",{"_index":1158,"title":{},"body":{"entities/InfoResult.html":{}}}],["entity('move",{"_index":1108,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["entity('moves",{"_index":1357,"title":{},"body":{"entities/Move.html":{}}}],["entity('user_settings",{"_index":1517,"title":{},"body":{"entities/UserSettings.html":{}}}],["entity('users",{"_index":1484,"title":{},"body":{"entities/User.html":{}}}],["entity.{js,ts",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymanager",{"_index":1227,"title":{},"body":{"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["entêtes",{"_index":942,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["enum",{"_index":348,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"entities/Move.html":{}}}],["enumerations",{"_index":1864,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/analysis",{"_index":358,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{}}}],["enums/color.enum",{"_index":1356,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["enums/piece",{"_index":1354,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["enums/square.enum",{"_index":1353,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["env",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["env.example",{"_index":2013,"title":{},"body":{"index.html":{}}}],["erik",{"_index":870,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["erik\")'})@apiresponse({status",{"_index":852,"title":{},"body":{"controllers/ChessController.html":{}}}],["err",{"_index":1247,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["erreur",{"_index":588,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{}}}],["erreurs",{"_index":1309,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["error",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ChessService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["errormessages",{"_index":1305,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["errormessages.length",{"_index":1312,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["errors",{"_index":1303,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["errors.flatmap",{"_index":1306,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["est",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["et",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/MovesService.html":{},"index.html":{}}}],["etc",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["eval",{"_index":1005,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["event",{"_index":457,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["ex",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["example",{"_index":396,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"controllers/ElitedbController.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["excellent",{"_index":1878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exception",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:30",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:40",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:5",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:51",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:62",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:7",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exclude",{"_index":1481,"title":{},"body":{"entities/User.html":{}}}],["exec",{"_index":2033,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1283,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exemple",{"_index":2034,"title":{},"body":{"index.html":{}}}],["existant",{"_index":1725,"title":{},"body":{"injectables/UsersService.html":{}}}],["existe",{"_index":572,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["existinganalysis",{"_index":569,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["existinguser",{"_index":1722,"title":{},"body":{"injectables/UsersService.html":{}}}],["expandvariables",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["expired",{"_index":1251,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":312,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1287,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":164,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{}}}],["extractjwt",{"_index":1265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["exécuter",{"_index":2030,"title":{},"body":{"index.html":{}}}],["exécutez",{"_index":1992,"title":{},"body":{"index.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6imrlbgljawv1eebjywnhlm1pyw0ilcjzdwiioijkmdkzymizms00ztuzltq4mmitodq0nc1jowiwztrhode5ztuilcj1c2vybmftzsi6imdyb3nfy2fjyv9ib3vkaw4ilcjpyxqioje3mzm5otcynjksimv4cci6mtczndywmja2ox0.6maczqgy7fow3myrbvawyu1rrtu6_xbyxgmtyax",{"_index":1450,"title":{},"body":{"classes/RefreshTokenRequestDto.html":{}}}],["f1",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f2",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f3",{"_index":1931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f4",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f5",{"_index":1917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f6",{"_index":1910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f7",{"_index":1903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f8",{"_index":1895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["faire",{"_index":542,"title":{},"body":{"injectables/AnalysisService.html":{},"classes/InfoResultResponseDto.html":{}}}],["fallbacklanguage",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":166,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["false})@joincolumn({name",{"_index":146,"title":{},"body":{"entities/Analysis.html":{}}}],["fen",{"_index":340,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"injectables/MovesService.html":{}}}],["fen.split",{"_index":1086,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["fichier",{"_index":638,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findallbyuserid",{"_index":492,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findallbyuserid(userid",{"_index":513,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findmoves",{"_index":1111,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["findmoves(sanitizedfen",{"_index":1115,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["findnondeletedbypgnanduserid",{"_index":493,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findnondeletedbypgnanduserid(pgn",{"_index":517,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findonebyemail",{"_index":1687,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1697,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":175,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":211,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/UsersService.html":{}}}],["findonebyidwithsettings",{"_index":1688,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidwithsettings(id",{"_index":1702,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebypgnanduserid",{"_index":494,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findonebypgnanduserid(pgn",{"_index":520,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["findpaginatedbyuserid",{"_index":176,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["findpaginatedbyuserid(user",{"_index":223,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["flags",{"_index":991,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["float",{"_index":1144,"title":{},"body":{"entities/InfoResult.html":{}}}],["fois",{"_index":546,"title":{},"body":{"injectables/AnalysisService.html":{},"modules/AppModule.html":{}}}],["followers",{"_index":896,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["forbiddenexception",{"_index":528,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["forbiddenexception('vous",{"_index":565,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["fourni",{"_index":1734,"title":{},"body":{"injectables/UsersService.html":{}}}],["fr",{"_index":1510,"title":{},"body":{"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{},"miscellaneous/variables.html":{}}}],["fr'})@isoptional()@isstring({message",{"_index":1561,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["framework",{"_index":1960,"title":{},"body":{"index.html":{}}}],["fromentity",{"_index":384,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["fromentity(analysis",{"_index":466,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["fromentity(analysismove",{"_index":422,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["fromentity(inforesult",{"_index":1189,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["fromentity(move",{"_index":1386,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["function",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1949,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2036,"title":{},"body":{"index.html":{}}}],["g1",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g2",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g3",{"_index":1932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g4",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g5",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g6",{"_index":1911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g7",{"_index":1904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g8",{"_index":1896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gagn",{"_index":977,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["gagner",{"_index":1187,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["garantir",{"_index":539,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["garde",{"_index":1289,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["generatejwttoken",{"_index":766,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generatejwttoken(user",{"_index":775,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generateloginresponsedto",{"_index":767,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generateloginresponsedto(accesstoken",{"_index":782,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generaterefreshtoken",{"_index":768,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generaterefreshtoken(user",{"_index":787,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get(':id",{"_index":293,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":1628,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('email/:email",{"_index":1667,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('email/:email')@apioperation({summary",{"_index":1621,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('health",{"_index":607,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":1658,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me')@apioperation({summary",{"_index":1609,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('player/:username",{"_index":872,"title":{},"body":{"controllers/ChessController.html":{}}}],["get('player/:username/games",{"_index":879,"title":{},"body":{"controllers/ChessController.html":{}}}],["get('player/:username/games/to",{"_index":876,"title":{},"body":{"controllers/ChessController.html":{}}}],["get()@apioperation({summary",{"_index":1525,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["get()@apiquery({name",{"_index":1072,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["getchessplayer",{"_index":843,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["getchessplayer(@param('username",{"_index":873,"title":{},"body":{"controllers/ChessController.html":{}}}],["getchessplayer(username",{"_index":846,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["getdatabaseconfig",{"_index":1062,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getelitedatabaseconfig",{"_index":1064,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethealthcheck",{"_index":583,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjwtconfig",{"_index":745,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getjwtconfig(configservice",{"_index":752,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["getme",{"_index":1603,"title":{},"body":{"controllers/UsersController.html":{}}}],["getme(@currentuser",{"_index":1660,"title":{},"body":{"controllers/UsersController.html":{}}}],["getme(user",{"_index":1608,"title":{},"body":{"controllers/UsersController.html":{}}}],["getmessage",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["getmessage(exception",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["getmoves",{"_index":1070,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["getmoves(@query('fen",{"_index":1083,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["getmoves(fen",{"_index":1071,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["getplayergamearchives",{"_index":904,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergamearchives(username",{"_index":912,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergames",{"_index":905,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergames(username",{"_index":916,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergamesmonthly",{"_index":906,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergamesmonthly(username",{"_index":918,"title":{},"body":{"injectables/ChessService.html":{}}}],["getplayergamestomove",{"_index":844,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["getplayergamestomove(@param('username",{"_index":877,"title":{},"body":{"controllers/ChessController.html":{}}}],["getplayergamestomove(username",{"_index":855,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["getplayermonthlygames",{"_index":845,"title":{},"body":{"controllers/ChessController.html":{}}}],["getplayermonthlygames(@param('username",{"_index":880,"title":{},"body":{"controllers/ChessController.html":{}}}],["getplayermonthlygames(username",{"_index":861,"title":{},"body":{"controllers/ChessController.html":{}}}],["getsettings",{"_index":1522,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["getsettings(@currentuser",{"_index":1546,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["getsettings(user",{"_index":1524,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["getstatus",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["getstatus(exception",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["getting",{"_index":1951,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":1604,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyemail(@param",{"_index":1668,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyemail(getuserbyemaildto",{"_index":1620,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyemaildto",{"_index":1120,"title":{"classes/GetUserByEmailDto.html":{}},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserbyid",{"_index":1605,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@param",{"_index":1665,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(getuserbyiddto",{"_index":1627,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyiddto",{"_index":1126,"title":{"classes/GetUserByIdDto.html":{}},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["git",{"_index":1984,"title":{},"body":{"index.html":{}}}],["gmt+0000",{"_index":983,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["good",{"_index":1872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":2050,"title":{},"body":{"modules.html":{}}}],["génère",{"_index":777,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["génér",{"_index":781,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["générer",{"_index":780,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["h1",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h2",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h3",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h4",{"_index":1926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h5",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h6",{"_index":1912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h7",{"_index":1905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h8",{"_index":1897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handlerequest",{"_index":1241,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1242,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["haschanges",{"_index":1588,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["hashedpassword",{"_index":1727,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1689,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(password",{"_index":1704,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":125,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{}}}],["host",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http",{"_index":910,"title":{},"body":{"injectables/ChessService.html":{},"miscellaneous/variables.html":{}}}],["httpcode",{"_index":246,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{}}}],["httpcode(200",{"_index":720,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpcode(204",{"_index":298,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["httpexception",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalAuthGuard.html":{}}}],["httpexception(errormessages",{"_index":1313,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["httpmodule",{"_index":886,"title":{},"body":{"modules/ChessModule.html":{}}}],["https://api.chess.com/pub",{"_index":923,"title":{},"body":{"injectables/ChessService.html":{}}}],["https://github.com/castledchess/api.gitconfiguration",{"_index":2003,"title":{},"body":{"index.html":{}}}],["https://www.chess.com/game/live/120832550446",{"_index":985,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["httpservice",{"_index":908,"title":{},"body":{"injectables/ChessService.html":{}}}],["httpstatus",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalAuthGuard.html":{}}}],["httpstatus.bad_request",{"_index":1314,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["httpstatus.internal_server_error",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["i18n",{"_index":500,"title":{},"body":{"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["i18n/i18n.config",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nconfig",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18nmodule",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forroot(i18nconfig",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["i18noptions",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i18npath",{"_index":1823,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["i18nservice",{"_index":501,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["i18ntranslations",{"_index":1824,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["i18nvalidationmessage",{"_index":1036,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{}}}],["i18nvalidationmessage('validation.is_email",{"_index":1038,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{}}}],["i18nvalidationmessage('validation.is_not_empty",{"_index":1039,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["i18nvalidationmessage('validation.is_string",{"_index":1041,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserSettingsDto.html":{}}}],["i18nvalidationmessage('validation.is_strong_password",{"_index":1043,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["id",{"_index":194,"title":{},"body":{"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/BaseDto.html":{},"classes/CustomBaseEntity.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiparam({name",{"_index":193,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UsersController.html":{}}}],["ide",{"_index":1991,"title":{},"body":{"index.html":{}}}],["identifiant",{"_index":1635,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifiants",{"_index":667,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["identifier",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["identique",{"_index":1641,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":832,"title":{},"body":{"classes/BaseDto.html":{},"index.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":334,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{}}}],["inaccuracy",{"_index":1873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(['pgn",{"_index":163,"title":{},"body":{"entities/Analysis.html":{}}}],["index(['position",{"_index":1109,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["indisponible",{"_index":604,"title":{},"body":{"controllers/AppController.html":{}}}],["indisponible'})@apiresponse({status",{"_index":592,"title":{},"body":{"controllers/AppController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["info'})@isstring",{"_index":1186,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult",{"_index":325,"title":{"entities/InfoResult.html":{}},"body":{"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["inforesult.analysismove",{"_index":352,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["inforesult.centipawns",{"_index":1201,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.createdat",{"_index":1213,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.deletedat",{"_index":1215,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.depth",{"_index":1195,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.eval",{"_index":1199,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.from",{"_index":1208,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.id",{"_index":1191,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.mate",{"_index":1205,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.move",{"_index":1206,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.pv",{"_index":1212,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.seldepth",{"_index":1197,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.to",{"_index":1210,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.type",{"_index":1193,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.updatedat",{"_index":1214,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesult.winchance",{"_index":1203,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["inforesultdto",{"_index":1230,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["inforesultdto.map((resultdto",{"_index":1234,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["inforesultrepository",{"_index":1225,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["inforesultresponsedto",{"_index":390,"title":{"classes/InfoResultResponseDto.html":{}},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["inforesultresponsedto.fromentity(result",{"_index":445,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["inforesults",{"_index":1229,"title":{},"body":{"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["inforesultservice",{"_index":1422,"title":{},"body":{"injectables/MovesService.html":{}}}],["inforesultsmodule",{"_index":617,"title":{"modules/InfoResultsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules.html":{},"overview.html":{}}}],["inforesultsservice",{"_index":315,"title":{"injectables/InfoResultsService.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"coverage.html":{},"overview.html":{}}}],["information(s",{"_index":1647,"title":{},"body":{"controllers/UsersController.html":{}}}],["informations",{"_index":676,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":411,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["inject",{"_index":750,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/DatabaseModule.html":{}}}],["injectable",{"_index":489,"title":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":490,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":530,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(analysis",{"_index":531,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["injectrepository(analysismove",{"_index":1434,"title":{},"body":{"injectables/MovesService.html":{}}}],["injectrepository(elitedbmove",{"_index":1118,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["injectrepository(inforesult",{"_index":1233,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["injectrepository(move",{"_index":1433,"title":{},"body":{"injectables/MovesService.html":{}}}],["injectrepository(user",{"_index":1719,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(usersettings",{"_index":1584,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["inscription",{"_index":693,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["install",{"_index":1976,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1970,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["interface",{"_index":889,"title":{"interfaces/ChessPlayer.html":{}},"body":{"interfaces/ChessPlayer.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":891,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["interfaces/chess",{"_index":928,"title":{},"body":{"injectables/ChessService.html":{}}}],["interne",{"_index":589,"title":{},"body":{"controllers/AppController.html":{}}}],["invalide",{"_index":718,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/UsersController.html":{}}}],["invalide'})@apiresponse({status",{"_index":1640,"title":{},"body":{"controllers/UsersController.html":{}}}],["invalide.'})@apibearerauth('access",{"_index":685,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["invalide.'})@apiresponse({status",{"_index":684,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["invalide.'})@post('register",{"_index":697,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["invalide.'})@useguards(localauthguard)@httpcode(200)@post('login",{"_index":671,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["invalides",{"_index":716,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalStrategy.html":{}}}],["invalides.'})@apiresponse({status",{"_index":668,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["ipaginationoptions",{"_index":266,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["isarray",{"_index":424,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["isemail",{"_index":1035,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isenum",{"_index":425,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["isenum(analysismoveclassificationenum",{"_index":436,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["isglobal",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["ismessageobject",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ismessageobject(obj",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["isnotempty",{"_index":426,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["isnumber",{"_index":965,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["isobject",{"_index":966,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["isoptional",{"_index":427,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserSettingsDto.html":{}}}],["isstring",{"_index":428,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserSettingsDto.html":{}}}],["isstrongpassword",{"_index":1034,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["isuuid",{"_index":1125,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{}}}],["john_doe",{"_index":1040,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{}}}],["john_doe'})@isstring({message",{"_index":1032,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["join(process.cwd",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":150,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{},"entities/UserSettings.html":{}}}],["joined",{"_index":897,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["jou",{"_index":1368,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["joueur",{"_index":849,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/MoveResponseDto.html":{}}}],["joueur'})@apiparam({name",{"_index":858,"title":{},"body":{"controllers/ChessController.html":{}}}],["joueur'})@apiresponse({status",{"_index":864,"title":{},"body":{"controllers/ChessController.html":{}}}],["jour",{"_index":1532,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["json.stringify(message",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(updatesettingsdto",{"_index":1550,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["jsonwebtoken",{"_index":1249,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["jsonwebtokenerror",{"_index":1244,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["jtpeg",{"_index":968,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["jwt",{"_index":778,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.strategy",{"_index":748,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtauthguard",{"_index":263,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AnalysisController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1272,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":743,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.registerasync",{"_index":749,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmoduleoptions",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtpayloaddto",{"_index":1253,"title":{"classes/JwtPayloadDto.html":{}},"body":{"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":773,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtstrategy",{"_index":736,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":1888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kh7",{"_index":959,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["king",{"_index":1887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["knight",{"_index":1882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kqkq",{"_index":399,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"classes/MoveResponseDto.html":{}}}],["l'access",{"_index":786,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["l'analyse",{"_index":196,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"injectables/MovesService.html":{}}}],["l'analysismove",{"_index":1231,"title":{},"body":{"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["l'ancien",{"_index":1642,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["l'ancienne",{"_index":1648,"title":{},"body":{"controllers/UsersController.html":{}}}],["l'application",{"_index":2009,"title":{},"body":{"index.html":{}}}],["l'email",{"_index":1326,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["l'environnement",{"_index":1966,"title":{},"body":{"index.html":{}}}],["l'erreur",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["l'exception",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["l'id",{"_index":511,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["l'installation",{"_index":2024,"title":{},"body":{"index.html":{}}}],["l'interface",{"_index":1564,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["l'intégrit",{"_index":540,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["l'intérieur",{"_index":2032,"title":{},"body":{"index.html":{}}}],["l'objet",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["l'ordre",{"_index":1443,"title":{},"body":{"injectables/MovesService.html":{}}}],["l'outil",{"_index":1957,"title":{},"body":{"index.html":{}}}],["l'unicit",{"_index":533,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["l'utilisateur",{"_index":228,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["l'utilisateur'})@apibody({type",{"_index":663,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{}}}],["l'utilisateur'})@isemail()@isnotempty",{"_index":1123,"title":{},"body":{"classes/GetUserByEmailDto.html":{}}}],["l'état",{"_index":584,"title":{},"body":{"controllers/AppController.html":{}}}],["l'évaluation",{"_index":1162,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["la",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"classes/InfoResultResponseDto.html":{},"injectables/LocalAuthGuard.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/UserSettingsDto.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["laisser",{"_index":1616,"title":{},"body":{"controllers/UsersController.html":{}}}],["lan",{"_index":994,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["lancement",{"_index":1968,"title":{},"body":{"index.html":{}}}],["lancer",{"_index":1971,"title":{},"body":{"index.html":{}}}],["lancez",{"_index":2025,"title":{},"body":{"index.html":{}}}],["lang",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":1506,"title":{},"body":{"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{}}}],["langue",{"_index":1560,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["last_online",{"_index":898,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["lastvaluefrom",{"_index":926,"title":{},"body":{"injectables/ChessService.html":{}}}],["lastvaluefrom(response",{"_index":933,"title":{},"body":{"injectables/ChessService.html":{}}}],["le",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AnalysisMoveResponseDto.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["legend",{"_index":308,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["legrandjaris",{"_index":969,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["lequel",{"_index":779,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["les",{"_index":217,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2059,"title":{},"body":{"properties.html":{}}}],["light",{"_index":1512,"title":{},"body":{"entities/UserSettings.html":{}}}],["limit",{"_index":225,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["link",{"_index":984,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["lire",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["liste",{"_index":230,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["literal",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":458,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["loaderoptions",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":708,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":740,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["localauthguard",{"_index":707,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["locale",{"_index":1290,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["localstrategy",{"_index":737,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logerror",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logerror(status",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ChessService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["logger('currentuser",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger(allexceptionsfilter.name",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger(chessservice.name",{"_index":924,"title":{},"body":{"injectables/ChessService.html":{}}}],["logger(usersettingscontroller.name",{"_index":1544,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["logger(usersettingsservice.name",{"_index":1582,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["logger(usersservice.name",{"_index":1717,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger.debug(\"récupération",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.warn('aucun",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":657,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["login(@body",{"_index":722,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(logindto",{"_index":660,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(user",{"_index":789,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindto",{"_index":675,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["loginrequestdto",{"_index":661,"title":{"classes/LoginRequestDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"classes/LoginRequestDto.html":{},"coverage.html":{}}}],["loginrequestdto})@apiresponse({status",{"_index":664,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["lors",{"_index":376,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/ChessService.html":{}}}],["lorsque",{"_index":2027,"title":{},"body":{"index.html":{}}}],["manager",{"_index":548,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["manager.save(analysis",{"_index":553,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["manager.save(analysismove",{"_index":1446,"title":{},"body":{"injectables/MovesService.html":{}}}],["manager.save(inforesult",{"_index":1237,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["manytoone",{"_index":151,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{}}}],["manytoone(undefined",{"_index":143,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/InfoResult.html":{}}}],["match",{"_index":1175,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["matching",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["mate",{"_index":1011,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["matières",{"_index":1962,"title":{},"body":{"index.html":{}}}],["mensuelles",{"_index":937,"title":{},"body":{"injectables/ChessService.html":{}}}],["mensuels",{"_index":915,"title":{},"body":{"injectables/ChessService.html":{}}}],["message",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{}}}],["message.message",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["met",{"_index":1535,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mettre",{"_index":1711,"title":{},"body":{"injectables/UsersService.html":{}}}],["minlength",{"_index":1480,"title":{},"body":{"entities/User.html":{}}}],["minlength(3",{"_index":1485,"title":{},"body":{"entities/User.html":{}}}],["minlength(8",{"_index":1486,"title":{},"body":{"entities/User.html":{}}}],["mis",{"_index":1581,"title":{},"body":{"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1863,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":1531,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["mistake",{"_index":1874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mode",{"_index":1557,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["modification",{"_index":1716,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifier",{"_index":1579,"title":{},"body":{"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{}}}],["modifiez",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["module",{"_index":304,"title":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":306,"title":{"modules.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":920,"title":{},"body":{"injectables/ChessService.html":{}}}],["mot",{"_index":1327,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["moteur",{"_index":368,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["mots",{"_index":1763,"title":{},"body":{"injectables/UsersService.html":{}}}],["move",{"_index":328,"title":{"entities/Move.html":{}},"body":{"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["move.after",{"_index":1408,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.before",{"_index":1406,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.captured",{"_index":1396,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.color",{"_index":1390,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.entity",{"_index":155,"title":{},"body":{"entities/Analysis.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{},"entities/InfoResult.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{}}}],["move.entity.ts",{"_index":337,"title":{},"body":{"entities/AnalysisMove.html":{},"entities/ElitedbMove.html":{},"coverage.html":{}}}],["move.entity.ts:10",{"_index":1105,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["move.entity.ts:12",{"_index":356,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:13",{"_index":1107,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["move.entity.ts:15",{"_index":355,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:16",{"_index":1102,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["move.entity.ts:19",{"_index":1103,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["move.entity.ts:21",{"_index":354,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:28",{"_index":351,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:31",{"_index":357,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:37",{"_index":346,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["move.entity.ts:7",{"_index":1106,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["move.flags",{"_index":1400,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.from",{"_index":1391,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.lan",{"_index":1404,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.piece",{"_index":1394,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.promotion",{"_index":1398,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.san",{"_index":1402,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move.to",{"_index":1392,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["move_id",{"_index":139,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{}}}],["moverepository",{"_index":1424,"title":{},"body":{"injectables/MovesService.html":{}}}],["moveresponsedto",{"_index":403,"title":{"classes/MoveResponseDto.html":{}},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["moveresponsedto.fromentity(analysismove.move",{"_index":440,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["moves",{"_index":126,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{},"injectables/MovesService.html":{}}}],["moves.service",{"_index":1414,"title":{},"body":{"modules/MovesModule.html":{}}}],["moves/moves.module",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["moveservice",{"_index":502,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["movesmodule",{"_index":618,"title":{"modules/MovesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MovesModule.html":{},"modules.html":{},"overview.html":{}}}],["movesservice",{"_index":316,"title":{"injectables/MovesService.html":{}},"body":{"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{},"overview.html":{}}}],["méthode",{"_index":1322,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["n",{"_index":992,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["n'autorise",{"_index":1715,"title":{},"body":{"injectables/UsersService.html":{}}}],["n'est",{"_index":1663,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["n'existent",{"_index":1585,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["n'})@isstring()@isnotempty",{"_index":1370,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nb4",{"_index":951,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["nc6",{"_index":1015,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["ne",{"_index":202,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":2035,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":268,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":887,"title":{},"body":{"modules/ChessModule.html":{},"injectables/ChessService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"injectables/ChessService.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":744,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":742,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":262,"title":{},"body":{"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"controllers/ElitedbController.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":323,"title":{},"body":{"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"injectables/ElitedbService.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"classes/InfoResultResponseDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuserinfo",{"_index":1709,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuserinfo.email",{"_index":1749,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuserinfo.username",{"_index":1754,"title":{},"body":{"injectables/UsersService.html":{}}}],["nf3",{"_index":1014,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["nf6",{"_index":1019,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["node",{"_index":2022,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":1961,"title":{},"body":{"index.html":{}}}],["noeuds",{"_index":1166,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["nom",{"_index":1756,"title":{},"body":{"injectables/UsersService.html":{}}}],["nombre",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["non",{"_index":208,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["none",{"_index":1876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":529,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(\"les",{"_index":1599,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["notfoundexception('aucun",{"_index":1742,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(`analyse",{"_index":562,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["notfoundexception(this.i18n.translate('user.errors.notfound",{"_index":1670,"title":{},"body":{"controllers/UsersController.html":{}}}],["nouveau",{"_index":796,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["nouveaux",{"_index":1580,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["nouvel",{"_index":699,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["nouvelles",{"_index":1712,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":2023,"title":{},"body":{"index.html":{}}}],["nul",{"_index":1176,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["null",{"_index":576,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":145,"title":{},"body":{"entities/Analysis.html":{},"entities/InfoResult.html":{},"entities/Move.html":{},"entities/UserSettings.html":{}}}],["number",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisResponseDto.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/MovesService.html":{},"miscellaneous/variables.html":{}}}],["nécessaires",{"_index":371,"title":{},"body":{"entities/AnalysisMove.html":{},"index.html":{}}}],["o",{"_index":1020,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["obj",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseDto.html":{}}}],["object.assign(settings",{"_index":1595,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["object.assign(this",{"_index":1568,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["object.assign(user",{"_index":1758,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.keys(updatesettingsdto).some((key",{"_index":1589,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["object.values(constraints",{"_index":1308,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["objet",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalAuthGuard.html":{}}}],["ok",{"_index":653,"title":{},"body":{"injectables/AppService.html":{}}}],["ondelete",{"_index":343,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["onetomany",{"_index":152,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":135,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"entities/User.html":{}}}],["onetoone",{"_index":1479,"title":{},"body":{"entities/User.html":{},"entities/UserSettings.html":{}}}],["onetoone(undefined",{"_index":1474,"title":{},"body":{"entities/User.html":{},"entities/UserSettings.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":290,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"miscellaneous/variables.html":{}}}],["opérations",{"_index":544,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["order",{"_index":341,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"injectables/MovesService.html":{}}}],["ou",{"_index":1981,"title":{},"body":{"index.html":{}}}],["out",{"_index":319,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outils",{"_index":1977,"title":{},"body":{"index.html":{}}}],["ouvrez",{"_index":2004,"title":{},"body":{"index.html":{}}}],["ouvrir",{"_index":2042,"title":{},"body":{"index.html":{}}}],["overview",{"_index":2052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":990,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["p'})@isoptional()@isstring",{"_index":1364,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["p'})@isstring()@isnotempty",{"_index":1379,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["package",{"_index":1838,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":224,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["paginate",{"_index":269,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"dependencies.html":{}}}],["paginate(this.analysisrepository",{"_index":557,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["pagination",{"_index":267,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["paginées",{"_index":515,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["par",{"_index":192,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('id",{"_index":294,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["parameter",{"_index":1744,"title":{},"body":{"injectables/UsersService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["paramètre",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["paramètres",{"_index":1526,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":1232,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["parente",{"_index":1430,"title":{},"body":{"injectables/MovesService.html":{}}}],["parseuuidpipe",{"_index":247,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["partial",{"_index":1555,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["partie",{"_index":943,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["parties",{"_index":856,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{},"index.html":{}}}],["pas",{"_index":204,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["passe",{"_index":1328,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":1267,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":741,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":1268,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1259,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":1024,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["password.dto",{"_index":1655,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["password.dto.ts",{"_index":1458,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:14",{"_index":1463,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password.dto.ts:19",{"_index":1460,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1462,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password123",{"_index":1042,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["password123.'})@isstring({message",{"_index":1334,"title":{},"body":{"classes/LoginRequestDto.html":{}}}],["password123.'})@isstrongpassword",{"_index":1026,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["patch",{"_index":1650,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('me/password",{"_index":1676,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('me/password')@apioperation({summary",{"_index":1637,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":1881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payload",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.dto",{"_index":1270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.dto.ts",{"_index":1255,"title":{},"body":{"classes/JwtPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:2",{"_index":1256,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.dto.ts:3",{"_index":1257,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.sub",{"_index":1277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":1278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perdre",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permet",{"_index":541,"title":{},"body":{"injectables/AnalysisService.html":{},"classes/BaseDto.html":{}}}],["permettant",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["pgn",{"_index":127,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{}}}],["piece",{"_index":989,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["piecesymbolenum",{"_index":1341,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["pions",{"_index":1164,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["pièce",{"_index":1362,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["plaintoclass",{"_index":1431,"title":{},"body":{"injectables/MovesService.html":{}}}],["plaintoclass(move",{"_index":1437,"title":{},"body":{"injectables/MovesService.html":{}}}],["plaintoinstance",{"_index":1288,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["plaintoinstance(loginrequestdto",{"_index":1300,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["player.interface",{"_index":929,"title":{},"body":{"injectables/ChessService.html":{}}}],["player.interface.ts",{"_index":893,"title":{},"body":{"interfaces/ChessPlayer.html":{},"coverage.html":{}}}],["player1",{"_index":473,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["player2",{"_index":475,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["player_id",{"_index":899,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["plusieurs",{"_index":543,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["position",{"_index":395,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{}}}],["post",{"_index":248,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{}}}],["post(':id/restore",{"_index":302,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["post('login",{"_index":721,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('refresh",{"_index":729,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('register",{"_index":725,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["postgres",{"_index":2038,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["postgresou",{"_index":2041,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1979,"title":{},"body":{"index.html":{}}}],["pour",{"_index":391,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pouvez",{"_index":203,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"index.html":{}}}],["prefix",{"_index":171,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/ElitedbController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["premier",{"_index":1618,"title":{},"body":{"controllers/UsersController.html":{}}}],["primarycolumn",{"_index":1104,"title":{},"body":{"entities/ElitedbMove.html":{}}}],["primarygeneratedcolumn",{"_index":1059,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1052,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["principal",{"_index":1171,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["private",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.env.database_url",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.elite_database_url",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":847,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["projet",{"_index":1955,"title":{},"body":{"index.html":{}}}],["promise",{"_index":189,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"injectables/InfoResultsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promotion",{"_index":1338,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/BaseDto.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"entities/ElitedbMove.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["property",{"_index":580,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["propriétés",{"_index":834,"title":{},"body":{"classes/BaseDto.html":{}}}],["protéger",{"_index":1294,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["providers",{"_index":311,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["prérequis",{"_index":1963,"title":{},"body":{"index.html":{}}}],["pseudonyme",{"_index":851,"title":{},"body":{"controllers/ChessController.html":{},"injectables/ChessService.html":{}}}],["psql",{"_index":2039,"title":{},"body":{"index.html":{}}}],["put",{"_index":1536,"title":{},"body":{"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["put('me",{"_index":1671,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('me')@apioperation({summary",{"_index":1645,"title":{},"body":{"controllers/UsersController.html":{}}}],["put()@apioperation({summary",{"_index":1530,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["pv",{"_index":1012,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["q",{"_index":1388,"title":{},"body":{"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["q'})@isoptional()@isstring",{"_index":1381,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["que",{"_index":1766,"title":{},"body":{"injectables/UsersService.html":{}}}],["queen",{"_index":1886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["query",{"_index":249,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ElitedbController.html":{}}}],["query('limit",{"_index":289,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["query('page",{"_index":288,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["queryresolver",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qui",{"_index":1367,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["r",{"_index":1885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["racine",{"_index":2011,"title":{},"body":{"index.html":{}}}],["rafraîchi",{"_index":728,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["rafraîchi.'})@apiresponse({status",{"_index":683,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["rafraîchissement",{"_index":680,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/RefreshTokenRequestDto.html":{}}}],["rafraîchit",{"_index":688,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["rc7",{"_index":953,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["rc8",{"_index":958,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["readonly",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["recherche",{"_index":1699,"title":{},"body":{"injectables/UsersService.html":{}}}],["rechercher",{"_index":1626,"title":{},"body":{"controllers/UsersController.html":{}}}],["recommand",{"_index":2000,"title":{},"body":{"index.html":{}}}],["record",{"_index":130,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["redémarrer",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":658,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{}}}],["refresh(@body",{"_index":730,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refresh(refreshtoken",{"_index":792,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh(refreshtokenrequest",{"_index":678,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refreshtoken",{"_index":755,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/RefreshTokenRequestDto.html":{}}}],["refreshtokenrequest",{"_index":690,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refreshtokenrequestdto",{"_index":679,"title":{"classes/RefreshTokenRequestDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/RefreshTokenRequestDto.html":{},"coverage.html":{}}}],["refreshtokenrequestdto})@apiresponse({status",{"_index":682,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["register",{"_index":769,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register(createuserdto",{"_index":797,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["relations",{"_index":559,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{}}}],["renommez",{"_index":2014,"title":{},"body":{"index.html":{}}}],["repository",{"_index":498,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/ElitedbService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":250,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["request",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"injectables/LocalAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.body",{"_index":1301,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["request.dto",{"_index":705,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{}}}],["request.dto.ts",{"_index":1122,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:11",{"_index":1124,"title":{},"body":{"classes/GetUserByEmailDto.html":{}}}],["request.dto.ts:14",{"_index":1335,"title":{},"body":{"classes/LoginRequestDto.html":{}}}],["request.dto.ts:16",{"_index":1452,"title":{},"body":{"classes/RefreshTokenRequestDto.html":{}}}],["request.dto.ts:22",{"_index":1134,"title":{},"body":{"classes/GetUserByIdDto.html":{}}}],["request.dto.ts:9",{"_index":1333,"title":{},"body":{"classes/LoginRequestDto.html":{}}}],["request.url",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.user",{"_index":286,"title":{},"body":{"controllers/AnalysisController.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":195,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ElitedbController.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"controllers/UsersController.html":{}}}],["requis",{"_index":1736,"title":{},"body":{"injectables/UsersService.html":{}}}],["requête",{"_index":670,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["requêtes",{"_index":606,"title":{},"body":{"controllers/AppController.html":{}}}],["requêtes'})@get('health",{"_index":599,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":318,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolvers",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/ChessService.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["response.after",{"_index":1407,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.before",{"_index":1405,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.captured",{"_index":1395,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.centipawns",{"_index":1200,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.classification",{"_index":446,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.color",{"_index":1389,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.createdat",{"_index":448,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.deletedat",{"_index":452,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.depth",{"_index":1194,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto",{"_index":274,"title":{},"body":{"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/CreateAnalysisDto.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["response.dto.ts",{"_index":379,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/AuthenticationResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":758,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["response.dto.ts:13",{"_index":463,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.dto.ts:14",{"_index":405,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:17",{"_index":1375,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:19",{"_index":1183,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:22",{"_index":402,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["response.dto.ts:24",{"_index":1170,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:26",{"_index":454,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.dto.ts:27",{"_index":1380,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:28",{"_index":394,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.dto.ts:29",{"_index":456,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:31",{"_index":467,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.dto.ts:32",{"_index":1365,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:33",{"_index":389,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.dto.ts:34",{"_index":1188,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:35",{"_index":423,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.dto.ts:37",{"_index":1382,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:39",{"_index":1178,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:42",{"_index":1371,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:44",{"_index":1179,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:47",{"_index":1384,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:49",{"_index":1173,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:52",{"_index":1377,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:54",{"_index":1184,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:57",{"_index":1361,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:59",{"_index":1181,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:6",{"_index":759,"title":{},"body":{"classes/AuthenticationResponseDto.html":{}}}],["response.dto.ts:61",{"_index":1190,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.dto.ts:62",{"_index":1360,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:64",{"_index":1387,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.dto.ts:8",{"_index":465,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.dto.ts:9",{"_index":760,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.engineresults",{"_index":443,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.eval",{"_index":1198,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.fen",{"_index":441,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["response.flags",{"_index":1399,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.from",{"_index":1207,"title":{},"body":{"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["response.header",{"_index":481,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.id",{"_index":437,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.lan",{"_index":1403,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.mate",{"_index":1204,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.move",{"_index":439,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.moves",{"_index":483,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.pgn",{"_index":479,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.piece",{"_index":1393,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.promotion",{"_index":1397,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.pv",{"_index":1211,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.san",{"_index":1401,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["response.seldepth",{"_index":1196,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.status(status).json",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.to",{"_index":1209,"title":{},"body":{"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["response.type",{"_index":1192,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response.updatedat",{"_index":450,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{}}}],["response.variants",{"_index":477,"title":{},"body":{"classes/AnalysisResponseDto.html":{}}}],["response.winchance",{"_index":1202,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["response/analysis",{"_index":967,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["rest",{"_index":1956,"title":{},"body":{"index.html":{}}}],["restaure",{"_index":523,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["restaurer",{"_index":239,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["restaurée",{"_index":301,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["restaurée.'})@apiresponse({status",{"_index":241,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["restoreonebyid",{"_index":177,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["restoreonebyid(id",{"_index":238,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["result",{"_index":432,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["result.entity",{"_index":327,"title":{},"body":{"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{}}}],["result.entity.ts",{"_index":1136,"title":{},"body":{"entities/InfoResult.html":{},"coverage.html":{}}}],["result.entity.ts:11",{"_index":1143,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:14",{"_index":1153,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:17",{"_index":1145,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:20",{"_index":1142,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:23",{"_index":1157,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:26",{"_index":1147,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:29",{"_index":1148,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:32",{"_index":1146,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:35",{"_index":1154,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:38",{"_index":1151,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:42",{"_index":1139,"title":{},"body":{"entities/InfoResult.html":{}}}],["result.entity.ts:8",{"_index":1155,"title":{},"body":{"entities/InfoResult.html":{}}}],["resultdto",{"_index":1236,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["results",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results.module",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"modules/MovesModule.html":{}}}],["results.module.ts",{"_index":1219,"title":{},"body":{"modules/InfoResultsModule.html":{}}}],["results.service",{"_index":333,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/InfoResultsModule.html":{},"injectables/MovesService.html":{}}}],["results.service.ts",{"_index":1221,"title":{},"body":{"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["results.service.ts:21",{"_index":1228,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["results.service.ts:9",{"_index":1224,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["results/info",{"_index":332,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["retourne",{"_index":1311,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["return",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"classes/InfoResultResponseDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rnbqkbnr/pppppppp/8/8/4p3/8/pppp1ppp/rnbqkbnr",{"_index":997,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/MoveResponseDto.html":{}}}],["rnbqkbnr/pppppppp/8/8/8/8/pppppppp/rnbqkbnr",{"_index":397,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"classes/MoveResponseDto.html":{}}}],["rook",{"_index":1884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["round",{"_index":471,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["route",{"_index":1617,"title":{},"body":{"controllers/UsersController.html":{}}}],["routes",{"_index":1295,"title":{"routes.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"routes.html":{}}}],["rxd4",{"_index":954,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["rxe7",{"_index":956,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["rxjs",{"_index":927,"title":{},"body":{"injectables/ChessService.html":{},"dependencies.html":{}}}],["récupère",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalysisService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{}}}],["récupér",{"_index":871,"title":{},"body":{"controllers/ChessController.html":{}}}],["récupération",{"_index":212,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/ChessService.html":{},"controllers/UserSettingsController.html":{}}}],["récupérer",{"_index":1577,"title":{},"body":{"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{}}}],["récupéré.'})@get('player/:username",{"_index":853,"title":{},"body":{"controllers/ChessController.html":{}}}],["récupérées",{"_index":875,"title":{},"body":{"controllers/ChessController.html":{}}}],["récupérées.'})@get('player/:username/games",{"_index":865,"title":{},"body":{"controllers/ChessController.html":{}}}],["récupérées.'})@get('player/:username/games/to",{"_index":859,"title":{},"body":{"controllers/ChessController.html":{}}}],["répertoire",{"_index":1995,"title":{},"body":{"index.html":{}}}],["réponse",{"_index":785,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["résultat",{"_index":1185,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["résultats",{"_index":366,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{}}}],["réussie",{"_index":717,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["réussie.'})@apiresponse({status",{"_index":665,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["same",{"_index":1745,"title":{},"body":{"injectables/UsersService.html":{}}}],["san",{"_index":993,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/ElitedbMove.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["sanitizedfen",{"_index":1087,"title":{},"body":{"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{}}}],["sant",{"_index":585,"title":{},"body":{"controllers/AppController.html":{}}}],["saveduser",{"_index":1730,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.id",{"_index":1733,"title":{},"body":{"injectables/UsersService.html":{}}}],["schema",{"_index":232,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/ElitedbController.html":{}}}],["scheme",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":1161,"title":{},"body":{"classes/InfoResultResponseDto.html":{}}}],["secret",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sel_depth",{"_index":1152,"title":{},"body":{"entities/InfoResult.html":{}}}],["seldepth",{"_index":1003,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["serveur",{"_index":603,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["serveur'})@apiresponse({status",{"_index":586,"title":{},"body":{"controllers/AppController.html":{}}}],["service",{"_index":591,"title":{},"body":{"controllers/AppController.html":{}}}],["ses",{"_index":213,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/UsersService.html":{}}}],["setdescription(packagejson.description",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":1465,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["settings.controller",{"_index":1683,"title":{},"body":{"modules/UsersModule.html":{}}}],["settings.controller.ts",{"_index":1520,"title":{},"body":{"controllers/UserSettingsController.html":{},"coverage.html":{}}}],["settings.controller.ts:22",{"_index":1527,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["settings.controller.ts:33",{"_index":1534,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["settings.dto",{"_index":1495,"title":{},"body":{"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["settings.dto.ts",{"_index":1553,"title":{},"body":{"classes/UserSettingsDto.html":{},"coverage.html":{}}}],["settings.dto.ts:14",{"_index":1566,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["settings.dto.ts:18",{"_index":1556,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["settings.dto.ts:9",{"_index":1562,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["settings.entity",{"_index":1483,"title":{},"body":{"entities/User.html":{},"injectables/UserSettingsService.html":{},"modules/UsersModule.html":{}}}],["settings.entity.ts",{"_index":1504,"title":{},"body":{"entities/UserSettings.html":{},"coverage.html":{}}}],["settings.entity.ts:11",{"_index":1513,"title":{},"body":{"entities/UserSettings.html":{}}}],["settings.entity.ts:15",{"_index":1515,"title":{},"body":{"entities/UserSettings.html":{}}}],["settings.entity.ts:18",{"_index":1509,"title":{},"body":{"entities/UserSettings.html":{}}}],["settings.entity.ts:8",{"_index":1511,"title":{},"body":{"entities/UserSettings.html":{}}}],["settings.service",{"_index":1539,"title":{},"body":{"controllers/UserSettingsController.html":{},"modules/UsersModule.html":{}}}],["settings.service.ts",{"_index":1569,"title":{},"body":{"injectables/UserSettingsService.html":{},"coverage.html":{}}}],["settings.service.ts:11",{"_index":1571,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["settings.service.ts:24",{"_index":1578,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["settings.service.ts:49",{"_index":1573,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["settings.user",{"_index":1475,"title":{},"body":{"entities/User.html":{}}}],["settings[key",{"_index":1591,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["settingsrepository",{"_index":1572,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["settingsservice",{"_index":1545,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["settitle(packagejson.name",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(packagejson.version",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seule",{"_index":545,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["sh",{"_index":2045,"title":{},"body":{"index.html":{}}}],["si",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["signoptions",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":659,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signup(@body",{"_index":726,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signup(createuserdto",{"_index":691,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["site",{"_index":460,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["soft",{"_index":524,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["soit",{"_index":1767,"title":{},"body":{"injectables/UsersService.html":{}}}],["sombre",{"_index":1558,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["son",{"_index":510,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/UsersController.html":{}}}],["sont",{"_index":369,"title":{},"body":{"entities/AnalysisMove.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["souhait",{"_index":1996,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"modules/ChessModule.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"modules/DatabaseModule.html":{},"controllers/ElitedbController.html":{},"modules/ElitedbModule.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["splitfen",{"_index":1085,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["splitfen[0",{"_index":1088,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["splitfen[2",{"_index":1089,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["splitfen[3",{"_index":1090,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["squareenum",{"_index":1346,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../analysis",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.constant.ts",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color.enum.ts",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../current",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.config.ts",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.constants.ts",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../elite",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../i18n.config.ts",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../i18n.generated.ts",{"_index":2064,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../jwt.config.ts",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../square.enum.ts",{"_index":1870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger.config.ts",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/analysis/analysis.controller.ts",{"_index":170,"title":{},"body":{"controllers/AnalysisController.html":{},"coverage.html":{}}}],["src/analysis/analysis.controller.ts:106",{"_index":243,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/analysis/analysis.controller.ts:35",{"_index":188,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/analysis/analysis.controller.ts:47",{"_index":235,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/analysis/analysis.controller.ts:71",{"_index":222,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/analysis/analysis.controller.ts:90",{"_index":210,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/analysis/analysis.module.ts",{"_index":320,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["src/analysis/analysis.service.ts",{"_index":491,"title":{},"body":{"injectables/AnalysisService.html":{},"coverage.html":{}}}],["src/analysis/analysis.service.ts:102",{"_index":509,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:126",{"_index":522,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:13",{"_index":503,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:151",{"_index":518,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:157",{"_index":526,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:166",{"_index":521,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:28",{"_index":505,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:57",{"_index":514,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/analysis.service.ts:69",{"_index":519,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/analysis/dto/request/create",{"_index":940,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"coverage.html":{}}}],["src/analysis/dto/response/analysis",{"_index":378,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["src/analysis/dto/response/info",{"_index":1160,"title":{},"body":{"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["src/analysis/dto/response/move",{"_index":1358,"title":{},"body":{"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["src/analysis/entities/analysis",{"_index":336,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["src/analysis/entities/analysis.entity",{"_index":1432,"title":{},"body":{"injectables/MovesService.html":{}}}],["src/analysis/entities/analysis.entity.ts",{"_index":124,"title":{},"body":{"entities/Analysis.html":{},"coverage.html":{}}}],["src/analysis/entities/analysis.entity.ts:11",{"_index":142,"title":{},"body":{"entities/Analysis.html":{}}}],["src/analysis/entities/analysis.entity.ts:14",{"_index":149,"title":{},"body":{"entities/Analysis.html":{}}}],["src/analysis/entities/analysis.entity.ts:17",{"_index":133,"title":{},"body":{"entities/Analysis.html":{}}}],["src/analysis/entities/analysis.entity.ts:23",{"_index":140,"title":{},"body":{"entities/Analysis.html":{}}}],["src/analysis/entities/analysis.entity.ts:27",{"_index":148,"title":{},"body":{"entities/Analysis.html":{}}}],["src/analysis/entities/info",{"_index":1135,"title":{},"body":{"entities/InfoResult.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"coverage.html":{}}}],["src/analysis/entities/move.entity",{"_index":1415,"title":{},"body":{"modules/MovesModule.html":{},"injectables/MovesService.html":{}}}],["src/analysis/entities/move.entity.ts",{"_index":1336,"title":{},"body":{"entities/Move.html":{},"coverage.html":{}}}],["src/analysis/entities/move.entity.ts:13",{"_index":1344,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:19",{"_index":1347,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:25",{"_index":1352,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:31",{"_index":1349,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:38",{"_index":1342,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:45",{"_index":1350,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:48",{"_index":1345,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:51",{"_index":1351,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:54",{"_index":1348,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:57",{"_index":1340,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/entities/move.entity.ts:60",{"_index":1339,"title":{},"body":{"entities/Move.html":{}}}],["src/analysis/enums/analysis",{"_index":1871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/analysis/enums/color.enum.ts",{"_index":1879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/analysis/enums/piece",{"_index":1880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/analysis/enums/square.enum.ts",{"_index":1889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":582,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:16",{"_index":600,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":651,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":652,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authentication.controller.ts",{"_index":655,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{}}}],["src/authentication/authentication.controller.ts:29",{"_index":672,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/authentication.controller.ts:46",{"_index":698,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/authentication.controller.ts:62",{"_index":687,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/authentication.module.ts",{"_index":738,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/authentication.service.ts",{"_index":765,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/authentication/authentication.service.ts:12",{"_index":774,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:24",{"_index":798,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:35",{"_index":790,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:48",{"_index":800,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:62",{"_index":793,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:76",{"_index":776,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:86",{"_index":788,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:98",{"_index":783,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/dto/request/create",{"_index":1021,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/authentication/dto/request/jwt",{"_index":1254,"title":{},"body":{"classes/JwtPayloadDto.html":{},"coverage.html":{}}}],["src/authentication/dto/request/login",{"_index":1332,"title":{},"body":{"classes/LoginRequestDto.html":{},"coverage.html":{}}}],["src/authentication/dto/request/refresh",{"_index":1449,"title":{},"body":{"classes/RefreshTokenRequestDto.html":{},"coverage.html":{}}}],["src/authentication/dto/response/authentication",{"_index":753,"title":{},"body":{"classes/AuthenticationResponseDto.html":{},"coverage.html":{}}}],["src/authentication/jwt",{"_index":1238,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts",{"_index":1258,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts:17",{"_index":1264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/jwt.strategy.ts:8",{"_index":1262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/local",{"_index":1279,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/authentication/local.strategy.ts",{"_index":1317,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/authentication/local.strategy.ts:20",{"_index":1321,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/authentication/local.strategy.ts:8",{"_index":1319,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/chess/chess.controller.ts",{"_index":842,"title":{},"body":{"controllers/ChessController.html":{},"coverage.html":{}}}],["src/chess/chess.controller.ts:13",{"_index":854,"title":{},"body":{"controllers/ChessController.html":{}}}],["src/chess/chess.controller.ts:21",{"_index":860,"title":{},"body":{"controllers/ChessController.html":{}}}],["src/chess/chess.controller.ts:28",{"_index":866,"title":{},"body":{"controllers/ChessController.html":{}}}],["src/chess/chess.module.ts",{"_index":885,"title":{},"body":{"modules/ChessModule.html":{}}}],["src/chess/chess.service.ts",{"_index":902,"title":{},"body":{"injectables/ChessService.html":{},"coverage.html":{}}}],["src/chess/chess.service.ts:17",{"_index":911,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:32",{"_index":922,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:44",{"_index":921,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:59",{"_index":913,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:74",{"_index":917,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:8",{"_index":925,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/chess.service.ts:9",{"_index":909,"title":{},"body":{"injectables/ChessService.html":{}}}],["src/chess/interfaces/chess",{"_index":892,"title":{},"body":{"interfaces/ChessPlayer.html":{},"coverage.html":{}}}],["src/common/constants/app.constant.ts",{"_index":1805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/current",{"_index":1653,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dto/base.dto.ts",{"_index":828,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/common/dto/base.dto.ts:12",{"_index":836,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/common/dto/base.dto.ts:15",{"_index":839,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/common/dto/base.dto.ts:18",{"_index":837,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/common/dto/base.dto.ts:9",{"_index":838,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/common/dto/user.dto",{"_index":1652,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/common/dto/user.dto.ts",{"_index":1487,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/common/dto/user.dto.ts:10",{"_index":1490,"title":{},"body":{"classes/UserDto.html":{}}}],["src/common/dto/user.dto.ts:13",{"_index":1493,"title":{},"body":{"classes/UserDto.html":{}}}],["src/common/dto/user.dto.ts:16",{"_index":1489,"title":{},"body":{"classes/UserDto.html":{}}}],["src/common/dto/user.dto.ts:7",{"_index":1491,"title":{},"body":{"classes/UserDto.html":{}}}],["src/common/entities/custom",{"_index":1044,"title":{},"body":{"classes/CustomBaseEntity.html":{},"coverage.html":{}}}],["src/common/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/config/jwt.config.ts",{"_index":1813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":1814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.config.ts",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.constants.ts",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":1061,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/elite",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/elitedb/elitedb.controller.ts",{"_index":1069,"title":{},"body":{"controllers/ElitedbController.html":{},"coverage.html":{}}}],["src/elitedb/elitedb.controller.ts:20",{"_index":1075,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["src/elitedb/elitedb.module.ts",{"_index":1094,"title":{},"body":{"modules/ElitedbModule.html":{}}}],["src/elitedb/elitedb.service.ts",{"_index":1110,"title":{},"body":{"injectables/ElitedbService.html":{},"coverage.html":{}}}],["src/elitedb/elitedb.service.ts:13",{"_index":1116,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["src/elitedb/elitedb.service.ts:7",{"_index":1113,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["src/elitedb/entities/elitedb",{"_index":1099,"title":{},"body":{"entities/ElitedbMove.html":{},"coverage.html":{}}}],["src/generated/i18n.generated.ts",{"_index":1821,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/i18n",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/i18n/i18n.config.ts",{"_index":1825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/info",{"_index":331,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/InfoResultsModule.html":{},"injectables/InfoResultsService.html":{},"modules/MovesModule.html":{},"injectables/MovesService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/moves/moves.module.ts",{"_index":1413,"title":{},"body":{"modules/MovesModule.html":{}}}],["src/moves/moves.service",{"_index":330,"title":{},"body":{"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{}}}],["src/moves/moves.service.ts",{"_index":1417,"title":{},"body":{"injectables/MovesService.html":{},"coverage.html":{}}}],["src/moves/moves.service.ts:13",{"_index":1423,"title":{},"body":{"injectables/MovesService.html":{}}}],["src/moves/moves.service.ts:29",{"_index":1428,"title":{},"body":{"injectables/MovesService.html":{}}}],["src/moves/moves.service.ts:63",{"_index":1426,"title":{},"body":{"injectables/MovesService.html":{}}}],["src/users/dto/request/update",{"_index":1455,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["src/users/dto/request/user",{"_index":1121,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":1552,"title":{},"body":{"classes/UserSettingsDto.html":{},"coverage.html":{}}}],["src/users/entities/user",{"_index":1503,"title":{},"body":{"entities/UserSettings.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":1496,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":1464,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:13",{"_index":1470,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":1478,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:23",{"_index":1472,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:26",{"_index":1467,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:31",{"_index":1476,"title":{},"body":{"entities/User.html":{}}}],["src/users/user",{"_index":1519,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":1602,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:110",{"_index":1649,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:123",{"_index":1643,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1614,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:70",{"_index":1634,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:94",{"_index":1625,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1682,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1686,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:119",{"_index":1710,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":1693,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:156",{"_index":1714,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:182",{"_index":1705,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:186",{"_index":1707,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1696,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":1698,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:78",{"_index":1701,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:95",{"_index":1703,"title":{},"body":{"injectables/UsersService.html":{}}}],["started",{"_index":1952,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":383,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/InfoResultResponseDto.html":{},"classes/MoveResponseDto.html":{}}}],["status",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"controllers/UsersController.html":{}}}],["statut",{"_index":587,"title":{},"body":{"controllers/AppController.html":{}}}],["strategy",{"_index":1266,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stratégie",{"_index":1291,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["string",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["studio",{"_index":1986,"title":{},"body":{"index.html":{}}}],["sub",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/JwtPayloadDto.html":{}}}],["suivante",{"_index":1994,"title":{},"body":{"index.html":{}}}],["suivantes",{"_index":2007,"title":{},"body":{"index.html":{}}}],["suivants",{"_index":1978,"title":{},"body":{"index.html":{}}}],["suivez",{"_index":2005,"title":{},"body":{"index.html":{}}}],["summary",{"_index":283,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/ChessController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":1271,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1315,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":2047,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":191,"title":{},"body":{"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{}}}],["supprime",{"_index":373,"title":{},"body":{"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{}}}],["supprimer",{"_index":205,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["supprimée",{"_index":296,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["supprimée.'})@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["sur",{"_index":363,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["svg",{"_index":2048,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["symbol.enum",{"_index":1355,"title":{},"body":{"entities/Move.html":{},"classes/MoveResponseDto.html":{}}}],["symbol.enum.ts",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchroniser",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1837,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["tapes",{"_index":2006,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":2010,"title":{},"body":{"index.html":{}}}],["termination",{"_index":976,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["texte",{"_index":1990,"title":{},"body":{"index.html":{}}}],["theme",{"_index":1507,"title":{},"body":{"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{}}}],["this.accesstoken",{"_index":762,"title":{},"body":{"classes/AuthenticationResponseDto.html":{}}}],["this.analysismoverepository.create",{"_index":1440,"title":{},"body":{"injectables/MovesService.html":{}}}],["this.analysisrepository.create",{"_index":549,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.findone",{"_index":558,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.restore(id",{"_index":575,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.softdelete(id",{"_index":567,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisservice.create(createanalysisdto",{"_index":285,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.deleteonebyid(id",{"_index":300,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.findallbyuserid(user.id",{"_index":291,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.findonebyid(id",{"_index":295,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.restoreonebyid(id",{"_index":303,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.appservice.gethealthcheck",{"_index":608,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(user",{"_index":724,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authservice.refresh(refreshtokenrequest.refreshtoken",{"_index":731,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authservice.register(createuserdto",{"_index":727,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authservice.validateuser",{"_index":1331,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.validateuser(logindto",{"_index":723,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.base_url}/player/${username",{"_index":931,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.base_url}/player/${username}/games",{"_index":939,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.base_url}/player/${username}/games/${year}/${month",{"_index":936,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.base_url}/player/${username}/games/archives",{"_index":938,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.base_url}/player/${username}/games/to",{"_index":935,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.chessservice.getchessplayer(username",{"_index":874,"title":{},"body":{"controllers/ChessController.html":{}}}],["this.chessservice.getplayergames(username",{"_index":881,"title":{},"body":{"controllers/ChessController.html":{}}}],["this.chessservice.getplayergamestomove(username",{"_index":878,"title":{},"body":{"controllers/ChessController.html":{}}}],["this.createmove(move",{"_index":1439,"title":{},"body":{"injectables/MovesService.html":{}}}],["this.datasource.transaction(async",{"_index":547,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.elitedbmoverepository.find",{"_index":1119,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["this.elitedbservice.findmoves(sanitizedfen",{"_index":1091,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["this.email",{"_index":1498,"title":{},"body":{"classes/UserDto.html":{}}}],["this.findnondeletedbypgnanduserid(analysis.pgn",{"_index":570,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.findonebyemail(createuserdto.email",{"_index":1723,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findonebyemail(newuserinfo.email",{"_index":1752,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findonebyid(id",{"_index":1747,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findonebypgnanduserid(pgn",{"_index":577,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.generatejwttoken(user",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generateloginresponsedto(accesstoken",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generaterefreshtoken(user",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getmessage(exception",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.getsettings(user",{"_index":1586,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["this.getstatus(exception",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.hashpassword(createuserdto.password",{"_index":1728,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashpassword(updateuserpassworddto.password",{"_index":1774,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(url",{"_index":932,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.i18n.translate('common.errors.already_exists",{"_index":578,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.id",{"_index":1497,"title":{},"body":{"classes/UserDto.html":{}}}],["this.inforesultrepository.create",{"_index":1235,"title":{},"body":{"injectables/InfoResultsService.html":{}}}],["this.inforesultservice.createinforesults(analysismovedto.engineresults",{"_index":1447,"title":{},"body":{"injectables/MovesService.html":{}}}],["this.ismessageobject(message",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.jwtservice.decode(refreshtoken",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtservice.sign(payload",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.logerror(status",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.debug",{"_index":1549,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["this.logger.debug(`email",{"_index":1753,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.debug(`mise",{"_index":1587,"title":{},"body":{"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["this.logger.debug(`recherche",{"_index":1738,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.debug(`récupération",{"_index":1600,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["this.logger.debug(`tentative",{"_index":1720,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.debug(`utilisateur",{"_index":1741,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error(\"email",{"_index":1735,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error(`erreur",{"_index":934,"title":{},"body":{"injectables/ChessService.html":{}}}],["this.logger.error(`les",{"_index":1598,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["this.logger.error(`status",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.log(`mot",{"_index":1775,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.log(`utilisateur",{"_index":1732,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.warn(\"le",{"_index":1769,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.warn('les",{"_index":1762,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.warn(`aucun",{"_index":1740,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.warn(`utilisateur",{"_index":1724,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.login(user",{"_index":805,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.moverepository.save(move",{"_index":1448,"title":{},"body":{"injectables/MovesService.html":{}}}],["this.moveservice.createmoveswithresults(createanalysisdto.moves",{"_index":556,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.refreshtoken",{"_index":763,"title":{},"body":{"classes/AuthenticationResponseDto.html":{}}}],["this.settings",{"_index":1500,"title":{},"body":{"classes/UserDto.html":{}}}],["this.settingsrepository.findone",{"_index":1597,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["this.settingsrepository.save(settings",{"_index":1596,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["this.settingsservice.getsettings(user",{"_index":1547,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["this.settingsservice.updatesettings(user",{"_index":1551,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["this.throwusernotfoundexception(id",{"_index":1748,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.throwusernotfoundexception(user.id",{"_index":1773,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.user",{"_index":764,"title":{},"body":{"classes/AuthenticationResponseDto.html":{}}}],["this.username",{"_index":1499,"title":{},"body":{"classes/UserDto.html":{}}}],["this.usersrepository.create",{"_index":1729,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":1739,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":1731,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":804,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersservice.findonebyemail(decoded.email",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersservice.findonebyemail(getuserbyemaildto.email",{"_index":1669,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(logindto.email",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersservice.findonebyid(getuserbyiddto.id",{"_index":1666,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyidwithsettings(user.id",{"_index":1661,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(user.id",{"_index":1674,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatepassword(user.id",{"_index":1678,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validateuniqueanalysis(createanalysisdto.pgn",{"_index":535,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["throw",{"_index":561,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throws",{"_index":714,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throwusernotfoundexception",{"_index":1690,"title":{},"body":{"injectables/UsersService.html":{}}}],["throwusernotfoundexception(id",{"_index":1706,"title":{},"body":{"injectables/UsersService.html":{}}}],["thème",{"_index":1563,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["timecontrol",{"_index":970,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["timestamp",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ChessPlayer.html":{}}}],["title",{"_index":900,"title":{},"body":{"interfaces/ChessPlayer.html":{}}}],["tmp/generated/i18n.generated.ts",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":279,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtAuthGuard.html":{},"classes/RefreshTokenRequestDto.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token')@post('refresh",{"_index":686,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["tokenexpirederror",{"_index":1245,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["toujours",{"_index":370,"title":{},"body":{"entities/AnalysisMove.html":{}}}],["tous",{"_index":216,"title":{},"body":{"controllers/AnalysisController.html":{},"classes/BaseDto.html":{}}}],["traiter",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["transaction",{"_index":538,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{}}}],["transfer",{"_index":831,"title":{},"body":{"classes/BaseDto.html":{}}}],["transform",{"_index":1082,"title":{},"body":{"controllers/ElitedbController.html":{},"controllers/UsersController.html":{}}}],["transforme",{"_index":1298,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["transformer",{"_index":431,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/MovesService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["tre",{"_index":1771,"title":{},"body":{"injectables/UsersService.html":{}}}],["trop",{"_index":598,"title":{},"body":{"controllers/AppController.html":{}}}],["trouv",{"_index":1610,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["trouvé'})@apiresponse({status",{"_index":1612,"title":{},"body":{"controllers/UsersController.html":{}}}],["trouvé'})@usepipes(new",{"_index":1624,"title":{},"body":{"controllers/UsersController.html":{}}}],["trouvée",{"_index":292,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["trouvée.'})@delete(':id/delete')@httpcode(204",{"_index":209,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["trouvée.'})@get(':id",{"_index":221,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["trouvée.'})@post(':id/restore')@httpcode(204",{"_index":242,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["trouvées",{"_index":1310,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["true",{"_index":165,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"entities/Move.html":{},"entities/User.html":{},"entities/UserSettings.html":{},"classes/UserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail()@index",{"_index":1469,"title":{},"body":{"entities/User.html":{}}}],["true})@isoptional",{"_index":1559,"title":{},"body":{"classes/UserSettingsDto.html":{}}}],["true})@isuuid()@isnotempty",{"_index":1133,"title":{},"body":{"classes/GetUserByIdDto.html":{}}}],["true})@joincolumn({name",{"_index":138,"title":{},"body":{"entities/Analysis.html":{},"entities/AnalysisMove.html":{}}}],["true})@type(undefined",{"_index":393,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{}}}],["true})@type(undefined)@isnotempty",{"_index":948,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["try",{"_index":930,"title":{},"body":{"injectables/ChessService.html":{}}}],["tuser",{"_index":1243,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomBaseEntity.html":{},"controllers/ElitedbController.html":{},"entities/ElitedbMove.html":{},"injectables/ElitedbService.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{},"injectables/InfoResultsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginRequestDto.html":{},"entities/Move.html":{},"classes/MoveResponseDto.html":{},"injectables/MovesService.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2062,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/AnalysisMove.html":{},"classes/AnalysisMoveResponseDto.html":{}}}],["typeorm",{"_index":154,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"entities/AnalysisMove.html":{},"injectables/AnalysisService.html":{},"classes/CustomBaseEntity.html":{},"entities/ElitedbMove.html":{},"entities/InfoResult.html":{},"injectables/InfoResultsService.html":{},"entities/Move.html":{},"injectables/MovesService.html":{},"entities/User.html":{},"entities/UserSettings.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm/repository/repository",{"_index":1117,"title":{},"body":{"injectables/ElitedbService.html":{}}}],["typeormmodule",{"_index":322,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/DatabaseModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([analysis",{"_index":335,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["typeormmodule.forfeature([elitedbmove",{"_index":1098,"title":{},"body":{"modules/ElitedbModule.html":{}}}],["typeormmodule.forfeature([inforesult",{"_index":1220,"title":{},"body":{"modules/InfoResultsModule.html":{}}}],["typeormmodule.forfeature([move",{"_index":1416,"title":{},"body":{"modules/MovesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1685,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1066,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesoutputpath",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["téléchargement",{"_index":1964,"title":{},"body":{"index.html":{}}}],["téléchargez",{"_index":2020,"title":{},"body":{"index.html":{}}}],["u",{"_index":2040,"title":{},"body":{"index.html":{}}}],["uci",{"_index":1359,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["un",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"injectables/InfoResultsService.html":{},"injectables/MovesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":715,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":1250,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('unauthorized",{"_index":1252,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":350,"title":{},"body":{"entities/AnalysisMove.html":{},"classes/AnalysisResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDto.html":{},"classes/UserSettingsDto.html":{}}}],["undefined})@apiquery({name",{"_index":233,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["undefined})@get",{"_index":234,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":947,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["undefined})@isnotempty({message",{"_index":1027,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["undefined})@isobject()@isnotempty",{"_index":944,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["undefined})@isoptional",{"_index":1456,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["undefined})@usepipes(new",{"_index":1073,"title":{},"body":{"controllers/ElitedbController.html":{}}}],["une",{"_index":240,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/MovesService.html":{},"index.html":{}}}],["unique",{"_index":153,"title":{},"body":{"entities/Analysis.html":{},"entities/ElitedbMove.html":{},"entities/User.html":{}}}],["unique(['pgn",{"_index":161,"title":{},"body":{"entities/Analysis.html":{}}}],["unknown",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ChessController.html":{},"injectables/ChessService.html":{},"controllers/ElitedbController.html":{},"injectables/ElitedbService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2060,"title":{},"body":{"properties.html":{}}}],["up",{"_index":2017,"title":{},"body":{"index.html":{}}}],["update",{"_index":1691,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":1708,"title":{},"body":{"injectables/UsersService.html":{}}}],["updated_at",{"_index":1055,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["updatedat",{"_index":382,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/AnalysisResponseDto.html":{},"classes/BaseDto.html":{},"classes/CustomBaseEntity.html":{},"classes/InfoResultResponseDto.html":{}}}],["updatedatecolumn",{"_index":1060,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["updatedatecolumn({name",{"_index":1054,"title":{},"body":{"classes/CustomBaseEntity.html":{}}}],["updateduser",{"_index":1673,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateduser.id",{"_index":1759,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassword",{"_index":1606,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatepassword(@currentuser",{"_index":1677,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatepassword(id",{"_index":1713,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassword(user",{"_index":1636,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatesettings",{"_index":1523,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["updatesettings(@currentuser",{"_index":1548,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["updatesettings(user",{"_index":1528,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["updatesettingsdto",{"_index":1529,"title":{},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{}}}],["updatesettingsdto[key",{"_index":1590,"title":{},"body":{"injectables/UserSettingsService.html":{}}}],["updateuser",{"_index":1607,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(@currentuser",{"_index":1672,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(user",{"_index":1644,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":1454,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto})@apiresponse({status",{"_index":1646,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserpassworddto",{"_index":1457,"title":{"classes/UpdateUserPasswordDto.html":{}},"body":{"classes/UpdateUserPasswordDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserpassworddto.confirmpassword",{"_index":1761,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassworddto.currentpassword",{"_index":1768,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassworddto.password",{"_index":1760,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassworddto})@apiresponse({status",{"_index":1639,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":901,"title":{},"body":{"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":751,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":251,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthenticationController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":281,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":719,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["usepipes",{"_index":1077,"title":{},"body":{"controllers/ElitedbController.html":{},"controllers/UsersController.html":{}}}],["usepipes(new",{"_index":1081,"title":{},"body":{"controllers/ElitedbController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":128,"title":{"entities/User.html":{}},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/UserSettings.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.analyses",{"_index":144,"title":{},"body":{"entities/Analysis.html":{}}}],["user.decorator",{"_index":277,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UserSettingsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":706,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1022,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":1033,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":1031,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":1028,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":1030,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":1516,"title":{},"body":{"entities/UserSettings.html":{}}}],["user.id",{"_index":536,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AuthenticationService.html":{},"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["user.settings",{"_index":1501,"title":{},"body":{"classes/UserDto.html":{},"entities/UserSettings.html":{}}}],["user.settings)@joincolumn({name",{"_index":1514,"title":{},"body":{"entities/UserSettings.html":{}}}],["user.username",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["user/settings",{"_index":1521,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["user@example.com",{"_index":1037,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["user@example.com'})@apiresponse({status",{"_index":1623,"title":{},"body":{"controllers/UsersController.html":{}}}],["user@example.com'})@isemail",{"_index":1029,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/UpdateUserDto.html":{}}}],["user_id",{"_index":147,"title":{},"body":{"entities/Analysis.html":{},"entities/UserSettings.html":{}}}],["userdto",{"_index":757,"title":{"classes/UserDto.html":{}},"body":{"classes/AuthenticationResponseDto.html":{},"injectables/AuthenticationService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userdto(await",{"_index":1746,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto(currentuser",{"_index":1662,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto(updateduser",{"_index":1675,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto(user",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/UsersController.html":{}}}],["userdto})@apiresponse({status",{"_index":1611,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":516,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["username",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ChessController.html":{},"interfaces/ChessPlayer.html":{},"injectables/ChessService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["username'})@apiparam({name",{"_index":850,"title":{},"body":{"controllers/ChessController.html":{}}}],["usernamefield",{"_index":1330,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":2037,"title":{},"body":{"index.html":{}}}],["users.controller",{"_index":1684,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1651,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/user",{"_index":1494,"title":{},"body":{"classes/UserDto.html":{}}}],["users/entities/user.entity",{"_index":159,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["users/users.module",{"_index":628,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["users/users.service",{"_index":802,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userscontroller",{"_index":1601,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersettings",{"_index":1473,"title":{"entities/UserSettings.html":{}},"body":{"entities/User.html":{},"entities/UserSettings.html":{},"injectables/UserSettingsService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersettingscontroller",{"_index":1518,"title":{"controllers/UserSettingsController.html":{}},"body":{"controllers/UserSettingsController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersettingsdto",{"_index":1492,"title":{"classes/UserSettingsDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UserSettingsController.html":{},"classes/UserSettingsDto.html":{},"injectables/UserSettingsService.html":{},"coverage.html":{}}}],["usersettingsdto(user.settings",{"_index":1502,"title":{},"body":{"classes/UserDto.html":{}}}],["usersettingsdto})@apibearerauth('access",{"_index":1533,"title":{},"body":{"controllers/UserSettingsController.html":{}}}],["usersettingsservice",{"_index":1538,"title":{"injectables/UserSettingsService.html":{}},"body":{"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":619,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":1694,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":772,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utilis",{"_index":1751,"title":{},"body":{"injectables/UsersService.html":{}}}],["utilisant",{"_index":795,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalAuthGuard.html":{}}}],["utilisateur",{"_index":674,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/UserSettingsController.html":{},"injectables/UserSettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["utiliser",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["utilisez",{"_index":2001,"title":{},"body":{"index.html":{}}}],["utilisée",{"_index":1293,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["uuid",{"_index":1132,"title":{},"body":{"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"controllers/UsersController.html":{}}}],["valid",{"_index":801,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validate",{"_index":1260,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["validate(body",{"_index":1304,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["validate(email",{"_index":1320,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":429,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{}}}],["validateuniqueanalysis",{"_index":495,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["validateuniqueanalysis(pgn",{"_index":525,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["validateuser",{"_index":770,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validateuser(logindto",{"_index":799,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validationerror",{"_index":1286,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["validationpipe",{"_index":1074,"title":{},"body":{"controllers/ElitedbController.html":{},"controllers/UsersController.html":{}}}],["validator",{"_index":430,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserByEmailDto.html":{},"classes/GetUserByIdDto.html":{},"classes/InfoResultResponseDto.html":{},"injectables/LocalAuthGuard.html":{},"classes/LoginRequestDto.html":{},"classes/MoveResponseDto.html":{},"classes/RefreshTokenRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserSettingsDto.html":{},"dependencies.html":{}}}],["valide",{"_index":1302,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["valider",{"_index":1324,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["valides",{"_index":1329,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalysisController.html":{},"injectables/ChessService.html":{},"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":648,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variantes",{"_index":961,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["variants",{"_index":129,"title":{},"body":{"entities/Analysis.html":{},"classes/AnalysisResponseDto.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{}}}],["version",{"_index":2057,"title":{},"body":{"properties.html":{}}}],["veut",{"_index":1576,"title":{},"body":{"injectables/UserSettingsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["visual",{"_index":1985,"title":{},"body":{"index.html":{}}}],["viter",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UsersService.html":{}}}],["votre",{"_index":1997,"title":{},"body":{"index.html":{}}}],["voulez",{"_index":2028,"title":{},"body":{"index.html":{}}}],["vous",{"_index":201,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["vérifiant",{"_index":1296,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["vérification",{"_index":532,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AppController.html":{}}}],["vérifie",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthenticationService.html":{}}}],["vérifier",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UsersService.html":{}}}],["w",{"_index":398,"title":{},"body":{"classes/AnalysisMoveResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"controllers/ElitedbController.html":{},"classes/MoveResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["w'})@isstring()@isnotempty",{"_index":1369,"title":{},"body":{"classes/MoveResponseDto.html":{}}}],["watch",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":472,"title":{},"body":{"classes/AnalysisResponseDto.html":{},"classes/CreateAnalysisDto.html":{},"entities/ElitedbMove.html":{},"miscellaneous/enumerations.html":{}}}],["whiteelo",{"_index":972,"title":{},"body":{"classes/CreateAnalysisDto.html":{}}}],["win_chance",{"_index":1156,"title":{},"body":{"entities/InfoResult.html":{}}}],["winchance",{"_index":1009,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"entities/InfoResult.html":{},"classes/InfoResultResponseDto.html":{}}}],["windows",{"_index":2002,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":568,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["wsl2",{"_index":1999,"title":{},"body":{"index.html":{}}}],["year",{"_index":919,"title":{},"body":{"injectables/ChessService.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ChessModule.html":{},"modules/ElitedbModule.html":{},"modules/InfoResultsModule.html":{},"modules/MovesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zsa",{"_index":1453,"title":{},"body":{"classes/RefreshTokenRequestDto.html":{}}}],["zsa'})@isstring({message",{"_index":1451,"title":{},"body":{"classes/RefreshTokenRequestDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                    Private\n                                getMessage\n                            \n                            \n                                    Private\n                                getStatus\n                            \n                            \n                                    Private\n                                isMessageObject\n                            \n                            \n                                    Private\n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AllExceptionsFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/all-exceptions.filter.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all-exceptions.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMessage(exception)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all-exceptions.filter.ts:40\n                        \n                    \n\n\n            \n                \n                        Récupère le message de l'exception.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exception\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    l'exception à traiter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus(exception)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all-exceptions.filter.ts:30\n                        \n                    \n\n\n            \n                \n                        Récupère le status de l'exception.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exception\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    l'exception à traiter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                un nombre.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isMessageObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    isMessageObject(obj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all-exceptions.filter.ts:62\n                        \n                    \n\n\n            \n                \n                        Vérifie si l'objet passé en paramètre est un objet de message.\nSi c'est le cas, alors on affiche la clé message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    l'objet à vérifier.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                un booléen.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logError\n                        \n                    \n                \n            \n            \n                \n                        \n                    logError(status: number, message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all-exceptions.filter.ts:51\n                        \n                    \n\n\n            \n                \n                        Log l'erreur avec le status et le message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    le status de l'erreur (ex : 404, 500, etc).\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    le message de l'erreur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus, Logger } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger = new Logger(AllExceptionsFilter.name);\n\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = this.getStatus(exception);\n    const message = this.getMessage(exception);\n\n    this.logError(status, message);\n\n    response.status(status).json({\n      status: 'error',\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: this.isMessageObject(message) ? message.message : message,\n    });\n  }\n\n  /**\n   * Récupère le status de l'exception.\n   * @param exception l'exception à traiter.\n   * @private\n   * @returns un nombre.\n   */\n  private getStatus(exception: unknown): number {\n    return exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n  }\n\n  /**\n   * Récupère le message de l'exception.\n   * @param exception l'exception à traiter.\n   * @private\n   * @returns un objet.\n   */\n  private getMessage(exception: unknown): unknown {\n    return exception instanceof HttpException ? exception.getResponse() : exception;\n  }\n\n  /**\n   * Log l'erreur avec le status et le message.\n   * @param status le status de l'erreur (ex : 404, 500, etc).\n   * @param message le message de l'erreur.\n   * @private\n   * @returns void.\n   */\n  private logError(status: number, message: unknown): void {\n    this.logger.error(`Status: ${status} Error: ${JSON.stringify(message)}`);\n  }\n\n  /**\n   * Vérifie si l'objet passé en paramètre est un objet de message.\n   * Si c'est le cas, alors on affiche la clé message.\n   * @param obj l'objet à vérifier.\n   * @private\n   * @returns un booléen.\n   */\n  private isMessageObject(obj: unknown): obj is { message: string } {\n    return obj && typeof obj === 'object' && 'message' in obj;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Analysis.html":{"url":"entities/Analysis.html","title":"entity - Analysis","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Analysis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/entities/analysis.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                header\n                            \n                            \n                                    \n                                    \n                                moves\n                            \n                            \n                                    \n                                pgn\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        moves\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnalysisMove[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, analysisMove => analysisMove.analysis, {cascade: true})@JoinColumn({name: 'move_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pgn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.analyses, {nullable: false})@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, JoinColumn, ManyToOne, OneToMany, Unique } from 'typeorm';\nimport { AnalysisMove } from './analysis-move.entity';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\nimport { User } from '../../users/entities/user.entity';\n\n@Entity('analysis')\n@Unique(['pgn', 'user', 'deletedAt'])\n@Index(['pgn', 'user', 'deletedAt'])\nexport class Analysis extends CustomBaseEntity {\n  @Column()\n  pgn: string;\n\n  @Column()\n  variants: number;\n\n  @Column('jsonb')\n  header: Record;\n\n  @OneToMany(() => AnalysisMove, (analysisMove) => analysisMove.analysis, {\n    cascade: true,\n  })\n  @JoinColumn({ name: 'move_id' })\n  moves: AnalysisMove[];\n\n  @ManyToOne(() => User, (user) => user.analyses, { nullable: false })\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnalysisController.html":{"url":"controllers/AnalysisController.html","title":"controller - AnalysisController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnalysisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/analysis.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                analysis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOneById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findPaginatedByUserId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                restoreOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAnalysisDto: CreateAnalysisDto, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Création d'une analyse'})@ApiBody({type: CreateAnalysisDto})@ApiResponse({status: 201, description: 'Analyse créée.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/analysis/analysis.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAnalysisDto\n                                            \n                                                            CreateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOneById(id: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Suppression d'une analyse par ID'})@ApiParam({name: 'id', required: true, description: 'ID de l'analyse', type: String})@ApiResponse({status: 204, description: 'Analyse supprimée.'})@ApiResponse({status: 403, description: 'Vous ne pouvez pas supprimer cette analyse.'})@ApiResponse({status: 404, description: 'Analyse non trouvée.'})@Delete(':id/delete')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/analysis/analysis.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Récupération d'une analyse avec ses coups par ID'})@ApiParam({name: 'id', required: true, description: 'ID de l'analyse', type: String})@ApiResponse({status: 200, description: 'Tous les détails de l'analyse', type: AnalysisResponseDto})@ApiResponse({status: 403, description: 'Vous ne pouvez pas accéder à cette analyse.'})@ApiResponse({status: 404, description: 'Analyse non trouvée.'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/analysis/analysis.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findPaginatedByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaginatedByUserId(user: User, page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Récupération des analyses de l'utilisateur connecté'})@ApiResponse({status: 200, description: 'Liste des analyses de l'utilisateur connecté.'})@ApiQuery({name: 'page', required: true, schema: undefined})@ApiQuery({name: 'limit', required: true, schema: undefined})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/analysis/analysis.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_PAGE_NUMBER\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_PAGE_SIZE\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        restoreOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreOneById(id: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Restaurer une analyse par ID'})@ApiParam({name: 'id', required: true, description: 'ID de l'analyse', type: String})@ApiResponse({status: 204, description: 'Analyse restaurée.'})@ApiResponse({status: 403, description: 'Vous ne pouvez pas restaurer cette analyse.'})@ApiResponse({status: 404, description: 'Analyse non trouvée.'})@Post(':id/restore')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/analysis/analysis.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseUUIDPipe,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { AnalysisService } from './analysis.service';\nimport { CreateAnalysisDto } from './dto/request/create-analysis.dto';\nimport { ApiBearerAuth, ApiBody, ApiOperation, ApiParam, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../authentication/jwt-auth.guard';\nimport { User } from '../users/entities/user.entity';\nimport { IPaginationOptions, Pagination } from 'nestjs-typeorm-paginate';\nimport { Analysis } from './entities/analysis.entity';\nimport { DEFAULT_PAGE_NUMBER, DEFAULT_PAGE_SIZE } from '../common/constants';\nimport { AnalysisResponseDto } from './dto/response/analysis-response.dto';\nimport { CurrentUser } from '../common/decorators/current-user.decorator';\n\n@ApiBearerAuth('access-token')\n@Controller('analysis')\n@UseGuards(JwtAuthGuard)\nexport class AnalysisController {\n  constructor(private readonly analysisService: AnalysisService) {}\n\n  @ApiOperation({ summary: \"Création d'une analyse\" })\n  @ApiBody({ type: CreateAnalysisDto })\n  @ApiResponse({ status: 201, description: 'Analyse créée.' })\n  @Post()\n  async create(\n    @Body() createAnalysisDto: CreateAnalysisDto,\n    @Req() request: Request & { user: User },\n  ): Promise {\n    return this.analysisService.create(createAnalysisDto, request.user);\n  }\n\n  @ApiOperation({ summary: \"Récupération des analyses de l'utilisateur connecté\" })\n  @ApiResponse({ status: 200, description: \"Liste des analyses de l'utilisateur connecté.\" })\n  @ApiQuery({ name: 'page', required: true, schema: { default: DEFAULT_PAGE_NUMBER } })\n  @ApiQuery({ name: 'limit', required: true, schema: { default: DEFAULT_PAGE_SIZE } })\n  @Get()\n  async findPaginatedByUserId(\n    @CurrentUser() user: User,\n    @Query('page') page: number = DEFAULT_PAGE_NUMBER,\n    @Query('limit') limit: number = DEFAULT_PAGE_SIZE,\n  ): Promise> {\n    const options: IPaginationOptions = { page, limit };\n    return this.analysisService.findAllByUserId(user.id, options);\n  }\n\n  @ApiOperation({ summary: \"Récupération d'une analyse avec ses coups par ID\" })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: \"ID de l'analyse\",\n    type: String,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"Tous les détails de l'analyse\",\n    type: AnalysisResponseDto,\n  })\n  @ApiResponse({ status: 403, description: 'Vous ne pouvez pas accéder à cette analyse.' })\n  @ApiResponse({ status: 404, description: 'Analyse non trouvée.' })\n  @Get(':id')\n  async findOneById(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Req() request: Request & { user: User },\n  ): Promise {\n    return this.analysisService.findOneById(id, request.user);\n  }\n\n  @ApiOperation({ summary: \"Suppression d'une analyse par ID\" })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: \"ID de l'analyse\",\n    type: String,\n  })\n  @ApiResponse({ status: 204, description: 'Analyse supprimée.' })\n  @ApiResponse({ status: 403, description: 'Vous ne pouvez pas supprimer cette analyse.' })\n  @ApiResponse({ status: 404, description: 'Analyse non trouvée.' })\n  @Delete(':id/delete')\n  @HttpCode(204)\n  async deleteOneById(@Param('id', ParseUUIDPipe) id: string, @Req() request: Request & { user: User }): Promise {\n    return this.analysisService.deleteOneById(id, request.user);\n  }\n\n  @ApiOperation({ summary: 'Restaurer une analyse par ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: \"ID de l'analyse\",\n    type: String,\n  })\n  @ApiResponse({ status: 204, description: 'Analyse restaurée.' })\n  @ApiResponse({ status: 403, description: 'Vous ne pouvez pas restaurer cette analyse.' })\n  @ApiResponse({ status: 404, description: 'Analyse non trouvée.' })\n  @Post(':id/restore')\n  @HttpCode(204)\n  async restoreOneById(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Req() request: Request & { user: User },\n  ): Promise {\n    return this.analysisService.restoreOneById(id, request.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalysisModule.html":{"url":"modules/AnalysisModule.html","title":"module - AnalysisModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalysisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalysisModule\n\n\n\ncluster_AnalysisModule_providers\n\n\n\n\nAnalysisService\n\nAnalysisService\n\n\n\nAnalysisModule\n\nAnalysisModule\n\nAnalysisModule -->\n\nAnalysisService->AnalysisModule\n\n\n\n\n\nInfoResultsService\n\nInfoResultsService\n\nAnalysisModule -->\n\nInfoResultsService->AnalysisModule\n\n\n\n\n\nMovesService\n\nMovesService\n\nAnalysisModule -->\n\nMovesService->AnalysisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/analysis/analysis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalysisService\n                        \n                        \n                            InfoResultsService\n                        \n                        \n                            MovesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnalysisController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnalysisService } from './analysis.service';\nimport { AnalysisController } from './analysis.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AnalysisMove } from './entities/analysis-move.entity';\nimport { Analysis } from './entities/analysis.entity';\nimport { InfoResult } from './entities/info-result.entity';\nimport { Move } from './entities/move.entity';\nimport { MovesService } from 'src/moves/moves.service';\nimport { InfoResultsService } from 'src/info-results/info-results.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Analysis, AnalysisMove, InfoResult, Move])],\n  providers: [AnalysisService, MovesService, InfoResultsService],\n  controllers: [AnalysisController],\n})\nexport class AnalysisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AnalysisMove.html":{"url":"entities/AnalysisMove.html","title":"entity - AnalysisMove","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AnalysisMove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/entities/analysis-move.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                analysis\n                            \n                            \n                                    \n                                    Optional\n                                classification\n                            \n                            \n                                    \n                                engineResults\n                            \n                            \n                                    \n                                fen\n                            \n                            \n                                    \n                                    \n                                move\n                            \n                            \n                                    \n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        analysis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Analysis\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, analysis => analysis.moves, {onDelete: 'CASCADE'})@JoinColumn({name: 'analysis_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AnalysisMoveClassificationEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        engineResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoResult[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, infoResult => infoResult.analysisMove, {cascade: true, eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        move\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Move\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {cascade: true})@JoinColumn({name: 'move_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/analysis-move.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, OneToMany } from 'typeorm';\nimport { Move } from './move.entity';\nimport { AnalysisMoveClassificationEnum } from '../enums/analysis-move-classification.enum';\nimport { InfoResult } from './info-result.entity';\nimport { Analysis } from './analysis.entity';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\n\n@Entity('analysis_moves')\nexport class AnalysisMove extends CustomBaseEntity {\n  @ManyToOne(() => Move, { cascade: true })\n  @JoinColumn({ name: 'move_id' })\n  move: Move;\n\n  @Column()\n  fen: string;\n\n  @OneToMany(() => InfoResult, (infoResult) => infoResult.analysisMove, {\n    cascade: true,\n    eager: false, // Chargement sur demande, car les résultats du moteur ne sont pas toujours nécessaires\n  })\n  engineResults: InfoResult[];\n\n  @Column({\n    type: 'enum',\n    enum: AnalysisMoveClassificationEnum,\n    default: AnalysisMoveClassificationEnum.None,\n  })\n  classification?: typeof AnalysisMoveClassificationEnum;\n\n  @Column()\n  order: number;\n\n  @ManyToOne(() => Analysis, (analysis) => analysis.moves, {\n    onDelete: 'CASCADE', // Supprime les coups d'analyse associés lors de la suppression de l'analyse\n  })\n  @JoinColumn({ name: 'analysis_id' })\n  analysis: Analysis;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnalysisMoveResponseDto.html":{"url":"classes/AnalysisMoveResponseDto.html","title":"class - AnalysisMoveResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnalysisMoveResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/dto/response/analysis-move-response.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                classification\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                engineResults\n                            \n                            \n                                    \n                                    \n                                    \n                                fen\n                            \n                            \n                                    \n                                    \n                                    \n                                move\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La classification du coup analysé', enum: AnalysisMoveClassificationEnum})@IsOptional()@IsEnum(AnalysisMoveClassificationEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-move-response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        engineResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoResultResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Les résultats du moteur pour le coup analysé'})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-move-response.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La position FEN du coup analysé', example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-move-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        move\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-move-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2021-09-01T00:00:00.000Z'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '837e5edb-c833-447e-a57d-a43fb6c0100b'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromEntity(analysisMove: AnalysisMove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/dto/response/analysis-move-response.dto.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analysisMove\n                                            \n                                                            AnalysisMove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AnalysisMoveResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEnum, IsNotEmpty, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { MoveResponseDto } from './move-response.dto';\nimport { AnalysisMoveClassificationEnum } from '../../enums/analysis-move-classification.enum';\nimport { InfoResultResponseDto } from './info-result-response.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { BaseDto } from '../../../common/dto/base.dto';\nimport { AnalysisMove } from '../../entities/analysis-move.entity';\n\nexport class AnalysisMoveResponseDto extends BaseDto {\n  @ApiProperty({ description: 'Le coup' })\n  @ValidateNested()\n  @Type(() => MoveResponseDto)\n  move: MoveResponseDto;\n\n  @ApiProperty({\n    description: 'La position FEN du coup analysé',\n    example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n  })\n  @IsString()\n  @IsNotEmpty()\n  fen: string;\n\n  @ApiProperty({ description: 'Les résultats du moteur pour le coup analysé' })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => InfoResultResponseDto)\n  engineResults: InfoResultResponseDto[];\n\n  @ApiProperty({ description: 'La classification du coup analysé', enum: AnalysisMoveClassificationEnum })\n  @IsOptional()\n  @IsEnum(AnalysisMoveClassificationEnum)\n  classification?: typeof AnalysisMoveClassificationEnum;\n\n  static fromEntity(analysisMove: AnalysisMove): AnalysisMoveResponseDto {\n    const response = new AnalysisMoveResponseDto();\n    response.id = analysisMove.id;\n    response.move = MoveResponseDto.fromEntity(analysisMove.move);\n    response.fen = analysisMove.fen;\n    response.engineResults =\n      analysisMove.engineResults?.map((result) => InfoResultResponseDto.fromEntity(result)) || [];\n    response.classification = analysisMove.classification;\n    response.createdAt = analysisMove.createdAt;\n    response.updatedAt = analysisMove.updatedAt;\n    response.deletedAt = analysisMove.deletedAt;\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnalysisResponseDto.html":{"url":"classes/AnalysisResponseDto.html","title":"class - AnalysisResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnalysisResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/dto/response/analysis-response.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                header\n                            \n                            \n                                    \n                                moves\n                            \n                            \n                                    \n                                pgn\n                            \n                            \n                                    \n                                variants\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-response.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        moves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalysisMoveResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-response.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pgn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[Event \"Live Chess\"]\n[Site \"Chess.com\"]\n[Date \"202…]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/analysis-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2021-09-01T00:00:00.000Z'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '837e5edb-c833-447e-a57d-a43fb6c0100b'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromEntity(analysis: Analysis)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/dto/response/analysis-response.dto.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analysis\n                                            \n                                                            Analysis\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AnalysisResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Analysis } from '../../entities/analysis.entity';\nimport { AnalysisMoveResponseDto } from './analysis-move-response.dto';\nimport { BaseDto } from '../../../common/dto/base.dto';\n\nexport class AnalysisResponseDto extends BaseDto {\n  @ApiProperty({ example: 3 })\n  variants: number;\n\n  @ApiProperty({\n    example: '[Event \"Live Chess\"]\\n[Site \"Chess.com\"]\\n[Date \"202…]',\n  })\n  pgn: string;\n\n  @ApiProperty({\n    example: {\n      Event: 'Live Chess',\n      Site: 'Chess.com',\n      Date: '2024.11.11',\n      Round: '?',\n      White: 'player1',\n      Black: 'player2',\n      Result: '0-1',\n    },\n  })\n  header: Record;\n\n  @ApiProperty({ type: [AnalysisMoveResponseDto] })\n  moves: AnalysisMoveResponseDto[];\n\n  static fromEntity(analysis: Analysis): AnalysisResponseDto {\n    const response = new AnalysisResponseDto();\n    response.id = analysis.id;\n    response.variants = analysis.variants;\n    response.pgn = analysis.pgn;\n    response.header = analysis.header;\n    response.moves = analysis.moves?.map((move) => AnalysisMoveResponseDto.fromEntity(move)) || [];\n    response.createdAt = analysis.createdAt;\n    response.updatedAt = analysis.updatedAt;\n    response.deletedAt = analysis.deletedAt;\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalysisService.html":{"url":"injectables/AnalysisService.html","title":"injectable - AnalysisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalysisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/analysis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Private\n                                    Async\n                                findNonDeletedByPgnAndUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Private\n                                    Async\n                                findOneByPgnAndUserId\n                            \n                            \n                                    Async\n                                restoreOneById\n                            \n                            \n                                    Private\n                                    Async\n                                validateUniqueAnalysis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(analysisRepository: Repository, dataSource: DataSource, i18n: I18nService, moveService: MovesService)\n                    \n                \n                        \n                            \n                                Defined in src/analysis/analysis.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        analysisRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moveService\n                                                  \n                                                        \n                                                                        MovesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAnalysisDto: CreateAnalysisDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Crée une analyse avec ses moves et résultats associés\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createAnalysisDto\n                                            \n                                                            CreateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les données de l'analyse\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur créant l'analyse\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'analyse créée\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOneById(id: string, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Supprime une analyse par son ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'ID de l'analyse\n\n                                            \n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur courant\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId(userId: string, options: IPaginationOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Récupère les analyses de l'utilisateur paginées\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'ID de l'utilisateur\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        IPaginationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les options de pagination\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                Les analyses paginées\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        findNonDeletedByPgnAndUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findNonDeletedByPgnAndUserId(pgn: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Récupère une analyse par son ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'ID de l'analyse\n\n                                            \n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur courant\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'analyse\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        findOneByPgnAndUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByPgnAndUserId(pgn: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        restoreOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreOneById(id: string, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Restaure une analyse par son ID (soft delete)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'ID de l'analyse\n\n                                            \n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur connecté\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateUniqueAnalysis\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUniqueAnalysis(pgn: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/analysis.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, DataSource } from 'typeorm';\nimport { Analysis } from './entities/analysis.entity';\nimport { CreateAnalysisDto } from './dto/request/create-analysis.dto';\nimport { User } from '../users/entities/user.entity';\nimport { paginate, Pagination, IPaginationOptions } from 'nestjs-typeorm-paginate';\nimport { AnalysisResponseDto } from './dto/response/analysis-response.dto';\nimport { I18nService } from 'nestjs-i18n';\nimport { MovesService } from 'src/moves/moves.service';\n\n@Injectable()\nexport class AnalysisService {\n  constructor(\n    @InjectRepository(Analysis)\n    private readonly analysisRepository: Repository,\n    private readonly dataSource: DataSource,\n    private readonly i18n: I18nService,\n    private readonly moveService: MovesService,\n  ) {}\n\n  /**\n   * Crée une analyse avec ses moves et résultats associés\n   * @param createAnalysisDto Les données de l'analyse\n   * @param user L'utilisateur créant l'analyse\n   * @returns L'analyse créée\n   */\n  async create(createAnalysisDto: CreateAnalysisDto, user: User): Promise {\n    // Vérification de l'unicité\n    await this.validateUniqueAnalysis(createAnalysisDto.pgn, user.id);\n\n    // Création de l'analyse dans une transaction pour garantir l'intégrité des données\n    // La transaction permet de faire plusieurs opérations en une seule fois\n    return await this.dataSource.transaction(async (manager) => {\n      // Création de l'analyse\n      const analysis = this.analysisRepository.create({\n        pgn: createAnalysisDto.pgn,\n        variants: createAnalysisDto.variants,\n        header: createAnalysisDto.header,\n        user,\n      });\n      await manager.save(Analysis, analysis);\n\n      // Délégation de la création des coups au MoveService\n      await this.moveService.createMovesWithResults(createAnalysisDto.moves, analysis, manager);\n\n      return analysis;\n    });\n  }\n\n  /**\n   * Récupère les analyses de l'utilisateur paginées\n   * @param userId L'ID de l'utilisateur\n   * @param options Les options de pagination\n   * @returns Les analyses paginées\n   */\n  async findAllByUserId(userId: string, options: IPaginationOptions): Promise> {\n    return paginate(this.analysisRepository, options, {\n      where: { user: { id: userId } },\n    });\n  }\n\n  /**\n   * Récupère une analyse par son ID\n   * @param id L'ID de l'analyse\n   * @param currentUser L'utilisateur courant\n   * @returns L'analyse\n   */\n  async findOneById(id: string, currentUser: User): Promise {\n    const analysis = await this.analysisRepository.findOne({\n      where: { id },\n      relations: {\n        user: true,\n        moves: {\n          move: true,\n          engineResults: true,\n        },\n      },\n      order: {\n        moves: {\n          order: 'ASC',\n        },\n      },\n    });\n\n    if (!analysis) {\n      throw new NotFoundException(`Analyse avec l'ID \"${id}\" non trouvée`);\n    }\n\n    if (analysis.user.id !== currentUser.id) {\n      throw new ForbiddenException('Vous ne pouvez pas accéder à cette analyse');\n    }\n\n    return AnalysisResponseDto.fromEntity(analysis);\n  }\n\n  /**\n   * Supprime une analyse par son ID\n   * @param id L'ID de l'analyse\n   * @param currentUser L'utilisateur courant\n   */\n  async deleteOneById(id: string, currentUser: User): Promise {\n    const analysis = await this.analysisRepository.findOne({\n      where: { id },\n      relations: {\n        user: true,\n      },\n    });\n\n    if (!analysis) {\n      throw new NotFoundException(`Analyse avec l'ID \"${id}\" non trouvée`);\n    }\n\n    if (analysis.user.id !== currentUser.id) {\n      throw new ForbiddenException('Vous ne pouvez pas supprimer cette analyse');\n    }\n\n    await this.analysisRepository.softDelete(id);\n  }\n\n  /**\n   * Restaure une analyse par son ID (soft delete)\n   * @param id L'ID de l'analyse\n   * @param currentUser L'utilisateur connecté\n   */\n  async restoreOneById(id: string, currentUser: User): Promise {\n    const analysis = await this.analysisRepository.findOne({\n      where: { id },\n      withDeleted: true,\n      relations: {\n        user: true,\n      },\n    });\n\n    if (!analysis) {\n      throw new NotFoundException(`Analyse avec l'ID \"${id}\" non trouvée`);\n    }\n\n    if (analysis.user.id !== currentUser.id) {\n      throw new ForbiddenException('Vous ne pouvez pas restaurer cette analyse');\n    }\n\n    const existingAnalysis = await this.findNonDeletedByPgnAndUserId(analysis.pgn, currentUser.id);\n    if (existingAnalysis) {\n      throw new ConflictException('Une analyse non supprimée existe déjà avec ce PGN');\n    }\n\n    await this.analysisRepository.restore(id);\n  }\n\n  private async findNonDeletedByPgnAndUserId(pgn: string, userId: string): Promise {\n    return this.analysisRepository.findOne({\n      where: { pgn, user: { id: userId }, deletedAt: null },\n    });\n  }\n\n  private async validateUniqueAnalysis(pgn: string, userId: string): Promise {\n    const existingAnalysis = await this.findOneByPgnAndUserId(pgn, userId);\n    if (existingAnalysis) {\n      throw new ConflictException(\n        this.i18n.translate('common.ERRORS.ALREADY_EXISTS', { args: { property: 'Analyse' } }),\n      );\n    }\n  }\n\n  private async findOneByPgnAndUserId(pgn: string, userId: string): Promise {\n    return this.analysisRepository.findOne({\n      where: { pgn, user: { id: userId } },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getHealthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        getHealthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHealthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Vérification de l'état de santé du serveur'})@ApiResponse({status: 200, description: 'Statut du serveur'})@ApiResponse({status: 500, description: 'Erreur interne du serveur'})@ApiResponse({status: 503, description: 'Service indisponible'})@ApiResponse({status: 504, description: 'Délai d'attente dépassé'})@ApiResponse({status: 429, description: 'Trop de requêtes'})@Get('health')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @ApiOperation({ summary: \"Vérification de l'état de santé du serveur\" })\n  @ApiResponse({ status: 200, description: 'Statut du serveur' })\n  @ApiResponse({ status: 500, description: 'Erreur interne du serveur' })\n  @ApiResponse({ status: 503, description: 'Service indisponible' })\n  @ApiResponse({ status: 504, description: \"Délai d'attente dépassé\" })\n  @ApiResponse({ status: 429, description: 'Trop de requêtes' })\n  @Get('health')\n  getHealthCheck(): { status: string } {\n    return this.appService.getHealthCheck();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnalysisModule\n\nAnalysisModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalysisModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nChessModule\n\nChessModule\n\nAppModule -->\n\nChessModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nElitedbModule\n\nElitedbModule\n\nAppModule -->\n\nElitedbModule->AppModule\n\n\n\n\n\nInfoResultsModule\n\nInfoResultsModule\n\nAppModule -->\n\nInfoResultsModule->AppModule\n\n\n\n\n\nMovesModule\n\nMovesModule\n\nAppModule -->\n\nMovesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalysisModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            ChessModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ElitedbModule\n                        \n                        \n                            InfoResultsModule\n                        \n                        \n                            MovesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { I18nModule } from 'nestjs-i18n';\nimport { i18nConfig } from './i18n/i18n.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { AnalysisModule } from './analysis/analysis.module';\nimport { MovesModule } from './moves/moves.module';\nimport { InfoResultsModule } from './info-results/info-results.module';\nimport { ChessModule } from './chess/chess.module';\nimport { ElitedbModule } from './elitedb/elitedb.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      // Si vous modifiez le fichier .env, vous devrez redémarrer le serveur\n      cache: true, // Pour éviter de lire le fichier à chaque fois\n      expandVariables: true, // Pour utiliser les variables d'environnement dans le fichier .env\n    }),\n    DatabaseModule,\n    I18nModule.forRoot(i18nConfig),\n    AuthenticationModule,\n    UsersModule,\n    AnalysisModule,\n    InfoResultsModule,\n    MovesModule,\n    ChessModule,\n    ElitedbModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHealthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHealthCheck\n                        \n                    \n                \n            \n            \n                \ngetHealthCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHealthCheck(): { status: string } {\n    return { status: 'ok' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Connexion de l'utilisateur'})@ApiBody({type: LoginRequestDto})@ApiResponse({status: 200, description: 'Connexion réussie.'})@ApiResponse({status: 401, description: 'Identifiants invalides.'})@ApiResponse({status: 400, description: 'Requête invalide.'})@UseGuards(LocalAuthGuard)@HttpCode(200)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/authentication.controller.ts:29\n                        \n                    \n\n\n            \n                \n                        Connecte un utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    les informations de connexion de l'utilisateur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Un access token et un refresh token avec les informations de l'utilisateur.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(refreshTokenRequest: RefreshTokenRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Rafraîchissement du token d'authentification'})@ApiBody({type: RefreshTokenRequestDto})@ApiResponse({status: 200, description: 'Token rafraîchi.'})@ApiResponse({status: 401, description: 'Token invalide.'})@ApiResponse({status: 400, description: 'Requête invalide.'})@ApiBearerAuth('access-token')@Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/authentication.controller.ts:62\n                        \n                    \n\n\n            \n                \n                        Rafraîchit le token d'authentification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenRequest\n                                            \n                                                            RefreshTokenRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    le token de rafraîchissement.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                un access token et un refresh token avec les informations de l'utilisateur.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Inscription de l'utilisateur'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'Inscription réussie.'})@ApiResponse({status: 409, description: 'L'utilisateur existe déjà.'})@ApiResponse({status: 400, description: 'Requête invalide.'})@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/authentication.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Crée un nouvel utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    les informations de l'utilisateur à créer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                l'utilisateur créé.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpCode, UseGuards } from '@nestjs/common';\nimport { AuthenticationService } from './authentication.service';\nimport { LoginRequestDto } from './dto/request/login-request.dto';\nimport { CreateUserDto } from './dto/request/create-user.dto';\nimport { ApiBearerAuth, ApiBody, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { User } from '../users/entities/user.entity';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthenticationResponseDto } from './dto/response/authentication-response.dto';\nimport { RefreshTokenRequestDto } from './dto/request/refresh-token-request.dto';\n\n@Controller('auth')\nexport class AuthenticationController {\n  constructor(private readonly authService: AuthenticationService) {}\n\n  /**\n   * Connecte un utilisateur.\n   * @param loginDto les informations de connexion de l'utilisateur.\n   * @returns Un access token et un refresh token avec les informations de l'utilisateur.\n   * @throws UnauthorizedException si les informations de connexion sont invalides.\n   */\n  @ApiOperation({ summary: \"Connexion de l'utilisateur\" })\n  @ApiBody({ type: LoginRequestDto })\n  @ApiResponse({ status: 200, description: 'Connexion réussie.' })\n  @ApiResponse({ status: 401, description: 'Identifiants invalides.' })\n  @ApiResponse({ status: 400, description: 'Requête invalide.' })\n  @UseGuards(LocalAuthGuard)\n  @HttpCode(200)\n  @Post('login')\n  async login(@Body() loginDto: LoginRequestDto): Promise {\n    const user: User = await this.authService.validateUser(loginDto);\n    return this.authService.login(user);\n  }\n\n  /**\n   * Crée un nouvel utilisateur.\n   * @param createUserDto les informations de l'utilisateur à créer.\n   * @returns l'utilisateur créé.\n   * @throws ConflictException si l'utilisateur existe déjà.\n   */\n  @ApiOperation({ summary: \"Inscription de l'utilisateur\" })\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({ status: 201, description: 'Inscription réussie.' })\n  @ApiResponse({ status: 409, description: \"L'utilisateur existe déjà.\" })\n  @ApiResponse({ status: 400, description: 'Requête invalide.' })\n  @Post('register')\n  async signUp(@Body() createUserDto: CreateUserDto): Promise {\n    return this.authService.register(createUserDto);\n  }\n\n  /**\n   * Rafraîchit le token d'authentification.\n   * @param refreshTokenRequest le token de rafraîchissement.\n   * @returns un access token et un refresh token avec les informations de l'utilisateur.\n   */\n  @ApiOperation({ summary: \"Rafraîchissement du token d'authentification\" })\n  @ApiBody({ type: RefreshTokenRequestDto })\n  @ApiResponse({ status: 200, description: 'Token rafraîchi.' })\n  @ApiResponse({ status: 401, description: 'Token invalide.' })\n  @ApiResponse({ status: 400, description: 'Requête invalide.' })\n  @ApiBearerAuth('access-token')\n  @Post('refresh')\n  async refresh(@Body() refreshTokenRequest: RefreshTokenRequestDto): Promise {\n    return this.authService.refresh(refreshTokenRequest.refreshToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nUsersModule->AuthenticationModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthenticationModule -->\n\nLocalStrategy->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthenticationService } from './authentication.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthenticationController } from './authentication.controller';\nimport { LocalStrategy } from './local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getJwtConfig } from '../config/jwt.config';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => getJwtConfig(configService),\n    }),\n  ],\n  providers: [AuthenticationService, LocalStrategy, JwtStrategy],\n  controllers: [AuthenticationController],\n  exports: [AuthenticationService],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationResponseDto.html":{"url":"classes/AuthenticationResponseDto.html","title":"class - AuthenticationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/dto/response/authentication-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, refreshToken: string, user: UserDto)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/dto/response/authentication-response.dto.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Access token de l'utilisateur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/response/authentication-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Refresh token de l'utilisateur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/response/authentication-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Informations de l'utilisateur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/response/authentication-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserDto } from '../../../common/dto/user.dto';\n\nexport class AuthenticationResponseDto {\n  @ApiProperty({ description: \"Access token de l'utilisateur\" })\n  accessToken: string;\n\n  @ApiProperty({ description: \"Refresh token de l'utilisateur\" })\n  refreshToken: string;\n\n  @ApiProperty({ description: \"Informations de l'utilisateur\" })\n  user: UserDto;\n\n  constructor(accessToken: string, refreshToken: string, user: UserDto) {\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    this.user = user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateJwtToken\n                            \n                            \n                                    Private\n                                generateLoginResponseDto\n                            \n                            \n                                    Private\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/authentication.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateJwtToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateJwtToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Génère un token JWT pour un utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'utilisateur pour lequel générer le token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Le token JWT généré.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateLoginResponseDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateLoginResponseDto(accessToken: string, refreshToken: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Génère le DTO de réponse pour une connexion réussie.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'access token.\n\n\n                                            \n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLe refresh token.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'utilisateur connecté.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthenticationResponseDto\n\n                        \n                            \n                                Le DTO de réponse de connexion.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Génère un refresh token pour un utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'utilisateur pour lequel générer le token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Le refresh token généré.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Connecte un utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'utilisateur à connecter.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Un access token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Rafraîchit le token d'accès en utilisant un refresh token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLe refresh token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Un nouveau access token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Crée un nouvel utilisateur et le connecte.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes informations de l'utilisateur à créer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur créé.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(loginDto: LoginRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/authentication.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Vérifie les informations de connexion de l'utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes informations de connexion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur validé.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/entities/user.entity';\nimport { CreateUserDto } from './dto/request/create-user.dto';\nimport { LoginRequestDto } from './dto/request/login-request.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserDto } from '../common/dto/user.dto';\nimport { AuthenticationResponseDto } from './dto/response/authentication-response.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  /**\n   * Crée un nouvel utilisateur et le connecte.\n   * @param {CreateUserDto} createUserDto - Les informations de l'utilisateur à créer.\n   * @returns {Promise} L'utilisateur créé.\n   * @throws ConflictException Si l'utilisateur existe déjà.\n   */\n  async register(createUserDto: CreateUserDto): Promise {\n    const user: User = await this.usersService.create(createUserDto);\n    return this.login(user);\n  }\n\n  /**\n   * Connecte un utilisateur.\n   * @param {User} user - L'utilisateur à connecter.\n   * @returns {Promise} Un access token.\n   * @throws {UnauthorizedException} Si les informations de connexion sont invalides.\n   */\n  async login(user: User): Promise {\n    const accessToken: string = this.generateJwtToken(user);\n    const refreshToken: string = this.generateRefreshToken(user);\n\n    return this.generateLoginResponseDto(accessToken, refreshToken, user);\n  }\n\n  /**\n   * Vérifie les informations de connexion de l'utilisateur.\n   * @param {LoginRequestDto} loginDto - Les informations de connexion.\n   * @returns {Promise} L'utilisateur validé.\n   * @throws {UnauthorizedException} Si les informations de connexion sont invalides.\n   */\n  async validateUser(loginDto: LoginRequestDto): Promise {\n    const user: User = await this.usersService.findOneByEmail(loginDto.email);\n    if (!user || !(await bcrypt.compare(loginDto.password, user.password))) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    return user;\n  }\n\n  /**\n   * Rafraîchit le token d'accès en utilisant un refresh token.\n   * @param {string} refreshToken - Le refresh token.\n   * @returns {Promise} Un nouveau access token.\n   * @throws {UnauthorizedException} Si le refresh token est invalide.\n   */\n  async refresh(refreshToken: string): Promise {\n    const decoded = this.jwtService.decode(refreshToken) as { email: string };\n    const user: User = await this.usersService.findOneByEmail(decoded.email);\n    if (!user) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return this.login(user);\n  }\n\n  /**\n   * Génère un token JWT pour un utilisateur.\n   * @param {User} user - L'utilisateur pour lequel générer le token.\n   * @returns {string} Le token JWT généré.\n   */\n  private generateJwtToken(user: User): string {\n    const payload = { email: user.email, sub: user.id, username: user.username };\n    return this.jwtService.sign(payload);\n  }\n\n  /**\n   * Génère un refresh token pour un utilisateur.\n   * @param {User} user - L'utilisateur pour lequel générer le token.\n   * @returns {string} Le refresh token généré.\n   */\n  private generateRefreshToken(user: User): string {\n    const payload = { email: user.email, sub: user.id, username: user.username };\n    return this.jwtService.sign(payload, { expiresIn: '7d' });\n  }\n\n  /**\n   * Génère le DTO de réponse pour une connexion réussie.\n   * @param {string} accessToken - L'access token.\n   * @param {string} refreshToken - Le refresh token.\n   * @param {User} user - L'utilisateur connecté.\n   * @returns {AuthenticationResponseDto} Le DTO de réponse de connexion.\n   */\n  private generateLoginResponseDto(accessToken: string, refreshToken: string, user: User): AuthenticationResponseDto {\n    const userDto = new UserDto(user);\n    return new AuthenticationResponseDto(accessToken, refreshToken, userDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/base.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Base Data Transfer Object (DTO)\nIl permet de définir les propriétés communes à tous les DTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2021-09-01T00:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/base.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/base.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '837e5edb-c833-447e-a57d-a43fb6c0100b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/base.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/base.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Base Data Transfer Object (DTO)\n * Il permet de définir les propriétés communes à tous les DTO\n */\nexport abstract class BaseDto {\n  @ApiProperty({ example: '837e5edb-c833-447e-a57d-a43fb6c0100b' })\n  id: string;\n\n  @ApiProperty({ example: '2021-09-01T00:00:00.000Z' })\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n\n  @ApiProperty()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChessController.html":{"url":"controllers/ChessController.html","title":"controller - ChessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChessController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chess/chess.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chess\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getChessPlayer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getPlayerGamesToMove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getPlayerMonthlyGames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getChessPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChessPlayer(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Récupère le profil d’un joueur par username'})@ApiParam({name: 'username', description: 'Le pseudonyme du joueur (ex: \"erik\")'})@ApiResponse({status: 200, description: 'Profil du joueur récupéré.'})@Get('player/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/chess/chess.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getPlayerGamesToMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerGamesToMove(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Récupère les parties en cours (“to-move”) pour un joueur'})@ApiParam({name: 'username', description: 'Le pseudonyme du joueur (ex: \"erik\")'})@ApiResponse({status: 200, description: 'Parties en cours récupérées.'})@Get('player/:username/games/to-move')\n                \n            \n\n                    \n                        \n                            Defined in src/chess/chess.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getPlayerMonthlyGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerMonthlyGames(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Récupère la liste des archives disponibles pour un joueur'})@ApiResponse({status: 200, description: 'Archives récupérées.'})@Get('player/:username/games')\n                \n            \n\n                    \n                        \n                            Defined in src/chess/chess.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { ChessService } from './chess.service';\nimport { ApiParam, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('chess')\nexport class ChessController {\n  constructor(private readonly chessService: ChessService) {}\n\n  @ApiOperation({ summary: 'Récupère le profil d’un joueur par username' })\n  @ApiParam({ name: 'username', description: 'Le pseudonyme du joueur (ex: \"erik\")' })\n  @ApiResponse({ status: 200, description: 'Profil du joueur récupéré.' })\n  @Get('player/:username')\n  async getChessPlayer(@Param('username') username: string) {\n    return this.chessService.getChessPlayer(username);\n  }\n\n  @ApiOperation({ summary: 'Récupère les parties en cours (“to-move”) pour un joueur' })\n  @ApiParam({ name: 'username', description: 'Le pseudonyme du joueur (ex: \"erik\")' })\n  @ApiResponse({ status: 200, description: 'Parties en cours récupérées.' })\n  @Get('player/:username/games/to-move')\n  async getPlayerGamesToMove(@Param('username') username: string) {\n    return this.chessService.getPlayerGamesToMove(username);\n  }\n\n  @ApiOperation({ summary: 'Récupère la liste des archives disponibles pour un joueur' })\n  @ApiResponse({ status: 200, description: 'Archives récupérées.' })\n  @Get('player/:username/games')\n  async getPlayerMonthlyGames(@Param('username') username: string) {\n    return this.chessService.getPlayerGames(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChessModule.html":{"url":"modules/ChessModule.html","title":"module - ChessModule","body":"\n                   \n\n\n\n\n    Modules\n    ChessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChessModule\n\n\n\ncluster_ChessModule_providers\n\n\n\ncluster_ChessModule_exports\n\n\n\n\nChessService \n\nChessService \n\n\n\nChessModule\n\nChessModule\n\nChessService  -->\n\nChessModule->ChessService \n\n\n\n\n\nChessService\n\nChessService\n\nChessModule -->\n\nChessService->ChessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chess/chess.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChessService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChessController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChessService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { ChessService } from './chess.service';\nimport { ChessController } from './chess.controller';\n\n@Module({\n  imports: [HttpModule],\n  providers: [ChessService],\n  controllers: [ChessController],\n  exports: [ChessService],\n})\nexport class ChessModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChessPlayer.html":{"url":"interfaces/ChessPlayer.html","title":"interface - ChessPlayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChessPlayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chess/interfaces/chess-player.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            followers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            joined\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last_online\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            player_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joined\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        joined:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_online\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_online:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChessPlayer {\n  avatar?: string;\n  player_id?: number;\n  url?: string;\n  username: string;\n  title?: string;\n  status?: string;\n  name?: string;\n  country?: string;\n  joined?: number; // timestamp\n  last_online?: number; // timestamp\n  followers?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChessService.html":{"url":"injectables/ChessService.html","title":"injectable - ChessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chess/chess.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_URL\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getChessPlayer\n                            \n                            \n                                    Async\n                                getPlayerGameArchives\n                            \n                            \n                                    Async\n                                getPlayerGames\n                            \n                            \n                                    Async\n                                getPlayerGamesMonthly\n                            \n                            \n                                    Async\n                                getPlayerGamesToMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/chess/chess.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getChessPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChessPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chess/chess.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Récupère le profil d’un joueur par username\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le pseudonyme du joueur (ex: 'erik')\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayerGameArchives\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerGameArchives(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chess/chess.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Récupère la liste des archives disponibles pour un joueur (url des endpoints mensuels).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayerGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerGames(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chess/chess.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Récupère les parties d’un joueur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayerGamesMonthly\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerGamesMonthly(username: string, year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chess/chess.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayerGamesToMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerGamesToMove(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chess/chess.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Récupère les parties en cours (“to-move”) pour un joueur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.chess.com/pub'\n                    \n                \n                    \n                        \n                                Defined in src/chess/chess.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ChessService.name)\n                    \n                \n                    \n                        \n                                Defined in src/chess/chess.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { lastValueFrom } from 'rxjs';\nimport { ChessPlayer } from './interfaces/chess-player.interface';\nimport { HttpService } from '@nestjs/axios';\n\n@Injectable()\nexport class ChessService {\n  private readonly logger = new Logger(ChessService.name);\n  private readonly BASE_URL = 'https://api.chess.com/pub';\n\n  constructor(private readonly http: HttpService) {}\n\n  /**\n   * Récupère le profil d’un joueur par username\n   * @param username Le pseudonyme du joueur (ex: 'erik')\n   */\n  async getChessPlayer(username: string): Promise {\n    try {\n      const url = `${this.BASE_URL}/player/${username}`;\n      const response$ = this.http.get(url);\n      const { data } = await lastValueFrom(response$);\n      return data;\n    } catch (error) {\n      this.logger.error(`Erreur lors de la récupération du profil du joueur: ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Récupère les parties en cours (“to-move”) pour un joueur\n   */\n  async getPlayerGamesToMove(username: string) {\n    try {\n      const url = `${this.BASE_URL}/player/${username}/games/to-move`;\n      const response$ = this.http.get(url);\n      const { data } = await lastValueFrom(response$);\n      return data;\n    } catch (error) {\n      this.logger.error(`Erreur lors de la récupération des parties en cours pour ${username}: ${error}`);\n      throw error;\n    }\n  }\n\n  async getPlayerGamesMonthly(username: string, year: number, month: number) {\n    try {\n      const url = `${this.BASE_URL}/player/${username}/games/${year}/${month}`;\n      const response$ = this.http.get(url);\n      const { data } = await lastValueFrom(response$);\n      return data;\n    } catch (error) {\n      this.logger.error(`Erreur lors de la récupération des parties mensuelles pour ${username}: ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Récupère la liste des archives disponibles pour un joueur (url des endpoints mensuels).\n   */\n  async getPlayerGameArchives(username: string) {\n    try {\n      const url = `${this.BASE_URL}/player/${username}/games/archives`;\n      const response$ = this.http.get(url);\n      const { data } = await lastValueFrom(response$);\n      return data;\n    } catch (error) {\n      this.logger.error(`Erreur lors de la récupération des archives de ${username}: ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Récupère les parties d’un joueur\n   */\n  async getPlayerGames(username: string) {\n    try {\n      const url = `${this.BASE_URL}/player/${username}/games`;\n      const response$ = this.http.get(url);\n      const { data } = await lastValueFrom(response$);\n      return data;\n    } catch (error) {\n      this.logger.error(`Erreur lors de la récupération des parties pour ${username} : ${error}`);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnalysisDto.html":{"url":"classes/CreateAnalysisDto.html","title":"class - CreateAnalysisDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnalysisDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/dto/request/create-analysis.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                header\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                moves\n                            \n                            \n                                    \n                                    \n                                    \n                                pgn\n                            \n                            \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Les entêtes de la partie', example: undefined})@IsObject()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/request/create-analysis.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        moves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalysisMoveResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Les coups de la partie analysée', example: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/request/create-analysis.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pgn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La partie analysée', example: '[Event \"Live Chess\"]\n[Site \"Chess.com\"]\n[Date \"202…2 Nb4 29. Rc7 Rxd4 30. Rxe7 Rxe7 31. Rc8+ Kh7 0-1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/request/create-analysis.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le nombre de variantes à analyser', example: 3})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/request/create-analysis.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { AnalysisMoveResponseDto } from '../response/analysis-move-response.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAnalysisDto {\n  @ApiProperty({\n    description: 'La partie analysée',\n    example: '[Event \"Live Chess\"]\\n[Site \"Chess.com\"]\\n[Date \"202…2 Nb4 29. Rc7 Rxd4 30. Rxe7 Rxe7 31. Rc8+ Kh7 0-1',\n  })\n  @IsString()\n  @IsNotEmpty()\n  pgn: string;\n\n  @ApiProperty({ description: 'Le nombre de variantes à analyser', example: 3 })\n  @IsNumber()\n  @IsNotEmpty()\n  variants: number;\n\n  @ApiProperty({\n    description: 'Les entêtes de la partie',\n    example: {\n      Event: 'Live Chess',\n      Site: 'Chess.com',\n      Date: '2024.11.11',\n      Round: '?',\n      White: 'jtpeg',\n      Black: 'LeGrandJaris',\n      Result: '0-1',\n      TimeControl: '600',\n      WhiteElo: '975',\n      BlackElo: '988',\n      Termination: 'LeGrandJaris a gagné par abandon',\n      ECO: 'D08',\n      EndTime: '22:38:37 GMT+0000',\n      Link: 'https://www.chess.com/game/live/120832550446',\n    },\n  })\n  @IsObject()\n  @IsNotEmpty()\n  header: Record;\n\n  @ApiProperty({\n    description: 'Les coups de la partie analysée',\n    example: [\n      {\n        move: {\n          color: 'w',\n          from: 'e2',\n          to: 'e4',\n          piece: 'p',\n          flags: 'n',\n          san: 'e4',\n          lan: 'e2e4',\n          before: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n          after: 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1',\n        },\n        fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n        classification: 'Brilliant',\n        engineResults: [\n          {\n            type: 'info',\n            depth: 14,\n            selDepth: 24,\n            eval: 0.37,\n            centiPawns: 37,\n            winChance: 0.5,\n            mate: 0.5,\n            move: 'e4',\n            from: 'e2',\n            to: 'e4',\n            pv: ['e4', 'e5', 'Nf3', 'Nc6', 'Bb5', 'a6', 'Ba4', 'Nf6', 'O-O'],\n          },\n        ],\n      },\n    ],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => AnalysisMoveResponseDto)\n  @IsNotEmpty()\n  moves: AnalysisMoveResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/dto/request/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The confirm password of the user', example: 'Password123.'})@IsStrongPassword({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user', example: 'user@example.com'})@IsEmail({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', example: 'Password123.'})@IsStrongPassword({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user', example: 'john_doe'})@IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsStrongPassword, IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: 'The email of the user', example: 'user@example.com' })\n  @IsEmail({}, { message: i18nValidationMessage('validation.IS_EMAIL') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  email: string;\n\n  @ApiProperty({ description: 'The username of the user', example: 'john_doe' })\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  username: string;\n\n  @ApiProperty({ description: 'The password of the user', example: 'Password123.' })\n  @IsStrongPassword({}, { message: i18nValidationMessage('validation.IS_STRONG_PASSWORD') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  password: string;\n\n  @ApiProperty({ description: 'The confirm password of the user', example: 'Password123.' })\n  @IsStrongPassword({}, { message: i18nValidationMessage('validation.IS_STRONG_PASSWORD') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomBaseEntity.html":{"url":"classes/CustomBaseEntity.html","title":"class - CustomBaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomBaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/custom-base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/custom-base.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/custom-base.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/custom-base.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/custom-base.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, DeleteDateColumn, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\n\nexport abstract class CustomBaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at' })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { getDatabaseConfig } from './database.config';\nimport { getEliteDatabaseConfig } from './elite-database.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useFactory: () => getDatabaseConfig(),\n      inject: [ConfigService],\n      name: 'default',\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: () => getEliteDatabaseConfig(),\n      inject: [ConfigService],\n      name: 'elitedb',\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ElitedbController.html":{"url":"controllers/ElitedbController.html","title":"controller - ElitedbController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ElitedbController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/elitedb/elitedb.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                elitedb\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getMoves\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getMoves\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMoves(fen: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiQuery({name: 'fen', type: String, description: 'La position FEN', required: true, example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', schema: undefined})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/elitedb/elitedb.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fen\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Query, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { ElitedbService } from './elitedb.service';\nimport { ApiQuery } from '@nestjs/swagger';\n\n@Controller('elitedb')\nexport class ElitedbController {\n  constructor(private readonly elitedbService: ElitedbService) {}\n  @Get()\n  @ApiQuery({\n    name: 'fen',\n    type: String,\n    description: 'La position FEN',\n    required: true,\n    example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    schema: {\n      default: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    },\n  })\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getMoves(@Query('fen') fen: string) {\n    if (!fen) {\n      throw new BadRequestException(\"Missing query param 'fen'\");\n    }\n    const splitFen = fen.split(' ');\n    const sanitizedFen = `${splitFen[0]} ${splitFen[2]} ${splitFen[3]}`;\n\n    return await this.elitedbService.findMoves(sanitizedFen);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ElitedbModule.html":{"url":"modules/ElitedbModule.html","title":"module - ElitedbModule","body":"\n                   \n\n\n\n\n    Modules\n    ElitedbModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ElitedbModule\n\n\n\ncluster_ElitedbModule_providers\n\n\n\n\nElitedbService\n\nElitedbService\n\n\n\nElitedbModule\n\nElitedbModule\n\nElitedbModule -->\n\nElitedbService->ElitedbModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/elitedb/elitedb.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ElitedbService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ElitedbController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ElitedbService } from './elitedb.service';\nimport { ElitedbController } from './elitedb.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ElitedbMove } from './entities/elitedb-move.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ElitedbMove], 'elitedb')],\n  providers: [ElitedbService],\n  controllers: [ElitedbController],\n})\nexport class ElitedbModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ElitedbMove.html":{"url":"entities/ElitedbMove.html","title":"entity - ElitedbMove","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ElitedbMove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/elitedb/entities/elitedb-move.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                black\n                            \n                            \n                                    \n                                draw\n                            \n                            \n                                    \n                                position\n                            \n                            \n                                    \n                                san\n                            \n                            \n                                    \n                                white\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        black\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/elitedb/entities/elitedb-move.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        draw\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/elitedb/entities/elitedb-move.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/elitedb/entities/elitedb-move.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        san\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/elitedb/entities/elitedb-move.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        white\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/elitedb/entities/elitedb-move.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, Index, PrimaryColumn } from 'typeorm';\n\n@Entity('Move')\n@Index(['position', 'san'], { unique: true })\nexport class ElitedbMove {\n  @PrimaryColumn()\n  san: string;\n\n  @PrimaryColumn()\n  position: string;\n\n  @Column({ default: 0 })\n  white: number;\n\n  @Column({ default: 0 })\n  black: number;\n\n  @Column({ default: 0 })\n  draw: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElitedbService.html":{"url":"injectables/ElitedbService.html","title":"injectable - ElitedbService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElitedbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/elitedb/elitedb.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findMoves\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elitedbMoveRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/elitedb/elitedb.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elitedbMoveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMoves\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMoves(sanitizedFen: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/elitedb/elitedb.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sanitizedFen\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ElitedbMove } from './entities/elitedb-move.entity';\nimport { Repository } from 'typeorm/repository/Repository';\n\n@Injectable()\nexport class ElitedbService {\n  constructor(\n    @InjectRepository(ElitedbMove, 'elitedb')\n    private readonly elitedbMoveRepository: Repository,\n  ) {}\n\n  async findMoves(sanitizedFen: string) {\n    return this.elitedbMoveRepository.find({\n      where: { position: sanitizedFen },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailDto.html":{"url":"classes/GetUserByEmailDto.html","title":"class - GetUserByEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/request/user-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com', description: 'Email de l'utilisateur'})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/user-request.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsUUID } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class GetUserByEmailDto {\n  @ApiProperty({\n    example: 'user@example.com',\n    description: \"Email de l'utilisateur\",\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n}\n\nexport class GetUserByIdDto {\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: \"UUID de l'utilisateur\",\n    required: true,\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByIdDto.html":{"url":"classes/GetUserByIdDto.html","title":"class - GetUserByIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/request/user-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000', description: 'UUID de l'utilisateur', required: true})@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/user-request.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsUUID } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class GetUserByEmailDto {\n  @ApiProperty({\n    example: 'user@example.com',\n    description: \"Email de l'utilisateur\",\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n}\n\nexport class GetUserByIdDto {\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: \"UUID de l'utilisateur\",\n    required: true,\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InfoResult.html":{"url":"entities/InfoResult.html","title":"entity - InfoResult","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InfoResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/entities/info-result.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                analysisMove\n                            \n                            \n                                    \n                                    Optional\n                                centiPawns\n                            \n                            \n                                    \n                                    Optional\n                                depth\n                            \n                            \n                                    \n                                    Optional\n                                eval\n                            \n                            \n                                    \n                                    Optional\n                                from\n                            \n                            \n                                    \n                                    Optional\n                                mate\n                            \n                            \n                                    \n                                    Optional\n                                move\n                            \n                            \n                                    \n                                pv\n                            \n                            \n                                    \n                                    Optional\n                                selDepth\n                            \n                            \n                                    \n                                    Optional\n                                to\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    Optional\n                                winChance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        analysisMove\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnalysisMove\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, analysisMove => analysisMove.engineResults)@JoinColumn({name: 'analysis_move_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        centiPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'centi_pawns'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        depth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        eval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        move\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-array')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        selDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'sel_depth'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        winChance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'float', name: 'win_chance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/info-result.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { AnalysisMove } from './analysis-move.entity';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\n\n@Entity('info_results')\nexport class InfoResult extends CustomBaseEntity {\n  @Column()\n  type: 'info';\n\n  @Column({ nullable: true })\n  depth?: number;\n\n  @Column({ nullable: true, name: 'sel_depth' })\n  selDepth?: number;\n\n  @Column({ nullable: true, type: 'float' })\n  eval?: number;\n\n  @Column({ nullable: true, name: 'centi_pawns' })\n  centiPawns?: number;\n\n  @Column({ nullable: true, type: 'float', name: 'win_chance' })\n  winChance?: number;\n\n  @Column({ nullable: true, type: 'float' })\n  mate?: number;\n\n  @Column({ nullable: true })\n  move?: string;\n\n  @Column({ nullable: true })\n  from?: string;\n\n  @Column({ nullable: true })\n  to?: string;\n\n  @Column('simple-array')\n  pv: string[];\n\n  @ManyToOne(() => AnalysisMove, (analysisMove) => analysisMove.engineResults)\n  @JoinColumn({ name: 'analysis_move_id' })\n  analysisMove: AnalysisMove;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InfoResultResponseDto.html":{"url":"classes/InfoResultResponseDto.html","title":"class - InfoResultResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InfoResultResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/dto/response/info-result-response.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                centiPawns\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                depth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                eval\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                move\n                            \n                            \n                                    \n                                    \n                                    \n                                pv\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                selDepth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                to\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                winChance\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        centiPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le score de l'évaluation en centi-pions', example: 37})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        depth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le nombre de noeuds analysés', example: 14})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        eval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le score de l'évaluation', example: 0.37})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup principal du moteur', example: 'e4'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La chance de faire match nul', example: 0.5})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        move\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup principal du moteur', example: 'e4'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup principal du moteur', example: 'e4'})@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        selDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le nombre de noeuds analysés', example: 24})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup principal du moteur', example: 'e4'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le type de résultat', example: 'info'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        winChance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La chance de gagner', example: 0.5})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/info-result-response.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2021-09-01T00:00:00.000Z'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '837e5edb-c833-447e-a57d-a43fb6c0100b'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromEntity(infoResult: InfoResult)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/dto/response/info-result-response.dto.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                infoResult\n                                            \n                                                            InfoResult\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InfoResultResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { InfoResult } from '../../entities/info-result.entity';\nimport { BaseDto } from '../../../common/dto/base.dto';\n\nexport class InfoResultResponseDto extends BaseDto {\n  @ApiProperty({ description: 'Le type de résultat', example: 'info' })\n  @IsString()\n  type: 'info';\n\n  @ApiProperty({ description: 'Le nombre de noeuds analysés', example: 14 })\n  @IsOptional()\n  @IsNumber()\n  depth?: number;\n\n  @ApiProperty({ description: 'Le nombre de noeuds analysés', example: 24 })\n  @IsOptional()\n  @IsNumber()\n  selDepth?: number;\n\n  @ApiProperty({ description: \"Le score de l'évaluation\", example: 0.37 })\n  @IsOptional()\n  @IsNumber()\n  eval?: number;\n\n  @ApiProperty({ description: \"Le score de l'évaluation en centi-pions\", example: 37 })\n  @IsOptional()\n  @IsNumber()\n  centiPawns?: number;\n\n  @ApiProperty({ description: 'La chance de gagner', example: 0.5 })\n  @IsOptional()\n  @IsNumber()\n  winChance?: number;\n\n  @ApiProperty({ description: 'La chance de faire match nul', example: 0.5 })\n  @IsOptional()\n  @IsNumber()\n  mate?: number;\n\n  @ApiProperty({ description: 'Le coup principal du moteur', example: 'e4' })\n  @IsOptional()\n  @IsString()\n  move?: string;\n\n  @ApiProperty({ description: 'Le coup principal du moteur', example: 'e4' })\n  @IsOptional()\n  @IsString()\n  from?: string;\n\n  @ApiProperty({ description: 'Le coup principal du moteur', example: 'e4' })\n  @IsOptional()\n  @IsString()\n  to?: string;\n\n  @ApiProperty({ description: 'Le coup principal du moteur', example: 'e4' })\n  @IsArray()\n  @IsString({ each: true })\n  pv: string[];\n\n  static fromEntity(infoResult: InfoResult): InfoResultResponseDto {\n    const response = new InfoResultResponseDto();\n    response.id = infoResult.id;\n    response.type = infoResult.type;\n    response.depth = infoResult.depth;\n    response.selDepth = infoResult.selDepth;\n    response.eval = infoResult.eval;\n    response.centiPawns = infoResult.centiPawns;\n    response.winChance = infoResult.winChance;\n    response.mate = infoResult.mate;\n    response.move = infoResult.move;\n    response.from = infoResult.from;\n    response.to = infoResult.to;\n    response.pv = infoResult.pv;\n    response.createdAt = infoResult.createdAt;\n    response.updatedAt = infoResult.updatedAt;\n    response.deletedAt = infoResult.deletedAt;\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoResultsModule.html":{"url":"modules/InfoResultsModule.html","title":"module - InfoResultsModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoResultsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoResultsModule\n\n\n\ncluster_InfoResultsModule_providers\n\n\n\ncluster_InfoResultsModule_exports\n\n\n\n\nInfoResultsService \n\nInfoResultsService \n\n\n\nInfoResultsModule\n\nInfoResultsModule\n\nInfoResultsService  -->\n\nInfoResultsModule->InfoResultsService \n\n\n\n\n\nInfoResultsService\n\nInfoResultsService\n\nInfoResultsModule -->\n\nInfoResultsService->InfoResultsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/info-results/info-results.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InfoResultsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoResultsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InfoResultsService } from './info-results.service';\nimport { InfoResult } from 'src/analysis/entities/info-result.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([InfoResult])],\n  providers: [InfoResultsService],\n  exports: [InfoResultsService],\n})\nexport class InfoResultsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoResultsService.html":{"url":"injectables/InfoResultsService.html","title":"injectable - InfoResultsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InfoResultsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-results/info-results.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createInfoResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(infoResultRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/info-results/info-results.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infoResultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createInfoResults\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInfoResults(infoResultDto: InfoResultResponseDto[], analysisMove: AnalysisMove, manager: EntityManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/info-results/info-results.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Crée les InfoResults associés à un AnalysisMove\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                infoResultDto\n                                            \n                                                            InfoResultResponseDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les InfoResults à créer\n\n                                            \n                                        \n                                        \n                                                analysisMove\n                                            \n                                                            AnalysisMove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'AnalysisMove parent\n\n                                            \n                                        \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le manager de transaction\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InfoResultResponseDto } from 'src/analysis/dto/response/info-result-response.dto';\nimport { AnalysisMove } from 'src/analysis/entities/analysis-move.entity';\nimport { InfoResult } from 'src/analysis/entities/info-result.entity';\nimport { Repository, EntityManager } from 'typeorm';\n\n@Injectable()\nexport class InfoResultsService {\n  constructor(\n    @InjectRepository(InfoResult)\n    private readonly infoResultRepository: Repository,\n  ) {}\n\n  /**\n   * Crée les InfoResults associés à un AnalysisMove\n   * @param infoResultDto Les InfoResults à créer\n   * @param analysisMove L'AnalysisMove parent\n   * @param manager Le manager de transaction\n   */\n  async createInfoResults(\n    infoResultDto: InfoResultResponseDto[],\n    analysisMove: AnalysisMove,\n    manager: EntityManager,\n  ): Promise {\n    const engineResults = infoResultDto.map((resultDto) =>\n      this.infoResultRepository.create({\n        ...resultDto,\n        analysisMove,\n      }),\n    );\n    await manager.save(InfoResult, engineResults);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: Error | null, user: TUser | , info: JsonWebTokenError | TokenExpiredError | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/jwt-auth.guard.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TUser\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            TUser | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                        JsonWebTokenError | TokenExpiredError | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { JsonWebTokenError, TokenExpiredError } from 'jsonwebtoken';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  handleRequest(\n    err: Error | null,\n    user: TUser | false,\n    info: JsonWebTokenError | TokenExpiredError | null,\n  ): TUser {\n    if (info instanceof TokenExpiredError) {\n      throw new UnauthorizedException('Token expired');\n    }\n\n    if (info instanceof JsonWebTokenError) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (err || !user) {\n      throw new UnauthorizedException('Unauthorized');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayloadDto.html":{"url":"classes/JwtPayloadDto.html","title":"class - JwtPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/dto/request/jwt-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sub\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/jwt-payload.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/jwt-payload.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtPayloadDto {\n  sub: string;\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { JwtPayloadDto } from './dto/request/jwt-payload.dto';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtPayloadDto) {\n    return { id: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/local-auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, HttpException, HttpStatus, Injectable, ValidationError } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { LoginRequestDto } from './dto/request/login-request.dto';\n\n@Injectable()\n/**\n * Garde d'authentification locale utilisant la stratégie 'local'.\n * Elle est utilisée pour protéger les routes en vérifiant les informations de l'utilisateur.\n */\nexport class LocalAuthGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    // Transforme le corps de la requête en objet de type LoginRequestDto\n    const body: LoginRequestDto = plainToInstance(LoginRequestDto, request.body);\n\n    // Valide les informations de connexion\n    const errors: ValidationError[] = await validate(body);\n\n    const errorMessages: string[] = errors.flatMap(({ constraints }: ValidationError): string[] =>\n      Object.values(constraints),\n    );\n\n    // Si des erreurs sont trouvées, on retourne une erreur 400\n    if (errorMessages.length > 0) {\n      throw new HttpException(errorMessages, HttpStatus.BAD_REQUEST);\n    }\n\n    return super.canActivate(context) as boolean | Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/local.strategy.ts:20\n                        \n                    \n\n\n            \n                \n                        Cette méthode est appelée par Passport pour valider les informations d'identification de l'utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    l'email de l'utilisateur\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    le mot de passe de l'utilisateur\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                l'utilisateur si les informations d'identification sont valides\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthenticationService } from './authentication.service';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthenticationService) {\n    super({ usernameField: 'email' });\n  }\n\n  /**\n   * Cette méthode est appelée par Passport pour valider les informations d'identification de l'utilisateur.\n   * @param email l'email de l'utilisateur\n   * @param password le mot de passe de l'utilisateur\n   * @returns l'utilisateur si les informations d'identification sont valides\n   * @throws UnauthorizedException si les informations de connexion sont invalides\n   */\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser({ email, password });\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRequestDto.html":{"url":"classes/LoginRequestDto.html","title":"class - LoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/dto/request/login-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'L'email de l'utilisateur', example: 'user@example.com'})@IsEmail({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/login-request.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le mot de passe de l'utilisateur', example: 'Password123.'})@IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/login-request.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class LoginRequestDto {\n  @ApiProperty({ description: \"L'email de l'utilisateur\", example: 'user@example.com' })\n  @IsEmail({}, { message: i18nValidationMessage('validation.IS_EMAIL') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  email: string;\n\n  @ApiProperty({ description: \"Le mot de passe de l'utilisateur\", example: 'Password123.' })\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Move.html":{"url":"entities/Move.html","title":"entity - Move","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Move\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/entities/move.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                after\n                            \n                            \n                                    \n                                before\n                            \n                            \n                                    \n                                    Optional\n                                captured\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                flags\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                lan\n                            \n                            \n                                    \n                                piece\n                            \n                            \n                                    \n                                    Optional\n                                promotion\n                            \n                            \n                                    \n                                san\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        after\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        before\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        captured\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: PieceSymbolEnum, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ColorEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SquareEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: SquareEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: PieceSymbolEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        promotion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: PieceSymbolEnum, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        san\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SquareEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: SquareEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/entities/move.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { SquareEnum } from '../enums/square.enum';\nimport { PieceSymbolEnum } from '../enums/piece-symbol.enum';\nimport { ColorEnum } from '../enums/color.enum';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\n\n@Entity('moves')\nexport class Move extends CustomBaseEntity {\n  @Column({\n    type: 'enum',\n    enum: ColorEnum,\n  })\n  color: ColorEnum;\n\n  @Column({\n    type: 'enum',\n    enum: SquareEnum,\n  })\n  from: SquareEnum;\n\n  @Column({\n    type: 'enum',\n    enum: SquareEnum,\n  })\n  to: SquareEnum;\n\n  @Column({\n    type: 'enum',\n    enum: PieceSymbolEnum,\n  })\n  piece: PieceSymbolEnum;\n\n  @Column({\n    type: 'enum',\n    enum: PieceSymbolEnum,\n    nullable: true,\n  })\n  captured?: PieceSymbolEnum;\n\n  @Column({\n    type: 'enum',\n    enum: PieceSymbolEnum,\n    nullable: true,\n  })\n  promotion?: PieceSymbolEnum;\n\n  @Column()\n  flags: string;\n\n  @Column()\n  san: string;\n\n  @Column()\n  lan: string;\n\n  @Column()\n  before: string;\n\n  @Column()\n  after: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveResponseDto.html":{"url":"classes/MoveResponseDto.html","title":"class - MoveResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analysis/dto/response/move-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                after\n                            \n                            \n                                    \n                                    \n                                    \n                                before\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                captured\n                            \n                            \n                                    \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                flags\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                lan\n                            \n                            \n                                    \n                                    \n                                    \n                                piece\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                promotion\n                            \n                            \n                                    \n                                    \n                                    \n                                san\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        after\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup UCI', example: 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        before\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup UCI', example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        captured\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La pièce capturée', example: 'P'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La couleur du joueur qui a joué le coup', example: 'w'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Les flags du coup', example: 'n'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SquareEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La case de départ du coup', example: 'e2'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup UCI', example: 'e2e4'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La pièce déplacée', example: 'P'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        promotion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceSymbolEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La promotion de la pièce', example: 'Q'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        san\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le coup SAN', example: 'e4'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SquareEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La case d'arrivée du coup', example: 'e4'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analysis/dto/response/move-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromEntity(move: Move)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analysis/dto/response/move-response.dto.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                move\n                                            \n                                                            Move\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MoveResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { PieceSymbolEnum } from '../../enums/piece-symbol.enum';\nimport { SquareEnum } from '../../enums/square.enum';\nimport { ColorEnum } from '../../enums/color.enum';\nimport { Move } from '../../entities/move.entity';\n\nexport class MoveResponseDto {\n  @ApiProperty({ description: 'La couleur du joueur qui a joué le coup', example: 'w' })\n  @IsString()\n  @IsNotEmpty()\n  color: ColorEnum;\n\n  @ApiProperty({ description: 'La case de départ du coup', example: 'e2' })\n  @IsString()\n  @IsNotEmpty()\n  from: SquareEnum;\n\n  @ApiProperty({ description: \"La case d'arrivée du coup\", example: 'e4' })\n  @IsString()\n  @IsNotEmpty()\n  to: SquareEnum;\n\n  @ApiProperty({ description: 'La pièce déplacée', example: 'P' })\n  @IsString()\n  @IsNotEmpty()\n  piece: PieceSymbolEnum;\n\n  @ApiProperty({ description: 'La pièce capturée', example: 'P' })\n  @IsOptional()\n  @IsString()\n  captured?: PieceSymbolEnum;\n\n  @ApiProperty({ description: 'La promotion de la pièce', example: 'Q' })\n  @IsOptional()\n  @IsString()\n  promotion?: PieceSymbolEnum;\n\n  @ApiProperty({ description: 'Les flags du coup', example: 'n' })\n  @IsString()\n  @IsNotEmpty()\n  flags: string;\n\n  @ApiProperty({ description: 'Le coup SAN', example: 'e4' })\n  @IsString()\n  @IsNotEmpty()\n  san: string;\n\n  @ApiProperty({ description: 'Le coup UCI', example: 'e2e4' })\n  @IsString()\n  @IsNotEmpty()\n  lan: string;\n\n  @ApiProperty({ description: 'Le coup UCI', example: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' })\n  @IsString()\n  @IsNotEmpty()\n  before: string;\n\n  @ApiProperty({ description: 'Le coup UCI', example: 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1' })\n  @IsString()\n  @IsNotEmpty()\n  after: string;\n\n  static fromEntity(move: Move): MoveResponseDto {\n    const response = new MoveResponseDto();\n    response.color = move.color;\n    response.from = move.from;\n    response.to = move.to;\n    response.piece = move.piece;\n    response.captured = move.captured;\n    response.promotion = move.promotion;\n    response.flags = move.flags;\n    response.san = move.san;\n    response.lan = move.lan;\n    response.before = move.before;\n    response.after = move.after;\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MovesModule.html":{"url":"modules/MovesModule.html","title":"module - MovesModule","body":"\n                   \n\n\n\n\n    Modules\n    MovesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MovesModule\n\n\n\ncluster_MovesModule_exports\n\n\n\ncluster_MovesModule_providers\n\n\n\ncluster_MovesModule_imports\n\n\n\n\nInfoResultsModule\n\nInfoResultsModule\n\n\n\nMovesModule\n\nMovesModule\n\nMovesModule -->\n\nInfoResultsModule->MovesModule\n\n\n\n\n\nMovesService \n\nMovesService \n\nMovesService  -->\n\nMovesModule->MovesService \n\n\n\n\n\nMovesService\n\nMovesService\n\nMovesModule -->\n\nMovesService->MovesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/moves/moves.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MovesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoResultsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MovesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MovesService } from './moves.service';\nimport { Move } from 'src/analysis/entities/move.entity';\nimport { AnalysisMove } from 'src/analysis/entities/analysis-move.entity';\nimport { InfoResultsModule } from 'src/info-results/info-results.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Move, AnalysisMove]), InfoResultsModule],\n  providers: [MovesService],\n  exports: [MovesService],\n})\nexport class MovesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MovesService.html":{"url":"injectables/MovesService.html","title":"injectable - MovesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MovesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moves/moves.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMove\n                            \n                            \n                                    Async\n                                createMovesWithResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moveRepository: Repository, analysisMoveRepository: Repository, infoResultService: InfoResultsService)\n                    \n                \n                        \n                            \n                                Defined in src/moves/moves.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analysisMoveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infoResultService\n                                                  \n                                                        \n                                                                        InfoResultsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMove(move: Move)\n                \n            \n\n\n                    \n                        \n                            Defined in src/moves/moves.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Crée un move\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                move\n                                            \n                                                            Move\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le move à créer\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Le move créé\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMovesWithResults\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMovesWithResults(analysisMovesDto: AnalysisMoveResponseDto[], analysis: Analysis, manager: EntityManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/moves/moves.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Crée les moves et les InfoResults associés à une analyse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                analysisMovesDto\n                                            \n                                                        AnalysisMoveResponseDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les moves à créer\n\n                                            \n                                        \n                                        \n                                                analysis\n                                            \n                                                            Analysis\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'analyse parente\n\n                                            \n                                        \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le manager de transaction\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { plainToClass } from 'class-transformer';\nimport { AnalysisMoveResponseDto } from 'src/analysis/dto/response/analysis-move-response.dto';\nimport { MoveResponseDto } from 'src/analysis/dto/response/move-response.dto';\nimport { AnalysisMove } from 'src/analysis/entities/analysis-move.entity';\nimport { Analysis } from 'src/analysis/entities/analysis.entity';\nimport { Move } from 'src/analysis/entities/move.entity';\nimport { InfoResultsService } from 'src/info-results/info-results.service';\nimport { Repository, EntityManager } from 'typeorm';\n\n@Injectable()\nexport class MovesService {\n  constructor(\n    @InjectRepository(Move)\n    private readonly moveRepository: Repository,\n    @InjectRepository(AnalysisMove)\n    private readonly analysisMoveRepository: Repository,\n    private readonly infoResultService: InfoResultsService,\n  ) {}\n\n  /**\n   * Crée les moves et les InfoResults associés à une analyse\n   *\n   * @param analysisMovesDto Les moves à créer\n   * @param analysis L'analyse parente\n   * @param manager Le manager de transaction\n   */\n  async createMovesWithResults(\n    analysisMovesDto: AnalysisMoveResponseDto[],\n    analysis: Analysis,\n    manager: EntityManager,\n  ): Promise {\n    for (const analysisMoveDto of analysisMovesDto) {\n      const order: number = analysisMovesDto.findIndex((move) => move === analysisMoveDto);\n\n      // Création du move\n      const move = plainToClass(Move, analysisMoveDto.move as MoveResponseDto);\n      await this.createMove(move);\n\n      // Création de l'AnalysisMove\n      const analysisMove = this.analysisMoveRepository.create({\n        move,\n        fen: analysisMoveDto.fen,\n        classification: analysisMoveDto.classification,\n        analysis,\n        // L'ordre du coup dans l'analyse\n        // On ajoute 1, car les index commencent à : 0\n        order: order + 1,\n      });\n      await manager.save(AnalysisMove, analysisMove);\n\n      // Délégation de la création des InfoResults au InfoResultService\n      await this.infoResultService.createInfoResults(analysisMoveDto.engineResults, analysisMove, manager);\n    }\n  }\n\n  /**\n   * Crée un move\n   * @param move Le move à créer\n   * @returns Le move créé\n   */\n  async createMove(move: Move): Promise {\n    return await this.moveRepository.save(move);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenRequestDto.html":{"url":"classes/RefreshTokenRequestDto.html","title":"class - RefreshTokenRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/dto/request/refresh-token-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le token de rafraîchissement', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbGljaWV1eEBjYWNhLm1pYW0iLCJzdWIiOiJkMDkzYmIzMS00ZTUzLTQ4MmItODQ0NC1jOWIwZTRhODE5ZTUiLCJ1c2VybmFtZSI6Imdyb3NfY2FjYV9ib3VkaW4iLCJpYXQiOjE3MzM5OTcyNjksImV4cCI6MTczNDYwMjA2OX0.6mACZqgy7foW3MyRbvAWyu1rrtU6_xbYxgmtyAX-zSA'})@IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/dto/request/refresh-token-request.dto.ts:16\n                        \n                    \n\n            \n                \n                    Le token de rafraîchissement.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { i18nValidationMessage } from 'nestjs-i18n';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class RefreshTokenRequestDto {\n  /**\n   * Le token de rafraîchissement.\n   */\n  @ApiProperty({\n    description: 'Le token de rafraîchissement',\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbGljaWV1eEBjYWNhLm1pYW0iLCJzdWIiOiJkMDkzYmIzMS00ZTUzLTQ4MmItODQ0NC1jOWIwZTRhODE5ZTUiLCJ1c2VybmFtZSI6Imdyb3NfY2FjYV9ib3VkaW4iLCJpYXQiOjE3MzM5OTcyNjksImV4cCI6MTczNDYwMjA2OX0.6mACZqgy7foW3MyRbvAWyu1rrtU6_xbYxgmtyAX-zSA',\n  })\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/request/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'L'email de l'utilisateur', example: 'user@example.com'})@IsEmail({}, {message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user', example: 'john_doe'})@IsString({message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/update-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class UpdateUserDto {\n  @ApiProperty({ description: \"L'email de l'utilisateur\", example: 'user@example.com' })\n  @IsEmail({}, { message: i18nValidationMessage('validation.IS_EMAIL') })\n  @IsOptional()\n  email?: string;\n\n  @ApiProperty({ description: 'The username of the user', example: 'john_doe' })\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  @IsOptional()\n  username?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPasswordDto.html":{"url":"classes/UpdateUserPasswordDto.html","title":"class - UpdateUserPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/request/update-user-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                currentPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The confirm password of the user', example: 'Password123.'})@IsStrongPassword({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/update-user-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        currentPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The current password of the user', example: 'Password123.'})@IsStrongPassword({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/update-user-password.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', example: 'Password123.'})@IsStrongPassword({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/request/update-user-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsStrongPassword } from 'class-validator';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class UpdateUserPasswordDto {\n  @ApiProperty({ description: 'The current password of the user', example: 'Password123.' })\n  @IsStrongPassword({}, { message: i18nValidationMessage('validation.IS_STRONG_PASSWORD') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  currentPassword: string;\n\n  @ApiProperty({ description: 'The password of the user', example: 'Password123.' })\n  @IsStrongPassword({}, { message: i18nValidationMessage('validation.IS_STRONG_PASSWORD') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  password: string;\n\n  @ApiProperty({ description: 'The confirm password of the user', example: 'Password123.' })\n  @IsStrongPassword({}, { message: i18nValidationMessage('validation.IS_STRONG_PASSWORD') })\n  @IsNotEmpty({ message: i18nValidationMessage('validation.IS_NOT_EMPTY') })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                analyses\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                settings\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        analyses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Analysis[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, analysis => analysis.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@IsEmail()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Exclude()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSettings\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, settings => settings.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, Index, OneToMany, OneToOne } from 'typeorm';\nimport { IsEmail, IsString, MinLength } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\nimport { Analysis } from '../../analysis/entities/analysis.entity';\nimport { UserSettings } from './user-settings.entity';\n\n@Entity('users')\nexport class User extends CustomBaseEntity {\n  @Column({ unique: true })\n  @IsEmail()\n  @Index()\n  email: string;\n\n  @Column()\n  @IsString()\n  @MinLength(3)\n  username: string;\n\n  @Column()\n  @Exclude()\n  @MinLength(8)\n  password: string;\n\n  @OneToMany(() => Analysis, (analysis) => analysis.user)\n  analyses: Analysis[];\n\n  @OneToOne(() => UserSettings, (settings) => settings.user, {\n    cascade: true,\n  })\n  settings: UserSettings;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                settings\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/user.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSettingsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserSettingsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john_doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserSettingsDto } from '../../users/dto/user-settings.dto';\nimport { User } from 'src/users/entities/user.entity';\n\nexport class UserDto {\n  @ApiProperty({ example: '123e4567-e89b-12d3-a456-426614174000' })\n  id: string;\n\n  @ApiProperty({ example: 'user@example.com' })\n  email: string;\n\n  @ApiProperty({ example: 'john_doe' })\n  username: string;\n\n  @ApiProperty({ type: () => UserSettingsDto })\n  settings: UserSettingsDto;\n\n  constructor(user: User) {\n    this.id = user.id;\n    this.email = user.email;\n    this.username = user.username;\n    this.settings = user.settings ? new UserSettingsDto(user.settings) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserSettings.html":{"url":"entities/UserSettings.html","title":"entity - UserSettings","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user-settings.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                darkMode\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                theme\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'dark_mode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user-settings.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'fr'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user-settings.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'light'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user-settings.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.settings)@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user-settings.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, OneToOne, JoinColumn } from 'typeorm';\nimport { CustomBaseEntity } from '../../common/entities/custom-base.entity';\nimport { User } from './user.entity';\n\n@Entity('user_settings')\nexport class UserSettings extends CustomBaseEntity {\n  @Column({ default: 'fr' })\n  language: string;\n\n  @Column({ default: 'light' })\n  theme: string;\n\n  @OneToOne(() => User, (user) => user.settings)\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n\n  @Column({ nullable: true, name: 'dark_mode' })\n  darkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserSettingsController.html":{"url":"controllers/UserSettingsController.html","title":"controller - UserSettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserSettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user-settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/settings\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                updateSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSettings(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupération des paramètres de l'utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/user-settings.controller.ts:22\n                        \n                    \n\n\n            \n                \n                        Récupère les paramètres de l'utilisateur connecté\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        updateSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSettings(user: User, updateSettingsDto: UserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Mise à jour des paramètres de l'utilisateur'})@ApiBody({type: UserSettingsDto})@ApiBearerAuth('access-token')\n                \n            \n\n                    \n                        \n                            Defined in src/users/user-settings.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Met à jour les paramètres de l'utilisateur connecté\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSettingsDto\n                                            \n                                                            UserSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Put, Body, UseGuards, Logger } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiBearerAuth, ApiBody } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../authentication/jwt-auth.guard';\nimport { UserSettingsService } from './user-settings.service';\nimport { UserSettingsDto } from './dto/user-settings.dto';\nimport { CurrentUser } from '../common/decorators/current-user.decorator';\nimport { User } from './entities/user.entity';\n\n@ApiTags('Paramètres utilisateur')\n@Controller('user/settings')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth('access-token')\nexport class UserSettingsController {\n  private readonly logger = new Logger(UserSettingsController.name);\n  constructor(private readonly settingsService: UserSettingsService) {}\n\n  /**\n   * Récupère les paramètres de l'utilisateur connecté\n   */\n  @Get()\n  @ApiOperation({ summary: \"Récupération des paramètres de l'utilisateur\" })\n  getSettings(@CurrentUser() user: User): Promise {\n    return this.settingsService.getSettings(user);\n  }\n\n  /**\n   * Met à jour les paramètres de l'utilisateur connecté\n   */\n  @Put()\n  @ApiOperation({ summary: \"Mise à jour des paramètres de l'utilisateur\" })\n  @ApiBody({ type: UserSettingsDto })\n  @ApiBearerAuth('access-token')\n  updateSettings(@CurrentUser() user: User, @Body() updateSettingsDto: UserSettingsDto): Promise {\n    this.logger.debug(\n      `Mise à jour des paramètres de l'utilisateur avec l'ID ${user.id}: ${JSON.stringify(updateSettingsDto)}`,\n    );\n    return this.settingsService.updateSettings(user, updateSettingsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSettingsDto.html":{"url":"classes/UserSettingsDto.html","title":"class - UserSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                darkMode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                language\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/user-settings.dto.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Mode sombre', example: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-settings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'La langue de l'utilisateur', example: 'fr'})@IsOptional()@IsString({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-settings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Le thème de l'interface', example: 'dark'})@IsOptional()@IsString({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-settings.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class UserSettingsDto {\n  @ApiProperty({ description: \"La langue de l'utilisateur\", example: 'fr' })\n  @IsOptional()\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  language?: string;\n\n  @ApiProperty({ description: \"Le thème de l'interface\", example: 'dark' })\n  @IsOptional()\n  @IsString({ message: i18nValidationMessage('validation.IS_STRING') })\n  theme?: string;\n\n  @ApiProperty({ description: 'Mode sombre', example: true })\n  @IsOptional()\n  darkMode?: boolean;\n\n  constructor(settings: Partial) {\n    Object.assign(this, settings);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSettingsService.html":{"url":"injectables/UserSettingsService.html","title":"injectable - UserSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user-settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSettings\n                            \n                            \n                                    Async\n                                updateSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settingsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/user-settings.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingsRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSettings(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user-settings.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Récupère les paramètres d'un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur dont on veut récupérer les paramètres\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Les paramètres de l'utilisateur\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSettings(user: User, updateSettingsDto: UserSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user-settings.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Met à jour les paramètres d'un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'utilisateur dont on veut modifier les paramètres\n\n                                            \n                                        \n                                        \n                                                updateSettingsDto\n                                            \n                                                            UserSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les nouveaux paramètres\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Les paramètres mis à jour\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserSettingsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/users/user-settings.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserSettings } from './entities/user-settings.entity';\nimport { UserSettingsDto } from './dto/user-settings.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserSettingsService {\n  private readonly logger = new Logger(UserSettingsService.name);\n  constructor(\n    @InjectRepository(UserSettings)\n    private readonly settingsRepository: Repository,\n  ) {}\n\n  /**\n   * Met à jour les paramètres d'un utilisateur\n   * @param user L'utilisateur dont on veut modifier les paramètres\n   * @param updateSettingsDto Les nouveaux paramètres\n   * @returns Les paramètres mis à jour\n   * @throws NotFoundException si les paramètres n'existent pas\n   */\n  async updateSettings(user: User, updateSettingsDto: UserSettingsDto): Promise {\n    this.logger.debug(\n      `Nouveaux paramètres de l'utilisateur avec l'ID ${user.id}: ${JSON.stringify(updateSettingsDto)}`,\n    );\n    const settings: UserSettings = await this.getSettings(user);\n\n    this.logger.debug(`Mise à jour des paramètres de l'utilisateur avec l'ID ${user.id}`);\n\n    const hasChanges = Object.keys(updateSettingsDto).some((key) => updateSettingsDto[key] !== settings[key]);\n\n    if (!hasChanges) {\n      throw new ConflictException('Aucun changement détecté');\n    }\n\n    Object.assign(settings, updateSettingsDto);\n\n    return this.settingsRepository.save(settings);\n  }\n\n  /**\n   * Récupère les paramètres d'un utilisateur\n   * @param user L'utilisateur dont on veut récupérer les paramètres\n   * @returns Les paramètres de l'utilisateur\n   * @throws NotFoundException si les paramètres n'existent pas\n   */\n  async getSettings(user: User): Promise {\n    const settings: UserSettings = await this.settingsRepository.findOne({\n      where: { user: { id: user.id } },\n    });\n\n    if (!settings) {\n      this.logger.error(`Les paramètres de l'utilisateur avec l'ID ${user.id} n'existent pas`);\n      throw new NotFoundException(\"Les paramètres de l'utilisateur n'existent pas\");\n    }\n\n    this.logger.debug(`Récupération des paramètres de l'utilisateur avec l'ID ${user.id}`);\n\n    return settings;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMe\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@ApiOperation({summary: 'Récupérer les informations de l'utilisateur connecté'})@ApiResponse({status: 200, description: 'Utilisateur trouvé', type: UserDto})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})@ApiResponse({status: 401, description: 'Non autorisé'})@ApiResponse({status: 400, description: 'Requête invalide'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Récupère les informations de l'utilisateur connecté.\n|----------------------------------------------------------------------------------------|\n\n\n\nATTENTION : Laisser cette route en premier pour éviter les conflits avec le get(':id')\n\n\n\n\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmail(getUserByEmailDto: GetUserByEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('email/:email')@ApiOperation({summary: 'Récupérer un utilisateur par email'})@ApiParam({name: 'email', type: String, description: 'Email de l'utilisateur', required: true, example: 'user@example.com'})@ApiResponse({status: 200, description: 'Utilisateur trouvé', type: UserDto})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:94\n                        \n                    \n\n\n            \n                \n                        Récupère un utilisateur par son email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                getUserByEmailDto\n                                            \n                                                            GetUserByEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes informations de l'utilisateur à rechercher\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Les informations de l'utilisateur\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(getUserByIdDto: GetUserByIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un utilisateur par ID'})@ApiParam({name: 'id', type: String, description: 'UUID de l'utilisateur', required: true, example: '50749934-714b-450d-9bcf-69e80d489597'})@ApiResponse({status: 200, description: 'Utilisateur trouvé', type: UserDto})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:70\n                        \n                    \n\n\n            \n                \n                        Récupère un utilisateur par son identifiant.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                getUserByIdDto\n                                            \n                                                            GetUserByIdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes informations de l'utilisateur à rechercher\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Les informations de l'utilisateur\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(user: User, updateUserPasswordDto: UpdateUserPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('me/password')@ApiOperation({summary: 'Modifier le mot de passe de l'utilisateur connecté'})@ApiBody({type: UpdateUserPasswordDto})@ApiResponse({status: 200, description: 'Mot de passe mis à jour', type: UserDto})@ApiResponse({status: 400, description: 'Requête invalide'})@ApiResponse({status: 401, description: 'Non autorisé'})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})@ApiResponse({status: 409, description: 'Mot de passe identique à l'ancien'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserPasswordDto\n                                            \n                                                            UpdateUserPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('me')@ApiOperation({summary: 'Modifier les informations de l'utilisateur connecté'})@ApiBody({type: UpdateUserDto})@ApiResponse({status: 200, description: 'Utilisateur mis à jour', type: UserDto})@ApiResponse({status: 400, description: 'Requête invalide'})@ApiResponse({status: 401, description: 'Non autorisé'})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})@ApiResponse({status: 409, description: 'Information(s) identique à l'ancienne'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  ValidationPipe,\n  UseGuards,\n  NotFoundException,\n  Put,\n  Patch,\n  UsePipes,\n  Body,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiParam, ApiBearerAuth, ApiBody } from '@nestjs/swagger';\nimport { UsersService } from './users.service';\nimport { I18nService } from 'nestjs-i18n';\nimport { UserDto } from 'src/common/dto/user.dto';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtAuthGuard } from 'src/authentication/jwt-auth.guard';\nimport { User } from './entities/user.entity';\nimport { UpdateUserDto } from './dto/request/update-user.dto';\nimport { UpdateUserPasswordDto } from './dto/request/update-user-password.dto';\nimport { GetUserByEmailDto, GetUserByIdDto } from './dto/request/user-request.dto';\n\n@ApiBearerAuth('access-token')\n@Controller('user')\n@UseGuards(JwtAuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly i18n: I18nService,\n  ) {}\n\n  /**\n   * Récupère les informations de l'utilisateur connecté.\n   * |----------------------------------------------------------------------------------------|\n   * | ATTENTION : Laisser cette route en premier pour éviter les conflits avec le get(':id') |\n   * |----------------------------------------------------------------------------------------|\n   * @param user\n   */\n  @Get('me')\n  @ApiOperation({ summary: \"Récupérer les informations de l'utilisateur connecté\" })\n  @ApiResponse({ status: 200, description: 'Utilisateur trouvé', type: UserDto })\n  @ApiResponse({ status: 404, description: 'Utilisateur non trouvé' })\n  @ApiResponse({ status: 401, description: 'Non autorisé' })\n  @ApiResponse({ status: 400, description: 'Requête invalide' })\n  async getMe(@CurrentUser() user: User): Promise {\n    const currentUser = await this.usersService.findOneByIdWithSettings(user.id);\n    return new UserDto(currentUser);\n  }\n\n  /**\n   * Récupère un utilisateur par son identifiant.\n   *\n   * @throws NotFoundException si l'utilisateur n'est pas trouvé\n   * @returns Les informations de l'utilisateur\n   * @param getUserByIdDto - Les informations de l'utilisateur à rechercher\n   */\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par ID' })\n  @ApiParam({\n    name: 'id',\n    type: String,\n    description: \"UUID de l'utilisateur\",\n    required: true,\n    example: '50749934-714b-450d-9bcf-69e80d489597',\n  })\n  @ApiResponse({ status: 200, description: 'Utilisateur trouvé', type: UserDto })\n  @ApiResponse({ status: 404, description: 'Utilisateur non trouvé' })\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getUserById(@Param() getUserByIdDto: GetUserByIdDto): Promise {\n    const user = await this.usersService.findOneById(getUserByIdDto.id);\n    return new UserDto(user);\n  }\n\n  /**\n   * Récupère un utilisateur par son email.\n   *\n   * @throws NotFoundException si l'utilisateur n'est pas trouvé\n   * @returns Les informations de l'utilisateur\n   * @param getUserByEmailDto - Les informations de l'utilisateur à rechercher\n   */\n  @Get('email/:email')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par email' })\n  @ApiParam({\n    name: 'email',\n    type: String,\n    description: \"Email de l'utilisateur\",\n    required: true,\n    example: 'user@example.com',\n  })\n  @ApiResponse({ status: 200, description: 'Utilisateur trouvé', type: UserDto })\n  @ApiResponse({ status: 404, description: 'Utilisateur non trouvé' })\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getUserByEmail(@Param() getUserByEmailDto: GetUserByEmailDto): Promise {\n    const user: User = await this.usersService.findOneByEmail(getUserByEmailDto.email);\n    if (!user) {\n      throw new NotFoundException(this.i18n.translate('user.errors.notFound'));\n    }\n    return new UserDto(user);\n  }\n\n  @Put('me')\n  @ApiOperation({ summary: \"Modifier les informations de l'utilisateur connecté\" })\n  @ApiBody({ type: UpdateUserDto })\n  @ApiResponse({ status: 200, description: 'Utilisateur mis à jour', type: UserDto })\n  @ApiResponse({ status: 400, description: 'Requête invalide' })\n  @ApiResponse({ status: 401, description: 'Non autorisé' })\n  @ApiResponse({ status: 404, description: 'Utilisateur non trouvé' })\n  @ApiResponse({ status: 409, description: \"Information(s) identique à l'ancienne\" })\n  async updateUser(@CurrentUser() user: User, @Body() updateUserDto: UpdateUserDto): Promise {\n    const updatedUser = await this.usersService.update(user.id, updateUserDto);\n    return new UserDto(updatedUser);\n  }\n\n  @Patch('me/password')\n  @ApiOperation({ summary: \"Modifier le mot de passe de l'utilisateur connecté\" })\n  @ApiBody({ type: UpdateUserPasswordDto })\n  @ApiResponse({ status: 200, description: 'Mot de passe mis à jour', type: UserDto })\n  @ApiResponse({ status: 400, description: 'Requête invalide' })\n  @ApiResponse({ status: 401, description: 'Non autorisé' })\n  @ApiResponse({ status: 404, description: 'Utilisateur non trouvé' })\n  @ApiResponse({ status: 409, description: \"Mot de passe identique à l'ancien\" })\n  async updatePassword(@CurrentUser() user: User, updateUserPasswordDto: UpdateUserPasswordDto): Promise {\n    const updatedUser = await this.usersService.updatePassword(user.id, updateUserPasswordDto);\n    return new UserDto(updatedUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserSettingsService\n\nUserSettingsService\n\nUsersModule -->\n\nUserSettingsService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserSettingsService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserSettingsController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { UserSettings } from './entities/user-settings.entity';\nimport { UsersService } from './users.service';\nimport { UserSettingsService } from './user-settings.service';\nimport { UserSettingsController } from './user-settings.controller';\nimport { UsersController } from './users.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, UserSettings])],\n  providers: [UsersService, UserSettingsService],\n  controllers: [UserSettingsController, UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByIdWithSettings\n                            \n                            \n                                    Private\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Private\n                                throwUserNotFoundException\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Crée un nouvel utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes informations du nouvel utilisateur.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur créé.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Recherche un utilisateur par email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'email de l'utilisateur.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur correspondant.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Recherche un utilisateur par ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'ID de l'utilisateur.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur correspondant.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByIdWithSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdWithSettings(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Recherche un utilisateur par ID avec ses paramètres.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'ID de l'utilisateur.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur correspondant.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        throwUserNotFoundException\n                        \n                    \n                \n            \n            \n                \n                        \n                    throwUserNotFoundException(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, newUserInfo: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Met à jour les informations d'un utilisateur.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nL'ID de l'utilisateur à mettre à jour.\n\n\n                                            \n                                        \n                                        \n                                                newUserInfo\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes nouvelles informations de l'utilisateur.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                L'utilisateur mis à jour.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(id: string, updateUserPasswordDto: UpdateUserPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Met à jour le mot de passe de l'utilisateur.\nN'autorise pas la modification si le nouveau mot de passe est identique à l'ancien.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserPasswordDto\n                                            \n                                                            UpdateUserPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, ConflictException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../authentication/dto/request/create-user.dto';\nimport { I18nService } from 'nestjs-i18n';\nimport * as bcrypt from 'bcrypt';\nimport { UpdateUserDto } from './dto/request/update-user.dto';\nimport { UpdateUserPasswordDto } from './dto/request/update-user-password.dto';\nimport { UserDto } from '../common/dto/user.dto';\n\n@Injectable()\nexport class UsersService {\n  private readonly logger = new Logger(UsersService.name);\n\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    private readonly i18n: I18nService,\n  ) {}\n\n  /**\n   * Crée un nouvel utilisateur.\n   *\n   * @param createUserDto - Les informations du nouvel utilisateur.\n   * @returns L'utilisateur créé.\n   * @throws ConflictException si l'utilisateur existe déjà.\n   */\n  async create(createUserDto: CreateUserDto): Promise {\n    this.logger.debug(`Tentative de création de l'utilisateur avec l'email: ${createUserDto.email}`);\n    const existingUser: User = await this.findOneByEmail(createUserDto.email);\n    if (existingUser) {\n      this.logger.warn(`Utilisateur existant avec l'email: ${createUserDto.email}`);\n      throw new ConflictException(this.i18n.translate('user.errors.alreadyExists'));\n    }\n\n    const hashedPassword: string = await this.hashPassword(createUserDto.password);\n    const user: User = this.usersRepository.create({\n      ...createUserDto,\n      password: hashedPassword,\n      settings: {},\n    });\n    const savedUser: User = await this.usersRepository.save(user);\n    this.logger.log(`Utilisateur créé avec l'ID: ${savedUser.id}`);\n    return savedUser;\n  }\n\n  /**\n   * Recherche un utilisateur par email.\n   *\n   * @param email - L'email de l'utilisateur.\n   * @returns L'utilisateur correspondant.\n   * @throws BadRequestException si l'email n'est pas fourni.\n   */\n  async findOneByEmail(email: string): Promise {\n    if (!email) {\n      this.logger.error(\"Email requis pour la recherche de l'utilisateur.\");\n      throw new BadRequestException(\"L'email est requis pour la recherche de l'utilisateur.\");\n    }\n    this.logger.debug(`Recherche de l'utilisateur avec l'email ${email}`);\n    const user: User = await this.usersRepository.findOne({ where: { email } });\n\n    if (!user) {\n      this.logger.warn(`Aucun utilisateur trouvé avec l'email ${email}`);\n      return null;\n    }\n    this.logger.debug(`Utilisateur trouvé avec l'email ${email}`);\n\n    return user;\n  }\n\n  /**\n   * Recherche un utilisateur par ID.\n   *\n   * @param id - L'ID de l'utilisateur.\n   * @returns L'utilisateur correspondant.\n   */\n  async findOneById(id: string): Promise {\n    this.logger.debug(`Recherche de l'utilisateur avec l'ID ${id}`);\n    const user: User = await this.usersRepository.findOne({ where: { id } });\n    if (!user) {\n      this.logger.warn(`Aucun utilisateur trouvé avec l'ID ${id}`);\n      throw new NotFoundException('Aucun utilisateur trouvé avec cet ID.');\n    }\n    this.logger.debug(`Utilisateur trouvé avec l'ID ${id}`);\n    return user;\n  }\n\n  /**\n   * Recherche un utilisateur par ID avec ses paramètres.\n   *\n   * @param id - L'ID de l'utilisateur.\n   * @returns L'utilisateur correspondant.\n   */\n  async findOneByIdWithSettings(id: string): Promise {\n    const user: User = await this.usersRepository.findOne({\n      where: { id },\n      relations: {\n        settings: true,\n      },\n    });\n\n    if (!user) {\n      this.logger.warn(`Aucun utilisateur trouvé avec l'ID ${id}`);\n      throw new NotFoundException('Aucun utilisateur non trouvé');\n    }\n\n    return user;\n  }\n\n  /**\n   * Met à jour les informations d'un utilisateur.\n   *\n   * @param id - L'ID de l'utilisateur à mettre à jour.\n   * @param newUserInfo - Les nouvelles informations de l'utilisateur.\n   * @returns L'utilisateur mis à jour.\n   * @throws NotFoundException si l'utilisateur n'est pas trouvé.\n   */\n  async update(id: string, newUserInfo: UpdateUserDto): Promise {\n    // if any parameter is the same as before then throw error\n    const user: UserDto = new UserDto(await this.findOneById(id));\n    if (!user) {\n      this.throwUserNotFoundException(id);\n    }\n\n    if (user.email === newUserInfo.email) {\n      throw new ConflictException(\"L'email est identique à l'ancien\");\n    }\n\n    // Vérifier si l'email n'est pas déjà utilisé.\n    if (user.email !== newUserInfo.email) {\n      const existingUser: User = await this.findOneByEmail(newUserInfo.email);\n      if (existingUser) {\n        this.logger.warn(`Utilisateur existant avec l'email: ${newUserInfo.email}`);\n        throw new ConflictException(this.i18n.translate('user.errors.alreadyExists'));\n      }\n      this.logger.debug(`Email de l'utilisateur mis à jour avec l'ID: ${user.id}`);\n    }\n\n    if (newUserInfo.username === user.username) {\n      throw new ConflictException(\"Le nom d'utilisateur est identique à l'ancien\");\n    }\n\n    Object.assign(user, newUserInfo);\n    const updatedUser: User = await this.usersRepository.save(user);\n    this.logger.log(`Utilisateur mis à jour avec l'ID: ${updatedUser.id}`);\n    return updatedUser;\n  }\n\n  /**\n   * Met à jour le mot de passe de l'utilisateur.\n   * N'autorise pas la modification si le nouveau mot de passe est identique à l'ancien.\n   * @param id\n   * @param updateUserPasswordDto\n   */\n  async updatePassword(id: string, updateUserPasswordDto: UpdateUserPasswordDto): Promise {\n    if (updateUserPasswordDto.password !== updateUserPasswordDto.confirmPassword) {\n      this.logger.warn('Les mots de passe ne correspondent pas.');\n      throw new BadRequestException('Les mots de passe ne correspondent pas.');\n    }\n\n    // On ne veut pas que le nouveau mot de passe soit identique à l'ancien.\n    if (updateUserPasswordDto.currentPassword === updateUserPasswordDto.password) {\n      this.logger.warn(\"Le nouveau mot de passe ne doit pas être identique à l'ancien\");\n      throw new ConflictException(\"Le nouveau mot de passe ne dot pas être identique à l'ancien\");\n    }\n\n    this.logger.debug(`Mise à jour du mot de passe de l'utilisateur avec l'ID: ${id}`);\n\n    const user: User = await this.findOneById(id);\n\n    if (!user) {\n      this.throwUserNotFoundException(user.id);\n    }\n\n    user.password = await this.hashPassword(updateUserPasswordDto.password);\n    const updatedUser: User = await this.usersRepository.save(user);\n    this.logger.log(`Mot de passe de l'utilisateur mis à jour avec l'ID: ${updatedUser.id}`);\n    return updatedUser;\n  }\n\n  private async hashPassword(password: string): Promise {\n    return await bcrypt.hash(password, 10);\n  }\n\n  private throwUserNotFoundException(id: string): void {\n    this.logger.warn(`Aucun utilisateur trouvé avec l'ID: ${id}`);\n    throw new NotFoundException('Aucun utilisateur trouvé avec cet ID.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        dist/src/i18n/i18n.config.ts\n            \n            variable\n            i18nConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analysis/analysis.controller.ts\n            \n            controller\n            AnalysisController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/analysis/analysis.service.ts\n            \n            injectable\n            AnalysisService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/analysis/dto/request/create-analysis.dto.ts\n            \n            class\n            CreateAnalysisDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/analysis/dto/response/analysis-move-response.dto.ts\n            \n            class\n            AnalysisMoveResponseDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/analysis/dto/response/analysis-response.dto.ts\n            \n            class\n            AnalysisResponseDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/analysis/dto/response/info-result-response.dto.ts\n            \n            class\n            InfoResultResponseDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/analysis/dto/response/move-response.dto.ts\n            \n            class\n            MoveResponseDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/analysis/entities/analysis-move.entity.ts\n            \n            entity\n            AnalysisMove\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analysis/entities/analysis.entity.ts\n            \n            entity\n            Analysis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analysis/entities/analysis.entity.ts\n            \n            class\n            Analysis\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/analysis/entities/info-result.entity.ts\n            \n            entity\n            InfoResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analysis/entities/move.entity.ts\n            \n            entity\n            Move\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/authentication/dto/request/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/dto/request/jwt-payload.dto.ts\n            \n            class\n            JwtPayloadDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/dto/request/login-request.dto.ts\n            \n            class\n            LoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/dto/request/refresh-token-request.dto.ts\n            \n            class\n            RefreshTokenRequestDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/authentication/dto/response/authentication-response.dto.ts\n            \n            class\n            AuthenticationResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/chess/chess.controller.ts\n            \n            controller\n            ChessController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chess/chess.service.ts\n            \n            injectable\n            ChessService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/chess/interfaces/chess-player.interface.ts\n            \n            interface\n            ChessPlayer\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/common/constants/app.constant.ts\n            \n            variable\n            DEFAULT_PAGE_NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/app.constant.ts\n            \n            variable\n            DEFAULT_PAGE_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/common/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/entities/custom-base.entity.ts\n            \n            class\n            CustomBaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        src/config/jwt.config.ts\n            \n            variable\n            getJwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/database.config.ts\n            \n            variable\n            getDatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/database.constants.ts\n            \n            variable\n            DATABASE_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/elite-database.config.ts\n            \n            variable\n            getEliteDatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/elitedb/elitedb.controller.ts\n            \n            controller\n            ElitedbController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/elitedb/elitedb.service.ts\n            \n            injectable\n            ElitedbService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/elitedb/entities/elitedb-move.entity.ts\n            \n            entity\n            ElitedbMove\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/elitedb/entities/elitedb-move.entity.ts\n            \n            class\n            ElitedbMove\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/generated/i18n.generated.ts\n            \n            type alias\n            I18nPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/generated/i18n.generated.ts\n            \n            type alias\n            I18nTranslations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/i18n/i18n.config.ts\n            \n            variable\n            i18nConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-results/info-results.service.ts\n            \n            injectable\n            InfoResultsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/moves/moves.service.ts\n            \n            injectable\n            MovesService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/users/dto/request/update-user-password.dto.ts\n            \n            class\n            UpdateUserPasswordDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/request/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/request/user-request.dto.ts\n            \n            class\n            GetUserByEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/request/user-request.dto.ts\n            \n            class\n            GetUserByIdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/user-settings.dto.ts\n            \n            class\n            UserSettingsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/entities/user-settings.entity.ts\n            \n            entity\n            UserSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user-settings.controller.ts\n            \n            controller\n            UserSettingsController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/user-settings.service.ts\n            \n            injectable\n            UserSettingsService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                54 %\n                (6/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/common : ^10.4.6\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.6\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.6\n        \n            @nestjs/swagger : ^8.0.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            nestjs-i18n : ^10.4.9\n        \n            nestjs-typeorm-paginate : ^4.0.4\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : 0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnalysisMoveClassificationEnum   (src/.../analysis-move-classification.enum.ts)\n                        \n                        \n                            ColorEnum   (src/.../color.enum.ts)\n                        \n                        \n                            PieceSymbolEnum   (src/.../piece-symbol.enum.ts)\n                        \n                        \n                            SquareEnum   (src/.../square.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/analysis/enums/analysis-move-classification.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnalysisMoveClassificationEnum\n                    \n                \n                        \n                            \n                                 Brilliant\n                            \n                        \n                        \n                            \n                                Value : Brilliant\n                            \n                        \n                        \n                            \n                                 Good\n                            \n                        \n                        \n                            \n                                Value : Good\n                            \n                        \n                        \n                            \n                                 Inaccuracy\n                            \n                        \n                        \n                            \n                                Value : Inaccuracy\n                            \n                        \n                        \n                            \n                                 Mistake\n                            \n                        \n                        \n                            \n                                Value : Mistake\n                            \n                        \n                        \n                            \n                                 Blunder\n                            \n                        \n                        \n                            \n                                Value : Blunder\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : None\n                            \n                        \n                        \n                            \n                                 Best\n                            \n                        \n                        \n                            \n                                Value : Best\n                            \n                        \n                        \n                            \n                                 Excellent\n                            \n                        \n                        \n                            \n                                Value : Excellent\n                            \n                        \n            \n        \n\n    src/analysis/enums/color.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorEnum\n                    \n                \n                        \n                            \n                                 White\n                            \n                        \n                        \n                            \n                                Value : w\n                            \n                        \n                        \n                            \n                                 Black\n                            \n                        \n                        \n                            \n                                Value : b\n                            \n                        \n            \n        \n\n    src/analysis/enums/piece-symbol.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceSymbolEnum\n                    \n                \n                        \n                            \n                                 Pawn\n                            \n                        \n                        \n                            \n                                Value : p\n                            \n                        \n                        \n                            \n                                 Knight\n                            \n                        \n                        \n                            \n                                Value : n\n                            \n                        \n                        \n                            \n                                 Bishop\n                            \n                        \n                        \n                            \n                                Value : b\n                            \n                        \n                        \n                            \n                                 Rook\n                            \n                        \n                        \n                            \n                                Value : r\n                            \n                        \n                        \n                            \n                                 Queen\n                            \n                        \n                        \n                            \n                                Value : q\n                            \n                        \n                        \n                            \n                                 King\n                            \n                        \n                        \n                            \n                                Value : k\n                            \n                        \n            \n        \n\n    src/analysis/enums/square.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SquareEnum\n                    \n                \n                        \n                            \n                                 A8\n                            \n                        \n                        \n                            \n                                Value : a8\n                            \n                        \n                        \n                            \n                                 B8\n                            \n                        \n                        \n                            \n                                Value : b8\n                            \n                        \n                        \n                            \n                                 C8\n                            \n                        \n                        \n                            \n                                Value : c8\n                            \n                        \n                        \n                            \n                                 D8\n                            \n                        \n                        \n                            \n                                Value : d8\n                            \n                        \n                        \n                            \n                                 E8\n                            \n                        \n                        \n                            \n                                Value : e8\n                            \n                        \n                        \n                            \n                                 F8\n                            \n                        \n                        \n                            \n                                Value : f8\n                            \n                        \n                        \n                            \n                                 G8\n                            \n                        \n                        \n                            \n                                Value : g8\n                            \n                        \n                        \n                            \n                                 H8\n                            \n                        \n                        \n                            \n                                Value : h8\n                            \n                        \n                        \n                            \n                                 A7\n                            \n                        \n                        \n                            \n                                Value : a7\n                            \n                        \n                        \n                            \n                                 B7\n                            \n                        \n                        \n                            \n                                Value : b7\n                            \n                        \n                        \n                            \n                                 C7\n                            \n                        \n                        \n                            \n                                Value : c7\n                            \n                        \n                        \n                            \n                                 D7\n                            \n                        \n                        \n                            \n                                Value : d7\n                            \n                        \n                        \n                            \n                                 E7\n                            \n                        \n                        \n                            \n                                Value : e7\n                            \n                        \n                        \n                            \n                                 F7\n                            \n                        \n                        \n                            \n                                Value : f7\n                            \n                        \n                        \n                            \n                                 G7\n                            \n                        \n                        \n                            \n                                Value : g7\n                            \n                        \n                        \n                            \n                                 H7\n                            \n                        \n                        \n                            \n                                Value : h7\n                            \n                        \n                        \n                            \n                                 A6\n                            \n                        \n                        \n                            \n                                Value : a6\n                            \n                        \n                        \n                            \n                                 B6\n                            \n                        \n                        \n                            \n                                Value : b6\n                            \n                        \n                        \n                            \n                                 C6\n                            \n                        \n                        \n                            \n                                Value : c6\n                            \n                        \n                        \n                            \n                                 D6\n                            \n                        \n                        \n                            \n                                Value : d6\n                            \n                        \n                        \n                            \n                                 E6\n                            \n                        \n                        \n                            \n                                Value : e6\n                            \n                        \n                        \n                            \n                                 F6\n                            \n                        \n                        \n                            \n                                Value : f6\n                            \n                        \n                        \n                            \n                                 G6\n                            \n                        \n                        \n                            \n                                Value : g6\n                            \n                        \n                        \n                            \n                                 H6\n                            \n                        \n                        \n                            \n                                Value : h6\n                            \n                        \n                        \n                            \n                                 A5\n                            \n                        \n                        \n                            \n                                Value : a5\n                            \n                        \n                        \n                            \n                                 B5\n                            \n                        \n                        \n                            \n                                Value : b5\n                            \n                        \n                        \n                            \n                                 C5\n                            \n                        \n                        \n                            \n                                Value : c5\n                            \n                        \n                        \n                            \n                                 D5\n                            \n                        \n                        \n                            \n                                Value : d5\n                            \n                        \n                        \n                            \n                                 E5\n                            \n                        \n                        \n                            \n                                Value : e5\n                            \n                        \n                        \n                            \n                                 F5\n                            \n                        \n                        \n                            \n                                Value : f5\n                            \n                        \n                        \n                            \n                                 G5\n                            \n                        \n                        \n                            \n                                Value : g5\n                            \n                        \n                        \n                            \n                                 H5\n                            \n                        \n                        \n                            \n                                Value : h5\n                            \n                        \n                        \n                            \n                                 A4\n                            \n                        \n                        \n                            \n                                Value : a4\n                            \n                        \n                        \n                            \n                                 B4\n                            \n                        \n                        \n                            \n                                Value : b4\n                            \n                        \n                        \n                            \n                                 C4\n                            \n                        \n                        \n                            \n                                Value : c4\n                            \n                        \n                        \n                            \n                                 D4\n                            \n                        \n                        \n                            \n                                Value : d4\n                            \n                        \n                        \n                            \n                                 E4\n                            \n                        \n                        \n                            \n                                Value : e4\n                            \n                        \n                        \n                            \n                                 F4\n                            \n                        \n                        \n                            \n                                Value : f4\n                            \n                        \n                        \n                            \n                                 G4\n                            \n                        \n                        \n                            \n                                Value : g4\n                            \n                        \n                        \n                            \n                                 H4\n                            \n                        \n                        \n                            \n                                Value : h4\n                            \n                        \n                        \n                            \n                                 A3\n                            \n                        \n                        \n                            \n                                Value : a3\n                            \n                        \n                        \n                            \n                                 B3\n                            \n                        \n                        \n                            \n                                Value : b3\n                            \n                        \n                        \n                            \n                                 C3\n                            \n                        \n                        \n                            \n                                Value : c3\n                            \n                        \n                        \n                            \n                                 D3\n                            \n                        \n                        \n                            \n                                Value : d3\n                            \n                        \n                        \n                            \n                                 E3\n                            \n                        \n                        \n                            \n                                Value : e3\n                            \n                        \n                        \n                            \n                                 F3\n                            \n                        \n                        \n                            \n                                Value : f3\n                            \n                        \n                        \n                            \n                                 G3\n                            \n                        \n                        \n                            \n                                Value : g3\n                            \n                        \n                        \n                            \n                                 H3\n                            \n                        \n                        \n                            \n                                Value : h3\n                            \n                        \n                        \n                            \n                                 A2\n                            \n                        \n                        \n                            \n                                Value : a2\n                            \n                        \n                        \n                            \n                                 B2\n                            \n                        \n                        \n                            \n                                Value : b2\n                            \n                        \n                        \n                            \n                                 C2\n                            \n                        \n                        \n                            \n                                Value : c2\n                            \n                        \n                        \n                            \n                                 D2\n                            \n                        \n                        \n                            \n                                Value : d2\n                            \n                        \n                        \n                            \n                                 E2\n                            \n                        \n                        \n                            \n                                Value : e2\n                            \n                        \n                        \n                            \n                                 F2\n                            \n                        \n                        \n                            \n                                Value : f2\n                            \n                        \n                        \n                            \n                                 G2\n                            \n                        \n                        \n                            \n                                Value : g2\n                            \n                        \n                        \n                            \n                                 H2\n                            \n                        \n                        \n                            \n                                Value : h2\n                            \n                        \n                        \n                            \n                                 A1\n                            \n                        \n                        \n                            \n                                Value : a1\n                            \n                        \n                        \n                            \n                                 B1\n                            \n                        \n                        \n                            \n                                Value : b1\n                            \n                        \n                        \n                            \n                                 C1\n                            \n                        \n                        \n                            \n                                Value : c1\n                            \n                        \n                        \n                            \n                                 D1\n                            \n                        \n                        \n                            \n                                Value : d1\n                            \n                        \n                        \n                            \n                                 E1\n                            \n                        \n                        \n                            \n                                Value : e1\n                            \n                        \n                        \n                            \n                                 F1\n                            \n                        \n                        \n                            \n                                Value : f1\n                            \n                        \n                        \n                            \n                                 G1\n                            \n                        \n                        \n                            \n                                Value : g1\n                            \n                        \n                        \n                            \n                                 H1\n                            \n                        \n                        \n                            \n                                Value : h1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCastled API\nCe projet est une API REST pour l'outil d'analyse de parties d'échecs \"Castled\". Il est développé avec NestJs, un framework Node.js.\nTable des Matières\n\nPrérequis\nTéléchargement du Projet\nConfiguration de l'Environnement\nDocker\n\n\nLancement Du Projet Après Installation\nAvec Docker\n\n\nLancer les commandes dans les conteneurs Docker\n\nPrérequis\nAssurez-vous d'avoir installé les outils suivants :\n\nPostgresql\nDocker Desktop  ou Docker Engine & Docker Compose\nNode.js\nGit\nVisual Studio Code ou un autre Éditeur de Texte ou IDE\n\nTéléchargement du Projet\nExécutez la commande suivante dans le répertoire souhaité (Un répertoire dans votre distro WSL2 est recommandé si vous utilisez Windows) :\nExample :https://github.com/CastledChess/Api.gitConfiguration de l'Environnement\nOuvrez le projet dans votre IDE et suivez les étapes suivantes pour configurer l'environnement.\nDocker\nPour lancer l'application NestJs dans des conteneurs Docker, suivez les étapes suivantes :\n\nOuvrez votre terminal à la racine du projet et copiez le fichier .env.example et renommez-le .env :\nExample :cp .env.example .env\nModifiez le fichier .env pour configurer les variables d'environnement nécessaires.\n\nDémarrez les conteneurs Docker :\nExample :docker compose up --build -d\nTéléchargez les dépendances Node :\nExample :npm install\n\nLancement Du Projet Après Installation\nPour lancer le projet après l'installation, suivez les étapes suivantes :\nAvec Docker\nLancez les conteneurs Docker :\nExample :docker compose up -dLancer les commandes dans les conteneurs Docker\nLorsque vous voulez utiliser des commandes Node ou vous connecter à la base de données, vous devez exécuter ces commandes à l'intérieur des conteneurs Docker :\nExample :docker exec -it  \n\n# Exemple\ndocker exec -it castled-api nest g module users\ndocker exec -it castled-postgres psql -U postgresOu vous pouvez ouvrir un terminal directement dans le conteneur Docker :\nExample :docker exec -it  sh\n\n# Exemple\ndocker exec -it castled-api sh\ndocker exec -it castled-postgres sh\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalysisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ElitedbModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoResultsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MovesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalysisModule\n\n\n\ncluster_AnalysisModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_ChessModule\n\n\n\ncluster_ChessModule_exports\n\n\n\ncluster_ChessModule_providers\n\n\n\ncluster_ElitedbModule\n\n\n\ncluster_ElitedbModule_providers\n\n\n\ncluster_InfoResultsModule\n\n\n\ncluster_InfoResultsModule_exports\n\n\n\ncluster_MovesModule\n\n\n\ncluster_MovesModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAnalysisService\n\nAnalysisService\n\n\n\nAnalysisModule\n\nAnalysisModule\n\nAnalysisModule -->\n\nAnalysisService->AnalysisModule\n\n\n\n\n\nInfoResultsService\n\nInfoResultsService\n\nAnalysisModule -->\n\nInfoResultsService->AnalysisModule\n\n\n\n\n\nInfoResultsModule\n\nInfoResultsModule\n\nInfoResultsModule -->\n\nInfoResultsService->InfoResultsModule\n\n\n\n\n\nMovesService\n\nMovesService\n\nAnalysisModule -->\n\nMovesService->AnalysisModule\n\n\n\n\n\nMovesModule\n\nMovesModule\n\nMovesModule -->\n\nMovesService->MovesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalysisModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nChessModule\n\nChessModule\n\nAppModule -->\n\nChessModule->AppModule\n\n\n\n\n\nChessService \n\nChessService \n\nChessService  -->\n\nChessModule->ChessService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nElitedbModule\n\nElitedbModule\n\nAppModule -->\n\nElitedbModule->AppModule\n\n\n\nMovesModule -->\n\nInfoResultsModule->MovesModule\n\n\n\nAppModule -->\n\nInfoResultsModule->AppModule\n\n\n\n\n\nInfoResultsService \n\nInfoResultsService \n\nInfoResultsService  -->\n\nInfoResultsModule->InfoResultsService \n\n\n\nAppModule -->\n\nMovesModule->AppModule\n\n\n\n\n\nMovesService \n\nMovesService \n\nMovesService  -->\n\nMovesModule->MovesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthenticationModule -->\n\nUsersModule->AuthenticationModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthenticationModule -->\n\nLocalStrategy->AuthenticationModule\n\n\n\n\n\nChessService\n\nChessService\n\nChessModule -->\n\nChessService->ChessModule\n\n\n\n\n\nElitedbService\n\nElitedbService\n\nElitedbModule -->\n\nElitedbService->ElitedbModule\n\n\n\n\n\nUserSettingsService\n\nUserSettingsService\n\nUsersModule -->\n\nUserSettingsService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            I18nPath   (src/.../i18n.generated.ts)\n                        \n                        \n                            I18nTranslations   (src/.../i18n.generated.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generated/i18n.generated.ts\n    \n    \n        \n            \n                \n                    \n                    I18nPath\n                \n            \n            \n                \n                            Path\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    I18nTranslations\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            DATABASE_TYPE   (src/.../database.constants.ts)\n                        \n                        \n                            DEFAULT_PAGE_NUMBER   (src/.../app.constant.ts)\n                        \n                        \n                            DEFAULT_PAGE_SIZE   (src/.../app.constant.ts)\n                        \n                        \n                            getDatabaseConfig   (src/.../database.config.ts)\n                        \n                        \n                            getEliteDatabaseConfig   (src/.../elite-database.config.ts)\n                        \n                        \n                            getJwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            i18nConfig   (src/.../i18n.config.ts)\n                        \n                        \n                            i18nConfig   (dist/.../i18n.config.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): User => {\n  const logger = new Logger('CurrentUser');\n  const request = ctx.switchToHttp().getRequest();\n  logger.debug(\"Récupération de l'utilisateur connecté\");\n  if (!request.user) {\n    logger.warn('Aucun utilisateur trouvé dans la requête');\n    return null;\n  }\n  return request.user;\n})\n                    \n                \n\n            \n                \n                    Décorateur permettant d'accéder à l'utilisateur connecté dans les contrôleurs\n\n                \n            \n\n        \n    \n\n    src/database/database.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postgres'\n                    \n                \n\n\n        \n    \n\n    src/common/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_PAGE_NUMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_PAGE_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/database/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDatabaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TypeOrmModuleOptions => ({\n  type: DATABASE_TYPE,\n  url: process.env.DATABASE_URL,\n  entities: [__dirname + '/../**/*.entity.{js,ts}', '!' + __dirname + '/../elitedb/**/*.entity.{js,ts}'],\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    src/database/elite-database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEliteDatabaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TypeOrmModuleOptions => ({\n  type: DATABASE_TYPE,\n  url: process.env.ELITE_DATABASE_URL,\n  entities: [__dirname + '/../elitedb/entities/*.entity.{js,ts}'],\n  // Si on est en production, on ne veut pas synchroniser pour éviter de perdre des données\n  synchronize: false,\n})\n                    \n                \n\n\n        \n    \n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getJwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService: ConfigService): JwtModuleOptions => ({\n  secret: configService.get('JWT_SECRET'),\n  signOptions: { expiresIn: '60m' },\n})\n                    \n                \n\n\n        \n    \n\n    src/i18n/i18n.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        i18nConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I18nOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  fallbackLanguage: 'fr',\n  loaderOptions: {\n    path: join(process.cwd(), 'src/i18n'),\n    watch: true,\n  },\n  resolvers: [{ use: QueryResolver, options: ['lang'] }, AcceptLanguageResolver],\n  typesOutputPath:\n    process.env.NODE_ENV === 'production'\n      ? '/tmp/generated/i18n.generated.ts'\n      : join(process.cwd(), 'src/generated/i18n.generated.ts'),\n}\n                    \n                \n\n\n        \n    \n\n    dist/src/i18n/i18n.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        i18nConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I18nOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  fallbackLanguage: 'fr',\n  loaderOptions: {\n    path: join(process.cwd(), 'src/i18n'),\n    watch: true,\n  },\n  resolvers: [{ use: QueryResolver, options: ['lang'] }, AcceptLanguageResolver],\n  typesOutputPath:\n    process.env.NODE_ENV === 'production'\n      ? '/tmp/generated/i18n.generated.ts'\n      : join(process.cwd(), 'src/generated/i18n.generated.ts'),\n}\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle(packageJson.name)\n  .setDescription(packageJson.description)\n  .setVersion(packageJson.version)\n  .addBearerAuth(\n    {\n      type: 'http',\n      scheme: 'bearer',\n      bearerFormat: 'JWT',\n    },\n    'access-token',\n  )\n  .build()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
